{"ast":null,"code":"class DrawHelper {\n  constructor(canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n  }\n\n  drawAngleText(ctx, angle, text) {\n    let pos = this.getPosFromAngle(angle, 0);\n    let x = pos[0];\n    let y = pos[1];\n    ctx.save();\n    ctx.translate(x + 40 * Math.sin(angle - Math.PI), y + 40 * Math.cos(angle - Math.PI));\n    ctx.rotate(-angle + Math.PI);\n    ctx.textAlign = 'center';\n    ctx.fillText(text, 0, 10);\n    ctx.restore();\n  }\n\n  getPosFromAngle(angle, offset) {\n    return [this.canvas.width / 2 + Math.sin(angle) * this.radius - offset * Math.sin(angle), this.canvas.height + this.arcCenterOffsetY + Math.cos(angle) * this.radius - offset * Math.cos(angle)];\n  }\n\n  drawCompassLine(angle, length) {\n    let end = this.getPosFromAngle(angle, 0);\n    let start = this.getPosFromAngle(angle, length);\n    this.ctx.moveTo(start[0], start[1]);\n    this.ctx.lineTo(end[0], end[1]);\n  }\n\n}\n\nexport default DrawHelper;","map":{"version":3,"sources":["/home/kaappo/testit/canvas/src/components/helpers.js"],"names":["DrawHelper","constructor","canvas","ctx","drawAngleText","angle","text","pos","getPosFromAngle","x","y","save","translate","Math","sin","PI","cos","rotate","textAlign","fillText","restore","offset","width","radius","height","arcCenterOffsetY","drawCompassLine","length","end","start","moveTo","lineTo"],"mappings":"AAAA,MAAMA,UAAN,CAAiB;AACbC,EAAAA,WAAW,CAAEC,MAAF,EAAUC,GAAV,EAAe;AACtB,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,GAAL,GAAWA,GAAX;AACH;;AAEDC,EAAAA,aAAa,CAAED,GAAF,EAAOE,KAAP,EAAcC,IAAd,EAAoB;AAC7B,QAAIC,GAAG,GAAG,KAAKC,eAAL,CAAqBH,KAArB,EAA4B,CAA5B,CAAV;AACA,QAAII,CAAC,GAAGF,GAAG,CAAC,CAAD,CAAX;AACA,QAAIG,CAAC,GAAGH,GAAG,CAAC,CAAD,CAAX;AAEAJ,IAAAA,GAAG,CAACQ,IAAJ;AACAR,IAAAA,GAAG,CAACS,SAAJ,CAAcH,CAAC,GAAG,KAAKI,IAAI,CAACC,GAAL,CAAST,KAAK,GAAGQ,IAAI,CAACE,EAAtB,CAAvB,EAAkDL,CAAC,GAAG,KAAKG,IAAI,CAACG,GAAL,CAASX,KAAK,GAAGQ,IAAI,CAACE,EAAtB,CAA3D;AACAZ,IAAAA,GAAG,CAACc,MAAJ,CAAW,CAACZ,KAAD,GAASQ,IAAI,CAACE,EAAzB;AAEAZ,IAAAA,GAAG,CAACe,SAAJ,GAAgB,QAAhB;AACAf,IAAAA,GAAG,CAACgB,QAAJ,CAAab,IAAb,EAAmB,CAAnB,EAAsB,EAAtB;AAEAH,IAAAA,GAAG,CAACiB,OAAJ;AAEH;;AAEDZ,EAAAA,eAAe,CAACH,KAAD,EAAQgB,MAAR,EAAgB;AAC3B,WAAO,CAAC,KAAKnB,MAAL,CAAYoB,KAAZ,GAAoB,CAApB,GAAwBT,IAAI,CAACC,GAAL,CAAST,KAAT,IAAkB,KAAKkB,MAA/C,GAAwDF,MAAM,GAAGR,IAAI,CAACC,GAAL,CAAST,KAAT,CAAlE,EAAmF,KAAKH,MAAL,CAAYsB,MAAZ,GAAqB,KAAKC,gBAA1B,GAA6CZ,IAAI,CAACG,GAAL,CAASX,KAAT,IAAkB,KAAKkB,MAApE,GAA6EF,MAAM,GAAGR,IAAI,CAACG,GAAL,CAASX,KAAT,CAAzK,CAAP;AACH;;AAEDqB,EAAAA,eAAe,CAACrB,KAAD,EAAQsB,MAAR,EAAgB;AAC3B,QAAIC,GAAG,GAAG,KAAKpB,eAAL,CAAqBH,KAArB,EAA4B,CAA5B,CAAV;AACA,QAAIwB,KAAK,GAAG,KAAKrB,eAAL,CAAqBH,KAArB,EAA4BsB,MAA5B,CAAZ;AAEA,SAAKxB,GAAL,CAAS2B,MAAT,CAAgBD,KAAK,CAAC,CAAD,CAArB,EAA0BA,KAAK,CAAC,CAAD,CAA/B;AACA,SAAK1B,GAAL,CAAS4B,MAAT,CAAgBH,GAAG,CAAC,CAAD,CAAnB,EAAwBA,GAAG,CAAC,CAAD,CAA3B;AACH;;AAhCY;;AAoCjB,eAAe5B,UAAf","sourcesContent":["class DrawHelper {\n    constructor (canvas, ctx) {\n        this.canvas = canvas;\n        this.ctx = ctx;\n    }\n    \n    drawAngleText (ctx, angle, text) {\n        let pos = this.getPosFromAngle(angle, 0)\n        let x = pos[0];\n        let y = pos[1];\n    \n        ctx.save();\n        ctx.translate(x + 40 * Math.sin(angle - Math.PI), y + 40 * Math.cos(angle - Math.PI));\n        ctx.rotate(-angle + Math.PI);\n    \n        ctx.textAlign = 'center';\n        ctx.fillText(text, 0, 10);\n    \n        ctx.restore();\n    \n    }\n    \n    getPosFromAngle(angle, offset) {\n        return [this.canvas.width / 2 + Math.sin(angle) * this.radius - offset * Math.sin(angle), this.canvas.height + this.arcCenterOffsetY + Math.cos(angle) * this.radius - offset * Math.cos(angle)]\n    }\n\n    drawCompassLine(angle, length) {\n        let end = this.getPosFromAngle(angle, 0)\n        let start = this.getPosFromAngle(angle, length)\n\n        this.ctx.moveTo(start[0], start[1]);\n        this.ctx.lineTo(end[0], end[1]);\n    }\n}\n\n\nexport default DrawHelper"]},"metadata":{},"sourceType":"module"}