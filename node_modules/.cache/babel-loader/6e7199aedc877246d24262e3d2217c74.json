{"ast":null,"code":"import Fraction from 'fraction.js';\nimport { factory } from '../../utils/factory';\nvar name = 'Fraction';\nvar dependencies = [];\nexport var createFractionClass = /* #__PURE__ */factory(name, dependencies, function () {\n  /**\n   * Attach type information\n   */\n  Fraction.prototype.type = 'Fraction';\n  Fraction.prototype.isFraction = true;\n  /**\n   * Get a JSON representation of a Fraction containing type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n   */\n\n  Fraction.prototype.toJSON = function () {\n    return {\n      mathjs: 'Fraction',\n      n: this.s * this.n,\n      d: this.d\n    };\n  };\n  /**\n   * Instantiate a Fraction from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n   * @return {BigNumber}\n   */\n\n\n  Fraction.fromJSON = function (json) {\n    return new Fraction(json);\n  };\n\n  return Fraction;\n}, {\n  isClass: true\n});","map":{"version":3,"sources":["/home/kaappo/git/kments/node_modules/mathjs/es/type/fraction/Fraction.js"],"names":["Fraction","factory","name","dependencies","createFractionClass","prototype","type","isFraction","toJSON","mathjs","n","s","d","fromJSON","json","isClass"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,IAAIC,IAAI,GAAG,UAAX;AACA,IAAIC,YAAY,GAAG,EAAnB;AACA,OAAO,IAAIC,mBAAmB,GAAG,eAAeH,OAAO,CAACC,IAAD,EAAOC,YAAP,EAAqB,YAAY;AACtF;;;AAGAH,EAAAA,QAAQ,CAACK,SAAT,CAAmBC,IAAnB,GAA0B,UAA1B;AACAN,EAAAA,QAAQ,CAACK,SAAT,CAAmBE,UAAnB,GAAgC,IAAhC;AACA;;;;;;AAMAP,EAAAA,QAAQ,CAACK,SAAT,CAAmBG,MAAnB,GAA4B,YAAY;AACtC,WAAO;AACLC,MAAAA,MAAM,EAAE,UADH;AAELC,MAAAA,CAAC,EAAE,KAAKC,CAAL,GAAS,KAAKD,CAFZ;AAGLE,MAAAA,CAAC,EAAE,KAAKA;AAHH,KAAP;AAKD,GAND;AAOA;;;;;;;;AAQAZ,EAAAA,QAAQ,CAACa,QAAT,GAAoB,UAAUC,IAAV,EAAgB;AAClC,WAAO,IAAId,QAAJ,CAAac,IAAb,CAAP;AACD,GAFD;;AAIA,SAAOd,QAAP;AACD,CAhCsD,EAgCpD;AACDe,EAAAA,OAAO,EAAE;AADR,CAhCoD,CAAhD","sourcesContent":["import Fraction from 'fraction.js';\nimport { factory } from '../../utils/factory';\nvar name = 'Fraction';\nvar dependencies = [];\nexport var createFractionClass = /* #__PURE__ */factory(name, dependencies, function () {\n  /**\n   * Attach type information\n   */\n  Fraction.prototype.type = 'Fraction';\n  Fraction.prototype.isFraction = true;\n  /**\n   * Get a JSON representation of a Fraction containing type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n   */\n\n  Fraction.prototype.toJSON = function () {\n    return {\n      mathjs: 'Fraction',\n      n: this.s * this.n,\n      d: this.d\n    };\n  };\n  /**\n   * Instantiate a Fraction from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n   * @return {BigNumber}\n   */\n\n\n  Fraction.fromJSON = function (json) {\n    return new Fraction(json);\n  };\n\n  return Fraction;\n}, {\n  isClass: true\n});"]},"metadata":{},"sourceType":"module"}