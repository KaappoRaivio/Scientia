{"ast":null,"code":"import { factory } from '../../utils/factory';\nvar name = 'ResultSet';\nvar dependencies = [];\nexport var createResultSet = /* #__PURE__ */factory(name, dependencies, function () {\n  /**\n   * A ResultSet contains a list or results\n   * @class ResultSet\n   * @param {Array} entries\n   * @constructor ResultSet\n   */\n  function ResultSet(entries) {\n    if (!(this instanceof ResultSet)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.entries = entries || [];\n  }\n  /**\n   * Attach type information\n   */\n\n\n  ResultSet.prototype.type = 'ResultSet';\n  ResultSet.prototype.isResultSet = true;\n  /**\n   * Returns the array with results hold by this ResultSet\n   * @memberof ResultSet\n   * @returns {Array} entries\n   */\n\n  ResultSet.prototype.valueOf = function () {\n    return this.entries;\n  };\n  /**\n   * Returns the stringified results of the ResultSet\n   * @memberof ResultSet\n   * @returns {string} string\n   */\n\n\n  ResultSet.prototype.toString = function () {\n    return '[' + this.entries.join(', ') + ']';\n  };\n  /**\n   * Get a JSON representation of the ResultSet\n   * @memberof ResultSet\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n   */\n\n\n  ResultSet.prototype.toJSON = function () {\n    return {\n      mathjs: 'ResultSet',\n      entries: this.entries\n    };\n  };\n  /**\n   * Instantiate a ResultSet from a JSON object\n   * @memberof ResultSet\n   * @param {Object} json  A JSON object structured as:\n   *                       `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n   * @return {ResultSet}\n   */\n\n\n  ResultSet.fromJSON = function (json) {\n    return new ResultSet(json.entries);\n  };\n\n  return ResultSet;\n}, {\n  isClass: true\n});","map":{"version":3,"sources":["/home/kaappo/git/kments/node_modules/mathjs/es/type/resultset/ResultSet.js"],"names":["factory","name","dependencies","createResultSet","ResultSet","entries","SyntaxError","prototype","type","isResultSet","valueOf","toString","join","toJSON","mathjs","fromJSON","json","isClass"],"mappings":"AAAA,SAASA,OAAT,QAAwB,qBAAxB;AACA,IAAIC,IAAI,GAAG,WAAX;AACA,IAAIC,YAAY,GAAG,EAAnB;AACA,OAAO,IAAIC,eAAe,GAAG,eAAeH,OAAO,CAACC,IAAD,EAAOC,YAAP,EAAqB,YAAY;AAClF;;;;;;AAMA,WAASE,SAAT,CAAmBC,OAAnB,EAA4B;AAC1B,QAAI,EAAE,gBAAgBD,SAAlB,CAAJ,EAAkC;AAChC,YAAM,IAAIE,WAAJ,CAAgB,kDAAhB,CAAN;AACD;;AAED,SAAKD,OAAL,GAAeA,OAAO,IAAI,EAA1B;AACD;AACD;;;;;AAKAD,EAAAA,SAAS,CAACG,SAAV,CAAoBC,IAApB,GAA2B,WAA3B;AACAJ,EAAAA,SAAS,CAACG,SAAV,CAAoBE,WAApB,GAAkC,IAAlC;AACA;;;;;;AAMAL,EAAAA,SAAS,CAACG,SAAV,CAAoBG,OAApB,GAA8B,YAAY;AACxC,WAAO,KAAKL,OAAZ;AACD,GAFD;AAGA;;;;;;;AAOAD,EAAAA,SAAS,CAACG,SAAV,CAAoBI,QAApB,GAA+B,YAAY;AACzC,WAAO,MAAM,KAAKN,OAAL,CAAaO,IAAb,CAAkB,IAAlB,CAAN,GAAgC,GAAvC;AACD,GAFD;AAGA;;;;;;;;AAQAR,EAAAA,SAAS,CAACG,SAAV,CAAoBM,MAApB,GAA6B,YAAY;AACvC,WAAO;AACLC,MAAAA,MAAM,EAAE,WADH;AAELT,MAAAA,OAAO,EAAE,KAAKA;AAFT,KAAP;AAID,GALD;AAMA;;;;;;;;;AASAD,EAAAA,SAAS,CAACW,QAAV,GAAqB,UAAUC,IAAV,EAAgB;AACnC,WAAO,IAAIZ,SAAJ,CAAcY,IAAI,CAACX,OAAnB,CAAP;AACD,GAFD;;AAIA,SAAOD,SAAP;AACD,CApEkD,EAoEhD;AACDa,EAAAA,OAAO,EAAE;AADR,CApEgD,CAA5C","sourcesContent":["import { factory } from '../../utils/factory';\nvar name = 'ResultSet';\nvar dependencies = [];\nexport var createResultSet = /* #__PURE__ */factory(name, dependencies, function () {\n  /**\n   * A ResultSet contains a list or results\n   * @class ResultSet\n   * @param {Array} entries\n   * @constructor ResultSet\n   */\n  function ResultSet(entries) {\n    if (!(this instanceof ResultSet)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.entries = entries || [];\n  }\n  /**\n   * Attach type information\n   */\n\n\n  ResultSet.prototype.type = 'ResultSet';\n  ResultSet.prototype.isResultSet = true;\n  /**\n   * Returns the array with results hold by this ResultSet\n   * @memberof ResultSet\n   * @returns {Array} entries\n   */\n\n  ResultSet.prototype.valueOf = function () {\n    return this.entries;\n  };\n  /**\n   * Returns the stringified results of the ResultSet\n   * @memberof ResultSet\n   * @returns {string} string\n   */\n\n\n  ResultSet.prototype.toString = function () {\n    return '[' + this.entries.join(', ') + ']';\n  };\n  /**\n   * Get a JSON representation of the ResultSet\n   * @memberof ResultSet\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n   */\n\n\n  ResultSet.prototype.toJSON = function () {\n    return {\n      mathjs: 'ResultSet',\n      entries: this.entries\n    };\n  };\n  /**\n   * Instantiate a ResultSet from a JSON object\n   * @memberof ResultSet\n   * @param {Object} json  A JSON object structured as:\n   *                       `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n   * @return {ResultSet}\n   */\n\n\n  ResultSet.fromJSON = function (json) {\n    return new ResultSet(json.entries);\n  };\n\n  return ResultSet;\n}, {\n  isClass: true\n});"]},"metadata":{},"sourceType":"module"}