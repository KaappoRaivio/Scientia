{"ast":null,"code":"var _jsxFileName = \"/home/kaappo/testit/canvas/src/components/compass.js\";\nimport React from 'react';\nimport { mod } from \"mathjs\";\nimport \"/home/kaappo/testit/canvas/src/components/compass.css\";\nimport NumberDisplay from \"/home/kaappo/testit/canvas/src/components/numberdisplay.js\";\nimport DrawHelper from \"./helpers.js\";\n\nclass Compass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = {\n      width: props.width,\n      height: props.height,\n      heading: props.heading\n    };\n    this.arcCenterOffsetY = this.props.width / 2.6;\n    this.radius = this.getCircleRadius();\n    this.numberDisplay = React.createRef();\n  }\n\n  getCircleRadius() {\n    return Math.sqrt((this.props.width / 2) ** 2 + this.arcCenterOffsetY ** 2);\n  }\n\n  componentDidMount() {\n    this.canvas = this.refs.canvas;\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.drawHelper = new DrawHelper(this.canvas, this.ctx, this.arcCenterOffsetY, this.radius);\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    const ctx = this.ctx;\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height); // img.onload = () => {\n    // ctx.drawImage(img, 0, 0);\n\n    ctx.font = \"40px Courier\";\n    ctx.textAlign = \"center\";\n    ctx.beginPath();\n    ctx.arc(this.props.width / 2, this.canvas.height + this.arcCenterOffsetY, this.radius, 0, 2 * Math.PI);\n    ctx.fillRect(this.props.width / 2 - 1, this.canvas.height - this.radius + this.arcCenterOffsetY - 10, 2, 10);\n    let divisions = [12, 36, 72];\n    ctx.font = \"20px Courier\";\n\n    for (let index = 0; index < divisions.length; index++) {\n      let division = divisions[index];\n      this.drawDivision(division, ((divisions.length - index + 1) / divisions.length) ** 2 * 15, index === 0);\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n  }\n\n  drawDivision(division, length, drawNumbers) {\n    for (let i = 0; i < division; i++) {\n      let baseAngle = 2 * Math.PI / division * i;\n      let angleOffset = this.props.heading * Math.PI / 180; // ctx.fillText(this.props.heading.toFixed(2), start[0] + 5, start[1] + 5)\n\n      this.drawHelper.drawCompassLine(baseAngle + angleOffset, length);\n\n      if (drawNumbers) {\n        let angleText = mod(180 - baseAngle / Math.PI * 180, 360);\n        this.drawHelper.drawAngleText(baseAngle + angleOffset, angleText.toFixed(0));\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        width: this.props.width + \"px\",\n        height: this.props.height + \"px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(NumberDisplay, {\n      className: \"number\",\n      value: this.props.heading,\n      suffix: \"\\xB0\",\n      unit: \"T\",\n      width: this.props.width,\n      height: this.props.height / 3 * 2,\n      upperBound: 360,\n      decimalPlaces: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      className: \"compassRose\",\n      width: this.props.width,\n      height: this.props.height / 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Compass;","map":{"version":3,"sources":["/home/kaappo/testit/canvas/src/components/compass.js"],"names":["React","mod","NumberDisplay","DrawHelper","Compass","Component","constructor","props","width","height","heading","arcCenterOffsetY","radius","getCircleRadius","numberDisplay","createRef","Math","sqrt","componentDidMount","canvas","refs","ctx","getContext","drawHelper","componentDidUpdate","clearRect","font","textAlign","beginPath","arc","PI","fillRect","divisions","index","length","division","drawDivision","closePath","stroke","drawNumbers","i","baseAngle","angleOffset","drawCompassLine","angleText","drawAngleText","toFixed","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { mod } from \"mathjs\";\nimport \"/home/kaappo/testit/canvas/src/components/compass.css\"\nimport NumberDisplay from \"/home/kaappo/testit/canvas/src/components/numberdisplay.js\"\n\nimport DrawHelper from \"./helpers.js\"\n\nclass Compass extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.props = {\n            width: props.width,\n            height: props.height,\n            heading: props.heading,\n        };\n\n        this.arcCenterOffsetY = this.props.width / 2.6;\n        this.radius = this.getCircleRadius();\n\n        this.numberDisplay = React.createRef();\n\n    \n    }\n\n    getCircleRadius () {\n        return Math.sqrt((this.props.width / 2) ** 2 + this.arcCenterOffsetY ** 2)\n    }\n\n    componentDidMount() {\n        this.canvas = this.refs.canvas;\n        this.ctx = this.canvas.getContext(\"2d\");\n\n        this.drawHelper = new DrawHelper(this.canvas, this.ctx, this.arcCenterOffsetY, this.radius);\n        this.componentDidUpdate();        \n    }\n\n\n    componentDidUpdate () {\n        const ctx = this.ctx;\n\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        // img.onload = () => {\n        // ctx.drawImage(img, 0, 0);\n        ctx.font = \"40px Courier\";\n        ctx.textAlign = \"center\";\n\n        ctx.beginPath();\n        ctx.arc(this.props.width / 2, this.canvas.height + this.arcCenterOffsetY, this.radius, 0, 2 * Math.PI);\n        ctx.fillRect(this.props.width / 2 - 1, this.canvas.height - this.radius + this.arcCenterOffsetY - 10, 2, 10)\n\n        let divisions = [12, 36, 72];\n        ctx.font = \"20px Courier\";\n        for (let index = 0; index < divisions.length; index++) {\n            let division = divisions[index]\n            this.drawDivision(division, ((divisions.length - index + 1) / divisions.length) ** 2 * 15, index === 0);\n        }\n\n        ctx.closePath();\n        ctx.stroke();\n    }\n\n    drawDivision (division, length, drawNumbers) {\n        for (let i = 0; i < division; i++) {\n            let baseAngle = 2 * Math.PI / division * i;\n            let angleOffset = this.props.heading * Math.PI / 180;\n\n\n            // ctx.fillText(this.props.heading.toFixed(2), start[0] + 5, start[1] + 5)\n            this.drawHelper.drawCompassLine(baseAngle + angleOffset, length)\n            if (drawNumbers) {\n                let angleText = mod(180 - baseAngle / Math.PI * 180, 360);\n                this.drawHelper.drawAngleText(baseAngle + angleOffset, angleText.toFixed(0))\n            }\n        }\n    }\n\n    render () {\n        return <div className=\"container\" style={{width: this.props.width + \"px\", height: this.props.height + \"px\"}}>\n            <NumberDisplay className=\"number\" value={this.props.heading} suffix=\"°\" unit=\"T\" width={this.props.width} height={this.props.height / 3 * 2} upperBound={360} decimalPlaces={1} />            \n            <canvas ref=\"canvas\" className=\"compassRose\" width={this.props.width} height={this.props.height / 3} />\n        </div>\n    }\n}\n\nexport default Compass"]},"metadata":{},"sourceType":"module"}