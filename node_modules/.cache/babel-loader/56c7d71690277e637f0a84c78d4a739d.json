{"ast":null,"code":"var _jsxFileName = \"/home/kaappo/testit/canvas/src/components/wind.js\";\nimport React from 'react';\nimport { mod } from \"mathjs\";\nimport NumberDisplay from \"/home/kaappo/testit/canvas/src/components/numberdisplay.js\";\nimport DrawHelper from './helpers';\n\nclass Wind extends React.Component {\n  componentDidMount() {\n    this.canvas = this.refs.canvas;\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.drawHelper = new DrawHelper(this.canvas, this.ctx);\n    const ctx = this.ctx;\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    ctx.beginPath();\n    ctx.arc(this.canvas.width / 2, this.canvas.height / 2, this.canvas.width / 2, 0, 2 * Math.PI); // ctx.fillRect(this.props.width / 2 - 1, this.canvas.height - this.radius + this.arcCenterOffsetY - 10, 2, 10)\n\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    const ctx = this.ctx; // let divisions = [12, 36, 72];\n    // ctx.font = \"20px Courier\";\n    // for (let index = 0; index < divisions.length; index++) {\n    //     let division = divisions[index]\n    //     this.drawDivision(division, ((divisions.length - index + 1) / divisions.length) ** 2 * 15, index === 0);\n    // }\n\n    ctx.closePath();\n    ctx.stroke();\n  }\n\n  drawDivision(division, length, drawNumbers) {\n    for (let i = 0; i < division; i++) {\n      let baseAngle = 2 * Math.PI / division * i;\n      let angleOffset = this.props.heading * Math.PI / 180;\n      this.drawHelper.drawCompassLine(baseAngle + angleOffset, length);\n\n      if (drawNumbers) {\n        let angleText = mod(180 - baseAngle / Math.PI * 180, 360);\n        this.drawHelper.drawAngleText(baseAngle + angleOffset, angleText.toFixed(0));\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        width: this.props.width + \"px\",\n        height: this.props.height + \"px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      className: \"compassRose\",\n      width: this.props.width,\n      height: this.props.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Wind;","map":{"version":3,"sources":["/home/kaappo/testit/canvas/src/components/wind.js"],"names":["React","mod","NumberDisplay","DrawHelper","Wind","Component","componentDidMount","canvas","refs","ctx","getContext","drawHelper","clearRect","width","height","beginPath","arc","Math","PI","componentDidUpdate","closePath","stroke","drawDivision","division","length","drawNumbers","i","baseAngle","angleOffset","props","heading","drawCompassLine","angleText","drawAngleText","toFixed","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,GAAT,QAAoB,QAApB;AACA,OAAOC,aAAP,MAA0B,4DAA1B;AACA,OAAOC,UAAP,MAAuB,WAAvB;;AAGA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAE/BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,MAAL,GAAc,KAAKC,IAAL,CAAUD,MAAxB;AACA,SAAKE,GAAL,GAAW,KAAKF,MAAL,CAAYG,UAAZ,CAAuB,IAAvB,CAAX;AACA,SAAKC,UAAL,GAAkB,IAAIR,UAAJ,CAAe,KAAKI,MAApB,EAA4B,KAAKE,GAAjC,CAAlB;AAEA,UAAMA,GAAG,GAAG,KAAKA,GAAjB;AAEAA,IAAAA,GAAG,CAACG,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,KAAKL,MAAL,CAAYM,KAAhC,EAAuC,KAAKN,MAAL,CAAYO,MAAnD;AACAL,IAAAA,GAAG,CAACM,SAAJ;AACAN,IAAAA,GAAG,CAACO,GAAJ,CAAQ,KAAKT,MAAL,CAAYM,KAAZ,GAAoB,CAA5B,EAA+B,KAAKN,MAAL,CAAYO,MAAZ,GAAqB,CAApD,EAAuD,KAAKP,MAAL,CAAYM,KAAZ,GAAoB,CAA3E,EAA8E,CAA9E,EAAiF,IAAII,IAAI,CAACC,EAA1F,EATgB,CAUhB;;AAEA,SAAKC,kBAAL;AACH;;AAGDA,EAAAA,kBAAkB,GAAG;AACjB,UAAMV,GAAG,GAAG,KAAKA,GAAjB,CADiB,CAMjB;AACA;AACA;AACA;AACA;AACA;;AAEAA,IAAAA,GAAG,CAACW,SAAJ;AACAX,IAAAA,GAAG,CAACY,MAAJ;AACH;;AAEDC,EAAAA,YAAY,CAACC,QAAD,EAAWC,MAAX,EAAmBC,WAAnB,EAAgC;AACxC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAApB,EAA8BG,CAAC,EAA/B,EAAmC;AAC/B,UAAIC,SAAS,GAAG,IAAIV,IAAI,CAACC,EAAT,GAAcK,QAAd,GAAyBG,CAAzC;AACA,UAAIE,WAAW,GAAG,KAAKC,KAAL,CAAWC,OAAX,GAAqBb,IAAI,CAACC,EAA1B,GAA+B,GAAjD;AAGA,WAAKP,UAAL,CAAgBoB,eAAhB,CAAgCJ,SAAS,GAAGC,WAA5C,EAAyDJ,MAAzD;;AACA,UAAIC,WAAJ,EAAiB;AACb,YAAIO,SAAS,GAAG/B,GAAG,CAAC,MAAM0B,SAAS,GAAGV,IAAI,CAACC,EAAjB,GAAsB,GAA7B,EAAkC,GAAlC,CAAnB;AACA,aAAKP,UAAL,CAAgBsB,aAAhB,CAA8BN,SAAS,GAAGC,WAA1C,EAAuDI,SAAS,CAACE,OAAV,CAAkB,CAAlB,CAAvD;AACH;AACJ;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAE;AAAEtB,QAAAA,KAAK,EAAE,KAAKgB,KAAL,CAAWhB,KAAX,GAAmB,IAA5B;AAAkCC,QAAAA,MAAM,EAAE,KAAKe,KAAL,CAAWf,MAAX,GAAoB;AAA9D,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYH;AAAQ,MAAA,GAAG,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,aAA/B;AAA6C,MAAA,KAAK,EAAE,KAAKe,KAAL,CAAWhB,KAA/D;AAAsE,MAAA,MAAM,EAAE,KAAKgB,KAAL,CAAWf,MAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZG,CAAP;AAcH;;AAhE8B;;AAmEnC,eAAeV,IAAf","sourcesContent":["import React from 'react';\n\nimport { mod } from \"mathjs\";\nimport NumberDisplay from \"/home/kaappo/testit/canvas/src/components/numberdisplay.js\"\nimport DrawHelper from './helpers';\n\n\nclass Wind extends React.Component {\n\n    componentDidMount() {\n        this.canvas = this.refs.canvas;\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.drawHelper = new DrawHelper(this.canvas, this.ctx);\n\n        const ctx = this.ctx;\n\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.beginPath();\n        ctx.arc(this.canvas.width / 2, this.canvas.height / 2, this.canvas.width / 2, 0, 2 * Math.PI);\n        // ctx.fillRect(this.props.width / 2 - 1, this.canvas.height - this.radius + this.arcCenterOffsetY - 10, 2, 10)\n\n        this.componentDidUpdate();\n    }\n\n\n    componentDidUpdate() {\n        const ctx = this.ctx;\n\n\n        \n\n        // let divisions = [12, 36, 72];\n        // ctx.font = \"20px Courier\";\n        // for (let index = 0; index < divisions.length; index++) {\n        //     let division = divisions[index]\n        //     this.drawDivision(division, ((divisions.length - index + 1) / divisions.length) ** 2 * 15, index === 0);\n        // }\n\n        ctx.closePath();\n        ctx.stroke();\n    }\n\n    drawDivision(division, length, drawNumbers) {\n        for (let i = 0; i < division; i++) {\n            let baseAngle = 2 * Math.PI / division * i;\n            let angleOffset = this.props.heading * Math.PI / 180;\n\n\n            this.drawHelper.drawCompassLine(baseAngle + angleOffset, length)\n            if (drawNumbers) {\n                let angleText = mod(180 - baseAngle / Math.PI * 180, 360);\n                this.drawHelper.drawAngleText(baseAngle + angleOffset, angleText.toFixed(0))\n            }\n        }\n    }\n\n    render() {\n        return <div className=\"container\" style={{ width: this.props.width + \"px\", height: this.props.height + \"px\" }}>\n            {/* <NumberDisplay\n                className=\"number\"\n                value={this.props.heading}\n                suffix=\"Â°\"\n                unit=\"T\"\n                width={this.props.width}\n                height={this.props.height / 3 * 2}\n                upperBound={360}\n                decimalPlaces={1}\n                fontSize={this.props.width / 4}\n            /> */}\n            <canvas ref=\"canvas\" className=\"compassRose\" width={this.props.width} height={this.props.height} />\n        </div>\n    }\n}\n\nexport default Wind"]},"metadata":{},"sourceType":"module"}