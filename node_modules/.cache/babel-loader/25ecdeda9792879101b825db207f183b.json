{"ast":null,"code":"/**\n * Create a syntax error with the message:\n *     'Wrong number of arguments in function <fn> (<count> provided, <min>-<max> expected)'\n * @param {string} fn     Function name\n * @param {number} count  Actual argument count\n * @param {number} min    Minimum required argument count\n * @param {number} [max]  Maximum required argument count\n * @extends Error\n */\nexport function ArgumentsError(fn, count, min, max) {\n  if (!(this instanceof ArgumentsError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.fn = fn;\n  this.count = count;\n  this.min = min;\n  this.max = max;\n  this.message = 'Wrong number of arguments in function ' + fn + ' (' + count + ' provided, ' + min + (max !== undefined && max !== null ? '-' + max : '') + ' expected)';\n  this.stack = new Error().stack;\n}\nArgumentsError.prototype = new Error();\nArgumentsError.prototype.constructor = Error;\nArgumentsError.prototype.name = 'ArgumentsError';\nArgumentsError.prototype.isArgumentsError = true;","map":{"version":3,"sources":["/home/kaappo/testit/canvas/node_modules/mathjs/es/error/ArgumentsError.js"],"names":["ArgumentsError","fn","count","min","max","SyntaxError","message","undefined","stack","Error","prototype","constructor","name","isArgumentsError"],"mappings":"AAAA;;;;;;;;;AASA,OAAO,SAASA,cAAT,CAAwBC,EAAxB,EAA4BC,KAA5B,EAAmCC,GAAnC,EAAwCC,GAAxC,EAA6C;AAClD,MAAI,EAAE,gBAAgBJ,cAAlB,CAAJ,EAAuC;AACrC,UAAM,IAAIK,WAAJ,CAAgB,kDAAhB,CAAN;AACD;;AAED,OAAKJ,EAAL,GAAUA,EAAV;AACA,OAAKC,KAAL,GAAaA,KAAb;AACA,OAAKC,GAAL,GAAWA,GAAX;AACA,OAAKC,GAAL,GAAWA,GAAX;AACA,OAAKE,OAAL,GAAe,2CAA2CL,EAA3C,GAAgD,IAAhD,GAAuDC,KAAvD,GAA+D,aAA/D,GAA+EC,GAA/E,IAAsFC,GAAG,KAAKG,SAAR,IAAqBH,GAAG,KAAK,IAA7B,GAAoC,MAAMA,GAA1C,GAAgD,EAAtI,IAA4I,YAA3J;AACA,OAAKI,KAAL,GAAa,IAAIC,KAAJ,GAAYD,KAAzB;AACD;AACDR,cAAc,CAACU,SAAf,GAA2B,IAAID,KAAJ,EAA3B;AACAT,cAAc,CAACU,SAAf,CAAyBC,WAAzB,GAAuCF,KAAvC;AACAT,cAAc,CAACU,SAAf,CAAyBE,IAAzB,GAAgC,gBAAhC;AACAZ,cAAc,CAACU,SAAf,CAAyBG,gBAAzB,GAA4C,IAA5C","sourcesContent":["/**\n * Create a syntax error with the message:\n *     'Wrong number of arguments in function <fn> (<count> provided, <min>-<max> expected)'\n * @param {string} fn     Function name\n * @param {number} count  Actual argument count\n * @param {number} min    Minimum required argument count\n * @param {number} [max]  Maximum required argument count\n * @extends Error\n */\nexport function ArgumentsError(fn, count, min, max) {\n  if (!(this instanceof ArgumentsError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.fn = fn;\n  this.count = count;\n  this.min = min;\n  this.max = max;\n  this.message = 'Wrong number of arguments in function ' + fn + ' (' + count + ' provided, ' + min + (max !== undefined && max !== null ? '-' + max : '') + ' expected)';\n  this.stack = new Error().stack;\n}\nArgumentsError.prototype = new Error();\nArgumentsError.prototype.constructor = Error;\nArgumentsError.prototype.name = 'ArgumentsError';\nArgumentsError.prototype.isArgumentsError = true;"]},"metadata":{},"sourceType":"module"}