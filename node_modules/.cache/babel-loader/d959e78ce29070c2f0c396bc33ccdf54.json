{"ast":null,"code":"var _jsxFileName = \"/home/kaappo/testit/canvas/src/components/wind.js\";\nimport React from 'react';\nimport { mod } from \"mathjs\";\nimport NumberDisplay from \"./numberdisplay.js\";\nimport DrawHelper from './helpers'; // import \"./wind.css\"\n\nclass Wind extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = {};\n    this.state = {\n      closeHaulAngle: 30\n    };\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.canvas_background;\n    const ctx = canvas.getContext(\"2d\");\n    const canvas_update = this.refs.canvas_update;\n    const ctx_update = canvas_update.getContext(\"2d\");\n    this.data = {\n      canvas_background: canvas,\n      ctx_background: ctx,\n      canvas_update: canvas_update,\n      ctx_update: ctx_update,\n      drawHelper: new DrawHelper(canvas, ctx),\n      compassLineMaxLength: 10,\n      origin: [canvas.width / 2, canvas.height / 2],\n      radius: canvas.width / 2.1,\n      image: new Image()\n    };\n    const data = this.data;\n    this.data.image.src = \"http://upload.wikimedia.org/wikipedia/commons/d/d2/Svg_example_square.svg\";\n    console.log(this.data); // const canvas = this.data.canvas;\n\n    this.data.image.onload = function () {\n      ctx.drawImage(data.image, 0, 0);\n    };\n\n    ctx.beginPath();\n    ctx.arc(canvas.width / 2, canvas.height / 2, this.data.radius, 0, 2 * Math.PI);\n    const divisions = [[24, 10], [72, 5]];\n\n    for (const division of divisions) {\n      this.drawDivision(division[0], division[1], division[0] === 24);\n    }\n\n    ctx.closePath();\n    ctx.stroke(); // this.interval = setInterval(() => this.setState((state) => {\n    //     return { closeHaulAngle: (state.closeHaulAngle + 1) % 360 };\n    // }), 100);\n\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    const ctx = this.data.ctx_update;\n    const canvas = this.data.canvas_update;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    this.drawCloseHaulMarks(); // let divisions = [12, 36, 72];\n    // ctx.font = \"20px Courier\";\n    // for (let index = 0; index < divisions.length; index++) {\n    //     let division = divisions[index]\n    //     this.drawDivision(division, ((divisions.length - index + 1) / divisions.length) ** 2 * 15, index === 0);\n    // }\n  }\n\n  drawDivision(division, length, drawNumbers) {\n    for (let i = 0; i < division; i++) {\n      let baseAngle = 2 * Math.PI / division * i; // let angleOffset = this.props.heading * Math.PI / 180;\n\n      let angleOffset = 0;\n      this.data.drawHelper.drawCompassLine(this.data.origin, baseAngle + angleOffset, this.data.radius, length);\n\n      if (drawNumbers) {\n        let angleText = baseAngle / Math.PI * 180 <= 180 ? mod(baseAngle / Math.PI * 180, 360) : mod(360 - baseAngle / Math.PI * 180, 360);\n        this.data.drawHelper.drawAngleText(this.data.origin, baseAngle + angleOffset, this.data.radius - length, angleText.toFixed(0), true);\n      }\n    }\n  }\n\n  drawCloseHaulMarks() {\n    const ctx = this.data.ctx_update;\n    ctx.beginPath();\n    ctx.fillStyle = \"rgba(0, 200, 0, 0.75)\";\n    ctx.arc(this.data.origin[0], this.data.origin[1], this.data.radius, -Math.PI / 2, (90 - this.state.closeHaulAngle) / 180 * -Math.PI, false);\n    ctx.arc(this.data.origin[0], this.data.origin[1], this.data.radius - this.data.compassLineMaxLength, (90 - this.state.closeHaulAngle) / 180 * -Math.PI, -Math.PI / 2, true);\n    ctx.closePath();\n    ctx.fill();\n    ctx.beginPath();\n    ctx.fillStyle = \"rgba(255, 150, 125, 0.75)\";\n    ctx.arc(this.data.origin[0], this.data.origin[1], this.data.radius, -Math.PI - (90 - this.state.closeHaulAngle) / 180 * -Math.PI, -Math.PI / 2, false);\n    ctx.arc(this.data.origin[0], this.data.origin[1], this.data.radius - this.data.compassLineMaxLength, -Math.PI / 2, -Math.PI - (90 - this.state.closeHaulAngle) / 180 * -Math.PI, true);\n    ctx.closePath();\n    ctx.fill();\n  } // drawDivision(division, length, drawNumbers) {\n  //     for (let i = 0; i < division; i++) {\n  //         let baseAngle = 2 * Math.PI / division * i;\n  //         let angleOffset = -this.props.heading * Math.PI / 180;\n  //         this.drawHelper.drawCompassLine(this.origin, baseAngle + angleOffset, this.radius, length)\n  //         if (drawNumbers) {\n  //             let angleText = mod(baseAngle / Math.PI * 180, 360);\n  //             this.drawHelper.drawAngleText(this.origin, baseAngle + angleOffset, this.radius - length, angleText.toFixed(0))\n  //         }\n  //     }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        width: this.props.width + \"px\",\n        height: this.props.height + \"px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas_update\",\n      className: \"compassRose\",\n      width: this.props.width,\n      height: this.props.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas_background\",\n      className: \"compassRose\",\n      width: this.props.width,\n      height: this.props.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Wind;","map":{"version":3,"sources":["/home/kaappo/testit/canvas/src/components/wind.js"],"names":["React","mod","NumberDisplay","DrawHelper","Wind","Component","constructor","props","data","state","closeHaulAngle","componentDidMount","canvas","refs","canvas_background","ctx","getContext","canvas_update","ctx_update","ctx_background","drawHelper","compassLineMaxLength","origin","width","height","radius","image","Image","src","console","log","onload","drawImage","beginPath","arc","Math","PI","divisions","division","drawDivision","closePath","stroke","componentDidUpdate","clearRect","drawCloseHaulMarks","length","drawNumbers","i","baseAngle","angleOffset","drawCompassLine","angleText","drawAngleText","toFixed","fillStyle","fill","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { mod } from \"mathjs\";\nimport NumberDisplay from \"./numberdisplay.js\"\nimport DrawHelper from './helpers';\n// import \"./wind.css\"\n\n\nclass Wind extends React.Component {\n    constructor (props) {\n        super(props);\n        this.data = {}\n\n        this.state = {\n            closeHaulAngle: 30\n        }\n\n    }\n\n    componentDidMount() {\n        const canvas = this.refs.canvas_background;\n        const ctx = canvas.getContext(\"2d\");\n\n        const canvas_update = this.refs.canvas_update;\n        const ctx_update = canvas_update.getContext(\"2d\");\n\n        this.data = {\n\n            canvas_background: canvas,\n            ctx_background: ctx,\n\n            canvas_update: canvas_update,\n            ctx_update: ctx_update,\n\n            drawHelper: new DrawHelper(canvas, ctx),\n            \n            compassLineMaxLength: 10,\n            origin: [canvas.width / 2, canvas.height / 2],\n            radius: canvas.width / 2.1,\n\n            image: new Image()\n        };\n        const data = this.data;\n        \n        this.data.image.src = \"http://upload.wikimedia.org/wikipedia/commons/d/d2/Svg_example_square.svg\";\n\n        console.log(this.data);\n\n        // const canvas = this.data.canvas;\n        this.data.image.onload = function () {\n            ctx.drawImage(data.image, 0, 0)\n        }\n\n        ctx.beginPath();\n        ctx.arc(canvas.width / 2, canvas.height / 2, this.data.radius, 0, 2 * Math.PI);\n\n        const divisions = [[24, 10], [72, 5]];\n        for (const division of divisions) {\n            this.drawDivision(division[0], division[1], division[0] === 24);\n        }\n            \n        \n        ctx.closePath();\n        ctx.stroke();\n        \n\n        // this.interval = setInterval(() => this.setState((state) => {\n        //     return { closeHaulAngle: (state.closeHaulAngle + 1) % 360 };\n        // }), 100);\n\n        this.componentDidUpdate();\n    }\n\n\n    componentDidUpdate() {\n        const ctx = this.data.ctx_update;\n        const canvas = this.data.canvas_update;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        this.drawCloseHaulMarks();\n\n        // let divisions = [12, 36, 72];\n        // ctx.font = \"20px Courier\";\n        // for (let index = 0; index < divisions.length; index++) {\n        //     let division = divisions[index]\n        //     this.drawDivision(division, ((divisions.length - index + 1) / divisions.length) ** 2 * 15, index === 0);\n        // }\n    }\n\n    drawDivision(division, length, drawNumbers) {\n        for (let i = 0; i < division; i++) {\n            let baseAngle = 2 * Math.PI / division * i;\n            // let angleOffset = this.props.heading * Math.PI / 180;\n            let angleOffset = 0;\n\n            this.data.drawHelper.drawCompassLine(this.data.origin, baseAngle + angleOffset, this.data.radius, length)\n            if (drawNumbers) {\n                let angleText = baseAngle / Math.PI * 180 <= 180 ? mod(baseAngle / Math.PI * 180, 360) : mod(360 - baseAngle / Math.PI * 180, 360);\n                this.data.drawHelper.drawAngleText(this.data.origin, baseAngle + angleOffset, this.data.radius - length, angleText.toFixed(0), true)\n            }\n        }\n    }\n\n    drawCloseHaulMarks () {\n        const ctx = this.data.ctx_update;\n        ctx.beginPath();\n        ctx.fillStyle = \"rgba(0, 200, 0, 0.75)\"\n        ctx.arc(this.data.origin[0], this.data.origin[1], this.data.radius, -Math.PI / 2, (90 - this.state.closeHaulAngle) / 180 * -Math.PI, false);\n        ctx.arc(this.data.origin[0], this.data.origin[1], this.data.radius - this.data.compassLineMaxLength, (90 - this.state.closeHaulAngle) / 180 * -Math.PI, -Math.PI / 2, true);\n        ctx.closePath();\n        ctx.fill();\n        \n        ctx.beginPath();\n        ctx.fillStyle = \"rgba(255, 150, 125, 0.75)\"\n        ctx.arc(this.data.origin[0], this.data.origin[1], this.data.radius, -Math.PI - (90 - this.state.closeHaulAngle) / 180 * -Math.PI, -Math.PI / 2, false);\n        ctx.arc(this.data.origin[0], this.data.origin[1], this.data.radius - this.data.compassLineMaxLength, -Math.PI / 2, -Math.PI - (90 - this.state.closeHaulAngle) / 180 * -Math.PI, true);\n        ctx.closePath();\n        ctx.fill();\n\n\n    }\n\n\n    // drawDivision(division, length, drawNumbers) {\n    //     for (let i = 0; i < division; i++) {\n    //         let baseAngle = 2 * Math.PI / division * i;\n    //         let angleOffset = -this.props.heading * Math.PI / 180;\n\n\n    //         this.drawHelper.drawCompassLine(this.origin, baseAngle + angleOffset, this.radius, length)\n    //         if (drawNumbers) {\n    //             let angleText = mod(baseAngle / Math.PI * 180, 360);\n    //             this.drawHelper.drawAngleText(this.origin, baseAngle + angleOffset, this.radius - length, angleText.toFixed(0))\n    //         }\n    //     }\n    // }\n    render() {\n        return <div className=\"container\" style={{ width: this.props.width + \"px\", height: this.props.height + \"px\" }}>\n            {/* <NumberDisplay\n                className=\"number\"\n                value={this.props.heading}\n                suffix=\"°\"\n                unit=\"T\"\n                width={this.props.width}\n                height={this.props.height / 3 * 2}\n                upperBound={360}\n                decimalPlaces={1}\n                fontSize={this.props.width / 4}\n            /> */}\n            <canvas ref=\"canvas_update\" className=\"compassRose\" width={this.props.width} height={this.props.height} />\n            <canvas ref=\"canvas_background\" className=\"compassRose\" width={this.props.width} height={this.props.height} />\n        </div>\n    }\n}\n\nexport default Wind"]},"metadata":{},"sourceType":"module"}