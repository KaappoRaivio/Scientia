{"ast":null,"code":"var _jsxFileName = \"/home/kaappo/testit/canvas/src/components/numberdisplay.js\";\nimport React from 'react';\nimport \"/home/kaappo/testit/canvas/src/components/numberdisplay.css\";\n\nclass NumberDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = {\n      value: props.value,\n      suffix: props.suffix,\n      unit: props.unit,\n      upperBound: props.upperBound,\n      decimalPlaces: props.decimalPlaces,\n      width: props.width,\n      height: props.height\n    };\n  }\n\n  componentDidMount() {\n    this.canvas = this.refs.canvas;\n    const ctx = this.canvas.getContext(\"2d\");\n    ctx.fillRect(0, 0, 10, 10);\n    ctx.font = \"40px Courier\";\n    let size = ctx.measureText(this.props.upperBound.fixedTo(this.props.decimalPlaces) + this.props.suffix + this.props.unit);\n    console.log(size);\n    ctx.fillText(this.props.upperBound + this.props.suffix + this.props.unit, (this.canvas.width - size.width) / 2, (this.canvas.height + size.actualBoundingBoxAscent) / 2);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"displayContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      width: this.props.width,\n      height: this.props.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default NumberDisplay;","map":{"version":3,"sources":["/home/kaappo/testit/canvas/src/components/numberdisplay.js"],"names":["React","NumberDisplay","Component","constructor","props","value","suffix","unit","upperBound","decimalPlaces","width","height","componentDidMount","canvas","refs","ctx","getContext","fillRect","font","size","measureText","fixedTo","console","log","fillText","actualBoundingBoxAscent","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,6DAAP;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKA,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAED,KAAK,CAACC,KADJ;AAETC,MAAAA,MAAM,EAAEF,KAAK,CAACE,MAFL;AAGTC,MAAAA,IAAI,EAAEH,KAAK,CAACG,IAHH;AAITC,MAAAA,UAAU,EAAEJ,KAAK,CAACI,UAJT;AAKTC,MAAAA,aAAa,EAAEL,KAAK,CAACK,aALZ;AAOTC,MAAAA,KAAK,EAAEN,KAAK,CAACM,KAPJ;AAQTC,MAAAA,MAAM,EAAEP,KAAK,CAACO;AARL,KAAb;AAWH;;AAEDC,EAAAA,iBAAiB,GAAI;AACjB,SAAKC,MAAL,GAAc,KAAKC,IAAL,CAAUD,MAAxB;AACA,UAAME,GAAG,GAAG,KAAKF,MAAL,CAAYG,UAAZ,CAAuB,IAAvB,CAAZ;AAEAD,IAAAA,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,EAAnB,EAAuB,EAAvB;AACAF,IAAAA,GAAG,CAACG,IAAJ,GAAW,cAAX;AAEA,QAAIC,IAAI,GAAGJ,GAAG,CAACK,WAAJ,CAAgB,KAAKhB,KAAL,CAAWI,UAAX,CAAsBa,OAAtB,CAA8B,KAAKjB,KAAL,CAAWK,aAAzC,IAA0D,KAAKL,KAAL,CAAWE,MAArE,GAA8E,KAAKF,KAAL,CAAWG,IAAzG,CAAX;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAJ,IAAAA,GAAG,CAACS,QAAJ,CAAa,KAAKpB,KAAL,CAAWI,UAAX,GAAwB,KAAKJ,KAAL,CAAWE,MAAnC,GAA4C,KAAKF,KAAL,CAAWG,IAApE,EAA0E,CAAC,KAAKM,MAAL,CAAYH,KAAZ,GAAoBS,IAAI,CAACT,KAA1B,IAAmC,CAA7G,EAAgH,CAAC,KAAKG,MAAL,CAAYF,MAAZ,GAAqBQ,IAAI,CAACM,uBAA3B,IAAsD,CAAtK;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,GAAG,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWM,KAAvC;AAA8C,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWO,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAnCuC;;AAsC5C,eAAeV,aAAf","sourcesContent":["import React from 'react';\n\nimport \"/home/kaappo/testit/canvas/src/components/numberdisplay.css\";\n\nclass NumberDisplay extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.props = {\n            value: props.value,\n            suffix: props.suffix,\n            unit: props.unit,\n            upperBound: props.upperBound,\n            decimalPlaces: props.decimalPlaces,\n\n            width: props.width,\n            height: props.height,\n\n        }\n    }\n\n    componentDidMount () {\n        this.canvas = this.refs.canvas;\n        const ctx = this.canvas.getContext(\"2d\");\n\n        ctx.fillRect(0, 0, 10, 10)\n        ctx.font = \"40px Courier\"\n\n        let size = ctx.measureText(this.props.upperBound.fixedTo(this.props.decimalPlaces) + this.props.suffix + this.props.unit);\n        console.log(size)\n        ctx.fillText(this.props.upperBound + this.props.suffix + this.props.unit, (this.canvas.width - size.width) / 2, (this.canvas.height + size.actualBoundingBoxAscent) / 2)\n    }\n\n    render() {\n        return (\n            <div className=\"displayContainer\">\n                <canvas ref=\"canvas\" width={this.props.width} height={this.props.height}/>\n            </div>\n        );\n    }\n}\n\nexport default NumberDisplay;\n"]},"metadata":{},"sourceType":"module"}