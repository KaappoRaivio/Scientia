{"ast":null,"code":"var _jsxFileName = \"/home/kaappo/testit/canvas/src/components/compass.js\";\nimport React from 'react';\nconst cheese = \"https://upload.wikimedia.org/wikipedia/commons/a/a4/Kaastekoop.jpg\";\n\nclass Compass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = {\n      width: props.width,\n      height: props.height,\n      heading: props.heading\n    };\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.canvas;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.rect(0, 0, this.props.width, this.props.height);\n    ctx.clearRect(0, 0, canvas.width, canvas.height); // img.onload = () => {\n    // ctx.drawImage(img, 0, 0);\n\n    ctx.font = \"40px Courier\";\n    ctx.fillText(this.props.heading.toFixed(2), this.props.width / 2, this.props.height);\n    ctx.beginPath();\n    ctx.arc(this.props.width / 2, this.props.height, this.props.width / 2, 0, 2 * Math.PI);\n    ctx.fillRect(this.props.width / 2 - 1, this.props.height / 2 - 10, 2, 10);\n    let divisions = [12, 36, 72];\n    ctx.font = \"20px Courier\";\n\n    for (let index = 0; index < divisions.length; index++) {\n      let division = divisions[index];\n\n      for (let i = 0; i < division; i++) {\n        let baseAngle = 2 * Math.PI / division * i;\n        let angleOffset = this.props.heading * Math.PI / 180;\n        console.log(baseAngle); // ctx.fillText(this.props.heading.toFixed(2), start[0] + 5, start[1] + 5)\n\n        this.drawCompassLine(ctx, baseAngle + angleOffset, 1 / (index + 2) ** 2);\n\n        if (index == 0) {\n          let angleText = (180 - baseAngle / Math.PI * 180) % 360;\n          this.drawAngleText(ctx, baseAngle + angleOffset, angleText.toFixed(0));\n        }\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke(); // }\n  }\n\n  getPosFromAngle(angle) {\n    return [this.props.width / 2 + Math.sin(angle) * this.props.width / 2, this.props.height + Math.cos(angle) * this.props.width / 2];\n  }\n\n  drawAngleText(ctx, angle, text) {\n    let pos = this.getPosFromAngle(angle);\n    let x = pos[0];\n    let y = pos[1];\n    ctx.save();\n    ctx.translate(x + 50 * Math.sin(angle - Math.PI), y + 50 * Math.cos(angle - Math.PI));\n    ctx.rotate(-angle + Math.PI);\n    ctx.textAlign = 'center';\n    ctx.fillText(text, 0, 10);\n    ctx.restore();\n  }\n\n  drawCompassLine(ctx, angle, length) {\n    let start = [this.props.width / 2 + Math.sin(angle) * this.props.width / (2 + length), this.props.height + Math.cos(angle) * this.props.width / (2 + length)];\n    let end = [this.props.width / 2 + Math.sin(angle) * this.props.width / 2, this.props.height + Math.cos(angle) * this.props.width / 2];\n    ctx.moveTo(start[0], start[1]);\n    ctx.lineTo(end[0], end[1]);\n  }\n\n  componentDidUpdate() {\n    this.componentDidMount();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      width: this.props.width,\n      height: this.props.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      ref: \"image\",\n      src: cheese,\n      className: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Compass;","map":{"version":3,"sources":["/home/kaappo/testit/canvas/src/components/compass.js"],"names":["React","cheese","Compass","Component","constructor","props","width","height","heading","componentDidMount","canvas","refs","ctx","getContext","rect","clearRect","font","fillText","toFixed","beginPath","arc","Math","PI","fillRect","divisions","index","length","division","i","baseAngle","angleOffset","console","log","drawCompassLine","angleText","drawAngleText","closePath","stroke","getPosFromAngle","angle","sin","cos","text","pos","x","y","save","translate","rotate","textAlign","restore","start","end","moveTo","lineTo","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst cheese = \"https://upload.wikimedia.org/wikipedia/commons/a/a4/Kaastekoop.jpg\"\n\nclass Compass extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.props = {\n            width: props.width,\n            height: props.height,\n            heading: props.heading\n        };\n    }\n\n    componentDidMount() {\n        const canvas = this.refs.canvas;\n        const ctx = canvas.getContext(\"2d\");\n        \n        ctx.rect(0, 0, this.props.width, this.props.height)\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        // img.onload = () => {\n            // ctx.drawImage(img, 0, 0);\n        ctx.font = \"40px Courier\";\n        ctx.fillText(this.props.heading.toFixed(2), this.props.width / 2, this.props.height);\n\n        ctx.beginPath();\n        ctx.arc(this.props.width / 2, this.props.height, this.props.width / 2, 0, 2 * Math.PI);\n        ctx.fillRect(this.props.width / 2 - 1, this.props.height / 2 - 10, 2, 10)\n\n        let divisions = [12, 36, 72];\n        ctx.font = \"20px Courier\";\n        for (let index = 0; index < divisions.length; index++) {\n            let division = divisions[index]\n            for (let i = 0; i < division; i++) {\n                let baseAngle =  2 * Math.PI / division * i;\n                let angleOffset = this.props.heading * Math.PI / 180;\n                console.log(baseAngle)\n                \n                \n                // ctx.fillText(this.props.heading.toFixed(2), start[0] + 5, start[1] + 5)\n                this.drawCompassLine(ctx, baseAngle + angleOffset, 1 / (index + 2) ** 2)\n                if (index == 0) {\n                    let angleText = (180 - baseAngle / Math.PI * 180) % 360\n                    this.drawAngleText(ctx, baseAngle + angleOffset, angleText.toFixed(0))\n                }\n            }\n        }\n        ctx.closePath();\n        ctx.stroke();\n        // }\n    }\n\n    getPosFromAngle (angle) {\n        return [this.props.width / 2 + Math.sin(angle) * this.props.width / 2, this.props.height + Math.cos(angle) * this.props.width / 2]\n    }\n\n    drawAngleText (ctx, angle, text) {\n        let pos = this.getPosFromAngle(angle)\n        let x = pos[0];\n        let y = pos[1];\n\n        ctx.save();\n        ctx.translate(x + 50 * Math.sin(angle - Math.PI), y + 50 * Math.cos(angle - Math.PI));\n        ctx.rotate(-angle + Math.PI);\n\n        ctx.textAlign = 'center';\n        ctx.fillText(text, 0, 10);\n\n        ctx.restore();\n\n    }\n\n    drawCompassLine (ctx, angle, length) {\n        let start = [this.props.width / 2 + Math.sin(angle) * this.props.width / (2 + length), this.props.height + Math.cos(angle) * this.props.width / (2 + length)]\n        let end = [this.props.width / 2 + Math.sin(angle) * this.props.width / 2, this.props.height + Math.cos(angle) * this.props.width / 2]\n\n        ctx.moveTo(start[0], start[1]);\n        ctx.lineTo(end[0], end[1]);\n    }\n\n    componentDidUpdate () {\n        this.componentDidMount();\n    }\n\n    render () {\n        return <div>\n            <canvas ref=\"canvas\" width={this.props.width} height={this.props.height} />\n\n            <img ref=\"image\" src={cheese} className=\"hidden\" />\n        </div>\n    }\n}\n\nexport default Compass"]},"metadata":{},"sourceType":"module"}