{"ast":null,"code":"import { bignumberDocs } from './construction/bignumber';\nimport { typeOfDocs } from './function/utils/typeOf';\nimport { isZeroDocs } from './function/utils/isZero';\nimport { isPrimeDocs } from './function/utils/isPrime';\nimport { isPositiveDocs } from './function/utils/isPositive';\nimport { isNumericDocs } from './function/utils/isNumeric';\nimport { hasNumericValueDocs } from './function/utils/hasNumericValue';\nimport { isNegativeDocs } from './function/utils/isNegative';\nimport { isIntegerDocs } from './function/utils/isInteger';\nimport { isNaNDocs } from './function/utils/isNaN';\nimport { formatDocs } from './function/utils/format';\nimport { cloneDocs } from './function/utils/clone';\nimport { toDocs } from './function/units/to';\nimport { tanhDocs } from './function/trigonometry/tanh';\nimport { tanDocs } from './function/trigonometry/tan';\nimport { sinhDocs } from './function/trigonometry/sinh';\nimport { sechDocs } from './function/trigonometry/sech';\nimport { secDocs } from './function/trigonometry/sec';\nimport { cschDocs } from './function/trigonometry/csch';\nimport { cscDocs } from './function/trigonometry/csc';\nimport { cothDocs } from './function/trigonometry/coth';\nimport { cotDocs } from './function/trigonometry/cot';\nimport { coshDocs } from './function/trigonometry/cosh';\nimport { cosDocs } from './function/trigonometry/cos';\nimport { atan2Docs } from './function/trigonometry/atan2';\nimport { atanhDocs } from './function/trigonometry/atanh';\nimport { atanDocs } from './function/trigonometry/atan';\nimport { asinhDocs } from './function/trigonometry/asinh';\nimport { asinDocs } from './function/trigonometry/asin';\nimport { asechDocs } from './function/trigonometry/asech';\nimport { asecDocs } from './function/trigonometry/asec';\nimport { acschDocs } from './function/trigonometry/acsch';\nimport { acscDocs } from './function/trigonometry/acsc';\nimport { acothDocs } from './function/trigonometry/acoth';\nimport { acotDocs } from './function/trigonometry/acot';\nimport { acoshDocs } from './function/trigonometry/acosh';\nimport { acosDocs } from './function/trigonometry/acos';\nimport { sumDocs } from './function/statistics/sum';\nimport { stdDocs } from './function/statistics/std';\nimport { quantileSeqDocs } from './function/statistics/quantileSeq';\nimport { prodDocs } from './function/statistics/prod';\nimport { modeDocs } from './function/statistics/mode';\nimport { minDocs } from './function/statistics/min';\nimport { medianDocs } from './function/statistics/median';\nimport { meanDocs } from './function/statistics/mean';\nimport { maxDocs } from './function/statistics/max';\nimport { madDocs } from './function/statistics/mad';\nimport { erfDocs } from './function/special/erf';\nimport { setUnionDocs } from './function/set/setUnion';\nimport { setSymDifferenceDocs } from './function/set/setSymDifference';\nimport { setSizeDocs } from './function/set/setSize';\nimport { setPowersetDocs } from './function/set/setPowerset';\nimport { setMultiplicityDocs } from './function/set/setMultiplicity';\nimport { setIsSubsetDocs } from './function/set/setIsSubset';\nimport { setIntersectDocs } from './function/set/setIntersect';\nimport { setDistinctDocs } from './function/set/setDistinct';\nimport { setDifferenceDocs } from './function/set/setDifference';\nimport { setCartesianDocs } from './function/set/setCartesian';\nimport { unequalDocs } from './function/relational/unequal';\nimport { smallerEqDocs } from './function/relational/smallerEq';\nimport { smallerDocs } from './function/relational/smaller';\nimport { largerEqDocs } from './function/relational/largerEq';\nimport { largerDocs } from './function/relational/larger';\nimport { equalTextDocs } from './function/relational/equalText';\nimport { equalDocs } from './function/relational/equal';\nimport { deepEqualDocs } from './function/relational/deepEqual';\nimport { compareTextDocs } from './function/relational/compareText';\nimport { compareNaturalDocs } from './function/relational/compareNatural';\nimport { compareDocs } from './function/relational/compare';\nimport { randomIntDocs } from './function/probability/randomInt';\nimport { randomDocs } from './function/probability/random';\nimport { pickRandomDocs } from './function/probability/pickRandom';\nimport { permutationsDocs } from './function/probability/permutations';\nimport { multinomialDocs } from './function/probability/multinomial';\nimport { kldivergenceDocs } from './function/probability/kldivergence';\nimport { gammaDocs } from './function/probability/gamma';\nimport { factorialDocs } from './function/probability/factorial';\nimport { combinationsDocs } from './function/probability/combinations';\nimport { combinationsWithRepDocs } from './function/probability/combinationsWithRep';\nimport { zerosDocs } from './function/matrix/zeros';\nimport { transposeDocs } from './function/matrix/transpose';\nimport { traceDocs } from './function/matrix/trace';\nimport { subsetDocs } from './function/matrix/subset';\nimport { squeezeDocs } from './function/matrix/squeeze';\nimport { sortDocs } from './function/matrix/sort';\nimport { sizeDocs } from './function/matrix/size';\nimport { reshapeDocs } from './function/matrix/reshape';\nimport { resizeDocs } from './function/matrix/resize';\nimport { rangeDocs } from './function/matrix/range';\nimport { partitionSelectDocs } from './function/matrix/partitionSelect';\nimport { onesDocs } from './function/matrix/ones';\nimport { mapDocs } from './function/matrix/map';\nimport { kronDocs } from './function/matrix/kron';\nimport { invDocs } from './function/matrix/inv';\nimport { forEachDocs } from './function/matrix/forEach';\nimport { flattenDocs } from './function/matrix/flatten';\nimport { filterDocs } from './function/matrix/filter';\nimport { identityDocs } from './function/matrix/identity';\nimport { getMatrixDataTypeDocs } from './function/matrix/getMatrixDataType';\nimport { dotDocs } from './function/matrix/dot';\nimport { diagDocs } from './function/matrix/diag';\nimport { detDocs } from './function/matrix/det';\nimport { ctransposeDocs } from './function/matrix/ctranspose';\nimport { crossDocs } from './function/matrix/cross';\nimport { concatDocs } from './function/matrix/concat';\nimport { xorDocs } from './function/logical/xor';\nimport { orDocs } from './function/logical/or';\nimport { notDocs } from './function/logical/not';\nimport { andDocs } from './function/logical/and';\nimport { intersectDocs } from './function/geometry/intersect';\nimport { distanceDocs } from './function/geometry/distance';\nimport { helpDocs } from './function/expression/help';\nimport { evaluateDocs } from './function/expression/evaluate';\nimport { imDocs } from './function/complex/im';\nimport { reDocs } from './function/complex/re';\nimport { conjDocs } from './function/complex/conj';\nimport { argDocs } from './function/complex/arg';\nimport { typedDocs } from './core/typed';\nimport { importDocs } from './core/import';\nimport { configDocs } from './core/config';\nimport { stirlingS2Docs } from './function/combinatorics/stirlingS2';\nimport { compositionDocs } from './function/combinatorics/composition';\nimport { catalanDocs } from './function/combinatorics/catalan';\nimport { bellNumbersDocs } from './function/combinatorics/bellNumbers';\nimport { rightLogShiftDocs } from './function/bitwise/rightLogShift';\nimport { rightArithShiftDocs } from './function/bitwise/rightArithShift';\nimport { leftShiftDocs } from './function/bitwise/leftShift';\nimport { bitXorDocs } from './function/bitwise/bitXor';\nimport { bitOrDocs } from './function/bitwise/bitOr';\nimport { bitNotDocs } from './function/bitwise/bitNot';\nimport { bitAndDocs } from './function/bitwise/bitAnd';\nimport { xgcdDocs } from './function/arithmetic/xgcd';\nimport { unaryPlusDocs } from './function/arithmetic/unaryPlus';\nimport { unaryMinusDocs } from './function/arithmetic/unaryMinus';\nimport { squareDocs } from './function/arithmetic/square';\nimport { sqrtmDocs } from './function/arithmetic/sqrtm';\nimport { sqrtDocs } from './function/arithmetic/sqrt';\nimport { signDocs } from './function/arithmetic/sign';\nimport { roundDocs } from './function/arithmetic/round';\nimport { powDocs } from './function/arithmetic/pow';\nimport { nthRootsDocs } from './function/arithmetic/nthRoots';\nimport { nthRootDocs } from './function/arithmetic/nthRoot';\nimport { normDocs } from './function/arithmetic/norm';\nimport { multiplyDocs } from './function/arithmetic/multiply';\nimport { modDocs } from './function/arithmetic/mod';\nimport { log10Docs } from './function/arithmetic/log10';\nimport { log1pDocs } from './function/arithmetic/log1p';\nimport { log2Docs } from './function/arithmetic/log2';\nimport { logDocs } from './function/arithmetic/log';\nimport { lcmDocs } from './function/arithmetic/lcm';\nimport { hypotDocs } from './function/arithmetic/hypot';\nimport { gcdDocs } from './function/arithmetic/gcd';\nimport { floorDocs } from './function/arithmetic/floor';\nimport { fixDocs } from './function/arithmetic/fix';\nimport { expm1Docs } from './function/arithmetic/expm1';\nimport { expmDocs } from './function/arithmetic/expm';\nimport { eigsDocs } from './function/matrix/eigs';\nimport { expDocs } from './function/arithmetic/exp';\nimport { dotMultiplyDocs } from './function/arithmetic/dotMultiply';\nimport { dotDivideDocs } from './function/arithmetic/dotDivide';\nimport { divideDocs } from './function/arithmetic/divide';\nimport { cubeDocs } from './function/arithmetic/cube';\nimport { ceilDocs } from './function/arithmetic/ceil';\nimport { cbrtDocs } from './function/arithmetic/cbrt';\nimport { addDocs } from './function/arithmetic/add';\nimport { absDocs } from './function/arithmetic/abs';\nimport { qrDocs } from './function/algebra/qr';\nimport { usolveDocs } from './function/algebra/usolve';\nimport { sluDocs } from './function/algebra/slu';\nimport { rationalizeDocs } from './function/algebra/rationalize';\nimport { simplifyDocs } from './function/algebra/simplify';\nimport { lupDocs } from './function/algebra/lup';\nimport { lsolveDocs } from './function/algebra/lsolve';\nimport { derivativeDocs } from './function/algebra/derivative';\nimport { versionDocs } from './constants/version';\nimport { trueDocs } from './constants/true';\nimport { tauDocs } from './constants/tau';\nimport { SQRT2Docs } from './constants/SQRT2';\nimport { SQRT12Docs } from './constants/SQRT1_2';\nimport { phiDocs } from './constants/phi';\nimport { piDocs } from './constants/pi';\nimport { nullDocs } from './constants/null';\nimport { NaNDocs } from './constants/NaN';\nimport { LOG10EDocs } from './constants/LOG10E';\nimport { LOG2EDocs } from './constants/LOG2E';\nimport { LN10Docs } from './constants/LN10';\nimport { LN2Docs } from './constants/LN2';\nimport { InfinityDocs } from './constants/Infinity';\nimport { iDocs } from './constants/i';\nimport { falseDocs } from './constants/false';\nimport { eDocs } from './constants/e';\nimport { unitDocs } from './construction/unit';\nimport { stringDocs } from './construction/string';\nimport { splitUnitDocs } from './construction/splitUnit';\nimport { sparseDocs } from './construction/sparse';\nimport { numberDocs } from './construction/number';\nimport { matrixDocs } from './construction/matrix';\nimport { indexDocs } from './construction';\nimport { fractionDocs } from './construction/fraction';\nimport { createUnitDocs } from './construction/createUnit';\nimport { complexDocs } from './construction/complex';\nimport { booleanDocs } from './construction/boolean';\nimport { dotPowDocs } from './function/arithmetic/dotPow';\nimport { lusolveDocs } from './function/algebra/lusolve';\nimport { subtractDocs } from './function/arithmetic/subtract';\nimport { varianceDocs } from './function/statistics/variance';\nimport { sinDocs } from './function/trigonometry/sin';\nimport { numericDocs } from './function/utils/numeric';\nimport { columnDocs } from './function/matrix/column';\nimport { rowDocs } from './function/matrix/row';\nexport var embeddedDocs = {\n  // construction functions\n  bignumber: bignumberDocs,\n  \"boolean\": booleanDocs,\n  complex: complexDocs,\n  createUnit: createUnitDocs,\n  fraction: fractionDocs,\n  index: indexDocs,\n  matrix: matrixDocs,\n  number: numberDocs,\n  sparse: sparseDocs,\n  splitUnit: splitUnitDocs,\n  string: stringDocs,\n  unit: unitDocs,\n  // constants\n  e: eDocs,\n  E: eDocs,\n  \"false\": falseDocs,\n  i: iDocs,\n  Infinity: InfinityDocs,\n  LN2: LN2Docs,\n  LN10: LN10Docs,\n  LOG2E: LOG2EDocs,\n  LOG10E: LOG10EDocs,\n  NaN: NaNDocs,\n  \"null\": nullDocs,\n  pi: piDocs,\n  PI: piDocs,\n  phi: phiDocs,\n  SQRT1_2: SQRT12Docs,\n  SQRT2: SQRT2Docs,\n  tau: tauDocs,\n  \"true\": trueDocs,\n  version: versionDocs,\n  // physical constants\n  // TODO: more detailed docs for physical constants\n  speedOfLight: {\n    description: 'Speed of light in vacuum',\n    examples: ['speedOfLight']\n  },\n  gravitationConstant: {\n    description: 'Newtonian constant of gravitation',\n    examples: ['gravitationConstant']\n  },\n  planckConstant: {\n    description: 'Planck constant',\n    examples: ['planckConstant']\n  },\n  reducedPlanckConstant: {\n    description: 'Reduced Planck constant',\n    examples: ['reducedPlanckConstant']\n  },\n  magneticConstant: {\n    description: 'Magnetic constant (vacuum permeability)',\n    examples: ['magneticConstant']\n  },\n  electricConstant: {\n    description: 'Electric constant (vacuum permeability)',\n    examples: ['electricConstant']\n  },\n  vacuumImpedance: {\n    description: 'Characteristic impedance of vacuum',\n    examples: ['vacuumImpedance']\n  },\n  coulomb: {\n    description: 'Coulomb\\'s constant',\n    examples: ['coulomb']\n  },\n  elementaryCharge: {\n    description: 'Elementary charge',\n    examples: ['elementaryCharge']\n  },\n  bohrMagneton: {\n    description: 'Borh magneton',\n    examples: ['bohrMagneton']\n  },\n  conductanceQuantum: {\n    description: 'Conductance quantum',\n    examples: ['conductanceQuantum']\n  },\n  inverseConductanceQuantum: {\n    description: 'Inverse conductance quantum',\n    examples: ['inverseConductanceQuantum']\n  },\n  // josephson: {description: 'Josephson constant', examples: ['josephson']},\n  magneticFluxQuantum: {\n    description: 'Magnetic flux quantum',\n    examples: ['magneticFluxQuantum']\n  },\n  nuclearMagneton: {\n    description: 'Nuclear magneton',\n    examples: ['nuclearMagneton']\n  },\n  klitzing: {\n    description: 'Von Klitzing constant',\n    examples: ['klitzing']\n  },\n  bohrRadius: {\n    description: 'Borh radius',\n    examples: ['bohrRadius']\n  },\n  classicalElectronRadius: {\n    description: 'Classical electron radius',\n    examples: ['classicalElectronRadius']\n  },\n  electronMass: {\n    description: 'Electron mass',\n    examples: ['electronMass']\n  },\n  fermiCoupling: {\n    description: 'Fermi coupling constant',\n    examples: ['fermiCoupling']\n  },\n  fineStructure: {\n    description: 'Fine-structure constant',\n    examples: ['fineStructure']\n  },\n  hartreeEnergy: {\n    description: 'Hartree energy',\n    examples: ['hartreeEnergy']\n  },\n  protonMass: {\n    description: 'Proton mass',\n    examples: ['protonMass']\n  },\n  deuteronMass: {\n    description: 'Deuteron Mass',\n    examples: ['deuteronMass']\n  },\n  neutronMass: {\n    description: 'Neutron mass',\n    examples: ['neutronMass']\n  },\n  quantumOfCirculation: {\n    description: 'Quantum of circulation',\n    examples: ['quantumOfCirculation']\n  },\n  rydberg: {\n    description: 'Rydberg constant',\n    examples: ['rydberg']\n  },\n  thomsonCrossSection: {\n    description: 'Thomson cross section',\n    examples: ['thomsonCrossSection']\n  },\n  weakMixingAngle: {\n    description: 'Weak mixing angle',\n    examples: ['weakMixingAngle']\n  },\n  efimovFactor: {\n    description: 'Efimov factor',\n    examples: ['efimovFactor']\n  },\n  atomicMass: {\n    description: 'Atomic mass constant',\n    examples: ['atomicMass']\n  },\n  avogadro: {\n    description: 'Avogadro\\'s number',\n    examples: ['avogadro']\n  },\n  boltzmann: {\n    description: 'Boltzmann constant',\n    examples: ['boltzmann']\n  },\n  faraday: {\n    description: 'Faraday constant',\n    examples: ['faraday']\n  },\n  firstRadiation: {\n    description: 'First radiation constant',\n    examples: ['firstRadiation']\n  },\n  loschmidt: {\n    description: 'Loschmidt constant at T=273.15 K and p=101.325 kPa',\n    examples: ['loschmidt']\n  },\n  gasConstant: {\n    description: 'Gas constant',\n    examples: ['gasConstant']\n  },\n  molarPlanckConstant: {\n    description: 'Molar Planck constant',\n    examples: ['molarPlanckConstant']\n  },\n  molarVolume: {\n    description: 'Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa',\n    examples: ['molarVolume']\n  },\n  sackurTetrode: {\n    description: 'Sackur-Tetrode constant at T=1 K and p=101.325 kPa',\n    examples: ['sackurTetrode']\n  },\n  secondRadiation: {\n    description: 'Second radiation constant',\n    examples: ['secondRadiation']\n  },\n  stefanBoltzmann: {\n    description: 'Stefan-Boltzmann constant',\n    examples: ['stefanBoltzmann']\n  },\n  wienDisplacement: {\n    description: 'Wien displacement law constant',\n    examples: ['wienDisplacement']\n  },\n  // spectralRadiance: {description: 'First radiation constant for spectral radiance', examples: ['spectralRadiance']},\n  molarMass: {\n    description: 'Molar mass constant',\n    examples: ['molarMass']\n  },\n  molarMassC12: {\n    description: 'Molar mass constant of carbon-12',\n    examples: ['molarMassC12']\n  },\n  gravity: {\n    description: 'Standard acceleration of gravity (standard acceleration of free-fall on Earth)',\n    examples: ['gravity']\n  },\n  planckLength: {\n    description: 'Planck length',\n    examples: ['planckLength']\n  },\n  planckMass: {\n    description: 'Planck mass',\n    examples: ['planckMass']\n  },\n  planckTime: {\n    description: 'Planck time',\n    examples: ['planckTime']\n  },\n  planckCharge: {\n    description: 'Planck charge',\n    examples: ['planckCharge']\n  },\n  planckTemperature: {\n    description: 'Planck temperature',\n    examples: ['planckTemperature']\n  },\n  // functions - algebra\n  derivative: derivativeDocs,\n  lsolve: lsolveDocs,\n  lup: lupDocs,\n  lusolve: lusolveDocs,\n  simplify: simplifyDocs,\n  rationalize: rationalizeDocs,\n  slu: sluDocs,\n  usolve: usolveDocs,\n  qr: qrDocs,\n  // functions - arithmetic\n  abs: absDocs,\n  add: addDocs,\n  cbrt: cbrtDocs,\n  ceil: ceilDocs,\n  cube: cubeDocs,\n  divide: divideDocs,\n  dotDivide: dotDivideDocs,\n  dotMultiply: dotMultiplyDocs,\n  dotPow: dotPowDocs,\n  exp: expDocs,\n  expm: expmDocs,\n  expm1: expm1Docs,\n  fix: fixDocs,\n  floor: floorDocs,\n  gcd: gcdDocs,\n  hypot: hypotDocs,\n  lcm: lcmDocs,\n  log: logDocs,\n  log2: log2Docs,\n  log1p: log1pDocs,\n  log10: log10Docs,\n  mod: modDocs,\n  multiply: multiplyDocs,\n  norm: normDocs,\n  nthRoot: nthRootDocs,\n  nthRoots: nthRootsDocs,\n  pow: powDocs,\n  round: roundDocs,\n  sign: signDocs,\n  sqrt: sqrtDocs,\n  sqrtm: sqrtmDocs,\n  square: squareDocs,\n  subtract: subtractDocs,\n  unaryMinus: unaryMinusDocs,\n  unaryPlus: unaryPlusDocs,\n  xgcd: xgcdDocs,\n  // functions - bitwise\n  bitAnd: bitAndDocs,\n  bitNot: bitNotDocs,\n  bitOr: bitOrDocs,\n  bitXor: bitXorDocs,\n  leftShift: leftShiftDocs,\n  rightArithShift: rightArithShiftDocs,\n  rightLogShift: rightLogShiftDocs,\n  // functions - combinatorics\n  bellNumbers: bellNumbersDocs,\n  catalan: catalanDocs,\n  composition: compositionDocs,\n  stirlingS2: stirlingS2Docs,\n  // functions - core\n  config: configDocs,\n  \"import\": importDocs,\n  typed: typedDocs,\n  // functions - complex\n  arg: argDocs,\n  conj: conjDocs,\n  re: reDocs,\n  im: imDocs,\n  // functions - expression\n  evaluate: evaluateDocs,\n  eval: evaluateDocs,\n  // TODO: deprecated, cleanup in v7\n  help: helpDocs,\n  // functions - geometry\n  distance: distanceDocs,\n  intersect: intersectDocs,\n  // functions - logical\n  and: andDocs,\n  not: notDocs,\n  or: orDocs,\n  xor: xorDocs,\n  // functions - matrix\n  concat: concatDocs,\n  cross: crossDocs,\n  column: columnDocs,\n  ctranspose: ctransposeDocs,\n  det: detDocs,\n  diag: diagDocs,\n  dot: dotDocs,\n  getMatrixDataType: getMatrixDataTypeDocs,\n  identity: identityDocs,\n  filter: filterDocs,\n  flatten: flattenDocs,\n  forEach: forEachDocs,\n  inv: invDocs,\n  eigs: eigsDocs,\n  kron: kronDocs,\n  map: mapDocs,\n  ones: onesDocs,\n  partitionSelect: partitionSelectDocs,\n  range: rangeDocs,\n  resize: resizeDocs,\n  reshape: reshapeDocs,\n  row: rowDocs,\n  size: sizeDocs,\n  sort: sortDocs,\n  squeeze: squeezeDocs,\n  subset: subsetDocs,\n  trace: traceDocs,\n  transpose: transposeDocs,\n  zeros: zerosDocs,\n  // functions - probability\n  combinations: combinationsDocs,\n  combinationsWithRep: combinationsWithRepDocs,\n  // distribution: distributionDocs,\n  factorial: factorialDocs,\n  gamma: gammaDocs,\n  kldivergence: kldivergenceDocs,\n  multinomial: multinomialDocs,\n  permutations: permutationsDocs,\n  pickRandom: pickRandomDocs,\n  random: randomDocs,\n  randomInt: randomIntDocs,\n  // functions - relational\n  compare: compareDocs,\n  compareNatural: compareNaturalDocs,\n  compareText: compareTextDocs,\n  deepEqual: deepEqualDocs,\n  equal: equalDocs,\n  equalText: equalTextDocs,\n  larger: largerDocs,\n  largerEq: largerEqDocs,\n  smaller: smallerDocs,\n  smallerEq: smallerEqDocs,\n  unequal: unequalDocs,\n  // functions - set\n  setCartesian: setCartesianDocs,\n  setDifference: setDifferenceDocs,\n  setDistinct: setDistinctDocs,\n  setIntersect: setIntersectDocs,\n  setIsSubset: setIsSubsetDocs,\n  setMultiplicity: setMultiplicityDocs,\n  setPowerset: setPowersetDocs,\n  setSize: setSizeDocs,\n  setSymDifference: setSymDifferenceDocs,\n  setUnion: setUnionDocs,\n  // functions - special\n  erf: erfDocs,\n  // functions - statistics\n  mad: madDocs,\n  max: maxDocs,\n  mean: meanDocs,\n  median: medianDocs,\n  min: minDocs,\n  mode: modeDocs,\n  prod: prodDocs,\n  quantileSeq: quantileSeqDocs,\n  std: stdDocs,\n  sum: sumDocs,\n  variance: varianceDocs,\n  \"var\": varianceDocs,\n  // TODO: deprecated, cleanup in v7\n  // functions - trigonometry\n  acos: acosDocs,\n  acosh: acoshDocs,\n  acot: acotDocs,\n  acoth: acothDocs,\n  acsc: acscDocs,\n  acsch: acschDocs,\n  asec: asecDocs,\n  asech: asechDocs,\n  asin: asinDocs,\n  asinh: asinhDocs,\n  atan: atanDocs,\n  atanh: atanhDocs,\n  atan2: atan2Docs,\n  cos: cosDocs,\n  cosh: coshDocs,\n  cot: cotDocs,\n  coth: cothDocs,\n  csc: cscDocs,\n  csch: cschDocs,\n  sec: secDocs,\n  sech: sechDocs,\n  sin: sinDocs,\n  sinh: sinhDocs,\n  tan: tanDocs,\n  tanh: tanhDocs,\n  // functions - units\n  to: toDocs,\n  // functions - utils\n  clone: cloneDocs,\n  format: formatDocs,\n  isNaN: isNaNDocs,\n  isInteger: isIntegerDocs,\n  isNegative: isNegativeDocs,\n  isNumeric: isNumericDocs,\n  hasNumericValue: hasNumericValueDocs,\n  isPositive: isPositiveDocs,\n  isPrime: isPrimeDocs,\n  isZero: isZeroDocs,\n  // print: printDocs // TODO: add documentation for print as soon as the parser supports objects.\n  typeOf: typeOfDocs,\n  \"typeof\": typeOfDocs,\n  // TODO: deprecated, cleanup in v7\n  numeric: numericDocs\n};","map":{"version":3,"sources":["/home/kaappo/testit/canvas/node_modules/mathjs/es/expression/embeddedDocs/embeddedDocs.js"],"names":["bignumberDocs","typeOfDocs","isZeroDocs","isPrimeDocs","isPositiveDocs","isNumericDocs","hasNumericValueDocs","isNegativeDocs","isIntegerDocs","isNaNDocs","formatDocs","cloneDocs","toDocs","tanhDocs","tanDocs","sinhDocs","sechDocs","secDocs","cschDocs","cscDocs","cothDocs","cotDocs","coshDocs","cosDocs","atan2Docs","atanhDocs","atanDocs","asinhDocs","asinDocs","asechDocs","asecDocs","acschDocs","acscDocs","acothDocs","acotDocs","acoshDocs","acosDocs","sumDocs","stdDocs","quantileSeqDocs","prodDocs","modeDocs","minDocs","medianDocs","meanDocs","maxDocs","madDocs","erfDocs","setUnionDocs","setSymDifferenceDocs","setSizeDocs","setPowersetDocs","setMultiplicityDocs","setIsSubsetDocs","setIntersectDocs","setDistinctDocs","setDifferenceDocs","setCartesianDocs","unequalDocs","smallerEqDocs","smallerDocs","largerEqDocs","largerDocs","equalTextDocs","equalDocs","deepEqualDocs","compareTextDocs","compareNaturalDocs","compareDocs","randomIntDocs","randomDocs","pickRandomDocs","permutationsDocs","multinomialDocs","kldivergenceDocs","gammaDocs","factorialDocs","combinationsDocs","combinationsWithRepDocs","zerosDocs","transposeDocs","traceDocs","subsetDocs","squeezeDocs","sortDocs","sizeDocs","reshapeDocs","resizeDocs","rangeDocs","partitionSelectDocs","onesDocs","mapDocs","kronDocs","invDocs","forEachDocs","flattenDocs","filterDocs","identityDocs","getMatrixDataTypeDocs","dotDocs","diagDocs","detDocs","ctransposeDocs","crossDocs","concatDocs","xorDocs","orDocs","notDocs","andDocs","intersectDocs","distanceDocs","helpDocs","evaluateDocs","imDocs","reDocs","conjDocs","argDocs","typedDocs","importDocs","configDocs","stirlingS2Docs","compositionDocs","catalanDocs","bellNumbersDocs","rightLogShiftDocs","rightArithShiftDocs","leftShiftDocs","bitXorDocs","bitOrDocs","bitNotDocs","bitAndDocs","xgcdDocs","unaryPlusDocs","unaryMinusDocs","squareDocs","sqrtmDocs","sqrtDocs","signDocs","roundDocs","powDocs","nthRootsDocs","nthRootDocs","normDocs","multiplyDocs","modDocs","log10Docs","log1pDocs","log2Docs","logDocs","lcmDocs","hypotDocs","gcdDocs","floorDocs","fixDocs","expm1Docs","expmDocs","eigsDocs","expDocs","dotMultiplyDocs","dotDivideDocs","divideDocs","cubeDocs","ceilDocs","cbrtDocs","addDocs","absDocs","qrDocs","usolveDocs","sluDocs","rationalizeDocs","simplifyDocs","lupDocs","lsolveDocs","derivativeDocs","versionDocs","trueDocs","tauDocs","SQRT2Docs","SQRT12Docs","phiDocs","piDocs","nullDocs","NaNDocs","LOG10EDocs","LOG2EDocs","LN10Docs","LN2Docs","InfinityDocs","iDocs","falseDocs","eDocs","unitDocs","stringDocs","splitUnitDocs","sparseDocs","numberDocs","matrixDocs","indexDocs","fractionDocs","createUnitDocs","complexDocs","booleanDocs","dotPowDocs","lusolveDocs","subtractDocs","varianceDocs","sinDocs","numericDocs","columnDocs","rowDocs","embeddedDocs","bignumber","complex","createUnit","fraction","index","matrix","number","sparse","splitUnit","string","unit","e","E","i","Infinity","LN2","LN10","LOG2E","LOG10E","NaN","pi","PI","phi","SQRT1_2","SQRT2","tau","version","speedOfLight","description","examples","gravitationConstant","planckConstant","reducedPlanckConstant","magneticConstant","electricConstant","vacuumImpedance","coulomb","elementaryCharge","bohrMagneton","conductanceQuantum","inverseConductanceQuantum","magneticFluxQuantum","nuclearMagneton","klitzing","bohrRadius","classicalElectronRadius","electronMass","fermiCoupling","fineStructure","hartreeEnergy","protonMass","deuteronMass","neutronMass","quantumOfCirculation","rydberg","thomsonCrossSection","weakMixingAngle","efimovFactor","atomicMass","avogadro","boltzmann","faraday","firstRadiation","loschmidt","gasConstant","molarPlanckConstant","molarVolume","sackurTetrode","secondRadiation","stefanBoltzmann","wienDisplacement","molarMass","molarMassC12","gravity","planckLength","planckMass","planckTime","planckCharge","planckTemperature","derivative","lsolve","lup","lusolve","simplify","rationalize","slu","usolve","qr","abs","add","cbrt","ceil","cube","divide","dotDivide","dotMultiply","dotPow","exp","expm","expm1","fix","floor","gcd","hypot","lcm","log","log2","log1p","log10","mod","multiply","norm","nthRoot","nthRoots","pow","round","sign","sqrt","sqrtm","square","subtract","unaryMinus","unaryPlus","xgcd","bitAnd","bitNot","bitOr","bitXor","leftShift","rightArithShift","rightLogShift","bellNumbers","catalan","composition","stirlingS2","config","typed","arg","conj","re","im","evaluate","eval","help","distance","intersect","and","not","or","xor","concat","cross","column","ctranspose","det","diag","dot","getMatrixDataType","identity","filter","flatten","forEach","inv","eigs","kron","map","ones","partitionSelect","range","resize","reshape","row","size","sort","squeeze","subset","trace","transpose","zeros","combinations","combinationsWithRep","factorial","gamma","kldivergence","multinomial","permutations","pickRandom","random","randomInt","compare","compareNatural","compareText","deepEqual","equal","equalText","larger","largerEq","smaller","smallerEq","unequal","setCartesian","setDifference","setDistinct","setIntersect","setIsSubset","setMultiplicity","setPowerset","setSize","setSymDifference","setUnion","erf","mad","max","mean","median","min","mode","prod","quantileSeq","std","sum","variance","acos","acosh","acot","acoth","acsc","acsch","asec","asech","asin","asinh","atan","atanh","atan2","cos","cosh","cot","coth","csc","csch","sec","sech","sin","sinh","tan","tanh","to","clone","format","isNaN","isInteger","isNegative","isNumeric","hasNumericValue","isPositive","isPrime","isZero","typeOf","numeric"],"mappings":"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","sourcesContent":["import { bignumberDocs } from './construction/bignumber';\nimport { typeOfDocs } from './function/utils/typeOf';\nimport { isZeroDocs } from './function/utils/isZero';\nimport { isPrimeDocs } from './function/utils/isPrime';\nimport { isPositiveDocs } from './function/utils/isPositive';\nimport { isNumericDocs } from './function/utils/isNumeric';\nimport { hasNumericValueDocs } from './function/utils/hasNumericValue';\nimport { isNegativeDocs } from './function/utils/isNegative';\nimport { isIntegerDocs } from './function/utils/isInteger';\nimport { isNaNDocs } from './function/utils/isNaN';\nimport { formatDocs } from './function/utils/format';\nimport { cloneDocs } from './function/utils/clone';\nimport { toDocs } from './function/units/to';\nimport { tanhDocs } from './function/trigonometry/tanh';\nimport { tanDocs } from './function/trigonometry/tan';\nimport { sinhDocs } from './function/trigonometry/sinh';\nimport { sechDocs } from './function/trigonometry/sech';\nimport { secDocs } from './function/trigonometry/sec';\nimport { cschDocs } from './function/trigonometry/csch';\nimport { cscDocs } from './function/trigonometry/csc';\nimport { cothDocs } from './function/trigonometry/coth';\nimport { cotDocs } from './function/trigonometry/cot';\nimport { coshDocs } from './function/trigonometry/cosh';\nimport { cosDocs } from './function/trigonometry/cos';\nimport { atan2Docs } from './function/trigonometry/atan2';\nimport { atanhDocs } from './function/trigonometry/atanh';\nimport { atanDocs } from './function/trigonometry/atan';\nimport { asinhDocs } from './function/trigonometry/asinh';\nimport { asinDocs } from './function/trigonometry/asin';\nimport { asechDocs } from './function/trigonometry/asech';\nimport { asecDocs } from './function/trigonometry/asec';\nimport { acschDocs } from './function/trigonometry/acsch';\nimport { acscDocs } from './function/trigonometry/acsc';\nimport { acothDocs } from './function/trigonometry/acoth';\nimport { acotDocs } from './function/trigonometry/acot';\nimport { acoshDocs } from './function/trigonometry/acosh';\nimport { acosDocs } from './function/trigonometry/acos';\nimport { sumDocs } from './function/statistics/sum';\nimport { stdDocs } from './function/statistics/std';\nimport { quantileSeqDocs } from './function/statistics/quantileSeq';\nimport { prodDocs } from './function/statistics/prod';\nimport { modeDocs } from './function/statistics/mode';\nimport { minDocs } from './function/statistics/min';\nimport { medianDocs } from './function/statistics/median';\nimport { meanDocs } from './function/statistics/mean';\nimport { maxDocs } from './function/statistics/max';\nimport { madDocs } from './function/statistics/mad';\nimport { erfDocs } from './function/special/erf';\nimport { setUnionDocs } from './function/set/setUnion';\nimport { setSymDifferenceDocs } from './function/set/setSymDifference';\nimport { setSizeDocs } from './function/set/setSize';\nimport { setPowersetDocs } from './function/set/setPowerset';\nimport { setMultiplicityDocs } from './function/set/setMultiplicity';\nimport { setIsSubsetDocs } from './function/set/setIsSubset';\nimport { setIntersectDocs } from './function/set/setIntersect';\nimport { setDistinctDocs } from './function/set/setDistinct';\nimport { setDifferenceDocs } from './function/set/setDifference';\nimport { setCartesianDocs } from './function/set/setCartesian';\nimport { unequalDocs } from './function/relational/unequal';\nimport { smallerEqDocs } from './function/relational/smallerEq';\nimport { smallerDocs } from './function/relational/smaller';\nimport { largerEqDocs } from './function/relational/largerEq';\nimport { largerDocs } from './function/relational/larger';\nimport { equalTextDocs } from './function/relational/equalText';\nimport { equalDocs } from './function/relational/equal';\nimport { deepEqualDocs } from './function/relational/deepEqual';\nimport { compareTextDocs } from './function/relational/compareText';\nimport { compareNaturalDocs } from './function/relational/compareNatural';\nimport { compareDocs } from './function/relational/compare';\nimport { randomIntDocs } from './function/probability/randomInt';\nimport { randomDocs } from './function/probability/random';\nimport { pickRandomDocs } from './function/probability/pickRandom';\nimport { permutationsDocs } from './function/probability/permutations';\nimport { multinomialDocs } from './function/probability/multinomial';\nimport { kldivergenceDocs } from './function/probability/kldivergence';\nimport { gammaDocs } from './function/probability/gamma';\nimport { factorialDocs } from './function/probability/factorial';\nimport { combinationsDocs } from './function/probability/combinations';\nimport { combinationsWithRepDocs } from './function/probability/combinationsWithRep';\nimport { zerosDocs } from './function/matrix/zeros';\nimport { transposeDocs } from './function/matrix/transpose';\nimport { traceDocs } from './function/matrix/trace';\nimport { subsetDocs } from './function/matrix/subset';\nimport { squeezeDocs } from './function/matrix/squeeze';\nimport { sortDocs } from './function/matrix/sort';\nimport { sizeDocs } from './function/matrix/size';\nimport { reshapeDocs } from './function/matrix/reshape';\nimport { resizeDocs } from './function/matrix/resize';\nimport { rangeDocs } from './function/matrix/range';\nimport { partitionSelectDocs } from './function/matrix/partitionSelect';\nimport { onesDocs } from './function/matrix/ones';\nimport { mapDocs } from './function/matrix/map';\nimport { kronDocs } from './function/matrix/kron';\nimport { invDocs } from './function/matrix/inv';\nimport { forEachDocs } from './function/matrix/forEach';\nimport { flattenDocs } from './function/matrix/flatten';\nimport { filterDocs } from './function/matrix/filter';\nimport { identityDocs } from './function/matrix/identity';\nimport { getMatrixDataTypeDocs } from './function/matrix/getMatrixDataType';\nimport { dotDocs } from './function/matrix/dot';\nimport { diagDocs } from './function/matrix/diag';\nimport { detDocs } from './function/matrix/det';\nimport { ctransposeDocs } from './function/matrix/ctranspose';\nimport { crossDocs } from './function/matrix/cross';\nimport { concatDocs } from './function/matrix/concat';\nimport { xorDocs } from './function/logical/xor';\nimport { orDocs } from './function/logical/or';\nimport { notDocs } from './function/logical/not';\nimport { andDocs } from './function/logical/and';\nimport { intersectDocs } from './function/geometry/intersect';\nimport { distanceDocs } from './function/geometry/distance';\nimport { helpDocs } from './function/expression/help';\nimport { evaluateDocs } from './function/expression/evaluate';\nimport { imDocs } from './function/complex/im';\nimport { reDocs } from './function/complex/re';\nimport { conjDocs } from './function/complex/conj';\nimport { argDocs } from './function/complex/arg';\nimport { typedDocs } from './core/typed';\nimport { importDocs } from './core/import';\nimport { configDocs } from './core/config';\nimport { stirlingS2Docs } from './function/combinatorics/stirlingS2';\nimport { compositionDocs } from './function/combinatorics/composition';\nimport { catalanDocs } from './function/combinatorics/catalan';\nimport { bellNumbersDocs } from './function/combinatorics/bellNumbers';\nimport { rightLogShiftDocs } from './function/bitwise/rightLogShift';\nimport { rightArithShiftDocs } from './function/bitwise/rightArithShift';\nimport { leftShiftDocs } from './function/bitwise/leftShift';\nimport { bitXorDocs } from './function/bitwise/bitXor';\nimport { bitOrDocs } from './function/bitwise/bitOr';\nimport { bitNotDocs } from './function/bitwise/bitNot';\nimport { bitAndDocs } from './function/bitwise/bitAnd';\nimport { xgcdDocs } from './function/arithmetic/xgcd';\nimport { unaryPlusDocs } from './function/arithmetic/unaryPlus';\nimport { unaryMinusDocs } from './function/arithmetic/unaryMinus';\nimport { squareDocs } from './function/arithmetic/square';\nimport { sqrtmDocs } from './function/arithmetic/sqrtm';\nimport { sqrtDocs } from './function/arithmetic/sqrt';\nimport { signDocs } from './function/arithmetic/sign';\nimport { roundDocs } from './function/arithmetic/round';\nimport { powDocs } from './function/arithmetic/pow';\nimport { nthRootsDocs } from './function/arithmetic/nthRoots';\nimport { nthRootDocs } from './function/arithmetic/nthRoot';\nimport { normDocs } from './function/arithmetic/norm';\nimport { multiplyDocs } from './function/arithmetic/multiply';\nimport { modDocs } from './function/arithmetic/mod';\nimport { log10Docs } from './function/arithmetic/log10';\nimport { log1pDocs } from './function/arithmetic/log1p';\nimport { log2Docs } from './function/arithmetic/log2';\nimport { logDocs } from './function/arithmetic/log';\nimport { lcmDocs } from './function/arithmetic/lcm';\nimport { hypotDocs } from './function/arithmetic/hypot';\nimport { gcdDocs } from './function/arithmetic/gcd';\nimport { floorDocs } from './function/arithmetic/floor';\nimport { fixDocs } from './function/arithmetic/fix';\nimport { expm1Docs } from './function/arithmetic/expm1';\nimport { expmDocs } from './function/arithmetic/expm';\nimport { eigsDocs } from './function/matrix/eigs';\nimport { expDocs } from './function/arithmetic/exp';\nimport { dotMultiplyDocs } from './function/arithmetic/dotMultiply';\nimport { dotDivideDocs } from './function/arithmetic/dotDivide';\nimport { divideDocs } from './function/arithmetic/divide';\nimport { cubeDocs } from './function/arithmetic/cube';\nimport { ceilDocs } from './function/arithmetic/ceil';\nimport { cbrtDocs } from './function/arithmetic/cbrt';\nimport { addDocs } from './function/arithmetic/add';\nimport { absDocs } from './function/arithmetic/abs';\nimport { qrDocs } from './function/algebra/qr';\nimport { usolveDocs } from './function/algebra/usolve';\nimport { sluDocs } from './function/algebra/slu';\nimport { rationalizeDocs } from './function/algebra/rationalize';\nimport { simplifyDocs } from './function/algebra/simplify';\nimport { lupDocs } from './function/algebra/lup';\nimport { lsolveDocs } from './function/algebra/lsolve';\nimport { derivativeDocs } from './function/algebra/derivative';\nimport { versionDocs } from './constants/version';\nimport { trueDocs } from './constants/true';\nimport { tauDocs } from './constants/tau';\nimport { SQRT2Docs } from './constants/SQRT2';\nimport { SQRT12Docs } from './constants/SQRT1_2';\nimport { phiDocs } from './constants/phi';\nimport { piDocs } from './constants/pi';\nimport { nullDocs } from './constants/null';\nimport { NaNDocs } from './constants/NaN';\nimport { LOG10EDocs } from './constants/LOG10E';\nimport { LOG2EDocs } from './constants/LOG2E';\nimport { LN10Docs } from './constants/LN10';\nimport { LN2Docs } from './constants/LN2';\nimport { InfinityDocs } from './constants/Infinity';\nimport { iDocs } from './constants/i';\nimport { falseDocs } from './constants/false';\nimport { eDocs } from './constants/e';\nimport { unitDocs } from './construction/unit';\nimport { stringDocs } from './construction/string';\nimport { splitUnitDocs } from './construction/splitUnit';\nimport { sparseDocs } from './construction/sparse';\nimport { numberDocs } from './construction/number';\nimport { matrixDocs } from './construction/matrix';\nimport { indexDocs } from './construction';\nimport { fractionDocs } from './construction/fraction';\nimport { createUnitDocs } from './construction/createUnit';\nimport { complexDocs } from './construction/complex';\nimport { booleanDocs } from './construction/boolean';\nimport { dotPowDocs } from './function/arithmetic/dotPow';\nimport { lusolveDocs } from './function/algebra/lusolve';\nimport { subtractDocs } from './function/arithmetic/subtract';\nimport { varianceDocs } from './function/statistics/variance';\nimport { sinDocs } from './function/trigonometry/sin';\nimport { numericDocs } from './function/utils/numeric';\nimport { columnDocs } from './function/matrix/column';\nimport { rowDocs } from './function/matrix/row';\nexport var embeddedDocs = {\n  // construction functions\n  bignumber: bignumberDocs,\n  \"boolean\": booleanDocs,\n  complex: complexDocs,\n  createUnit: createUnitDocs,\n  fraction: fractionDocs,\n  index: indexDocs,\n  matrix: matrixDocs,\n  number: numberDocs,\n  sparse: sparseDocs,\n  splitUnit: splitUnitDocs,\n  string: stringDocs,\n  unit: unitDocs,\n  // constants\n  e: eDocs,\n  E: eDocs,\n  \"false\": falseDocs,\n  i: iDocs,\n  Infinity: InfinityDocs,\n  LN2: LN2Docs,\n  LN10: LN10Docs,\n  LOG2E: LOG2EDocs,\n  LOG10E: LOG10EDocs,\n  NaN: NaNDocs,\n  \"null\": nullDocs,\n  pi: piDocs,\n  PI: piDocs,\n  phi: phiDocs,\n  SQRT1_2: SQRT12Docs,\n  SQRT2: SQRT2Docs,\n  tau: tauDocs,\n  \"true\": trueDocs,\n  version: versionDocs,\n  // physical constants\n  // TODO: more detailed docs for physical constants\n  speedOfLight: {\n    description: 'Speed of light in vacuum',\n    examples: ['speedOfLight']\n  },\n  gravitationConstant: {\n    description: 'Newtonian constant of gravitation',\n    examples: ['gravitationConstant']\n  },\n  planckConstant: {\n    description: 'Planck constant',\n    examples: ['planckConstant']\n  },\n  reducedPlanckConstant: {\n    description: 'Reduced Planck constant',\n    examples: ['reducedPlanckConstant']\n  },\n  magneticConstant: {\n    description: 'Magnetic constant (vacuum permeability)',\n    examples: ['magneticConstant']\n  },\n  electricConstant: {\n    description: 'Electric constant (vacuum permeability)',\n    examples: ['electricConstant']\n  },\n  vacuumImpedance: {\n    description: 'Characteristic impedance of vacuum',\n    examples: ['vacuumImpedance']\n  },\n  coulomb: {\n    description: 'Coulomb\\'s constant',\n    examples: ['coulomb']\n  },\n  elementaryCharge: {\n    description: 'Elementary charge',\n    examples: ['elementaryCharge']\n  },\n  bohrMagneton: {\n    description: 'Borh magneton',\n    examples: ['bohrMagneton']\n  },\n  conductanceQuantum: {\n    description: 'Conductance quantum',\n    examples: ['conductanceQuantum']\n  },\n  inverseConductanceQuantum: {\n    description: 'Inverse conductance quantum',\n    examples: ['inverseConductanceQuantum']\n  },\n  // josephson: {description: 'Josephson constant', examples: ['josephson']},\n  magneticFluxQuantum: {\n    description: 'Magnetic flux quantum',\n    examples: ['magneticFluxQuantum']\n  },\n  nuclearMagneton: {\n    description: 'Nuclear magneton',\n    examples: ['nuclearMagneton']\n  },\n  klitzing: {\n    description: 'Von Klitzing constant',\n    examples: ['klitzing']\n  },\n  bohrRadius: {\n    description: 'Borh radius',\n    examples: ['bohrRadius']\n  },\n  classicalElectronRadius: {\n    description: 'Classical electron radius',\n    examples: ['classicalElectronRadius']\n  },\n  electronMass: {\n    description: 'Electron mass',\n    examples: ['electronMass']\n  },\n  fermiCoupling: {\n    description: 'Fermi coupling constant',\n    examples: ['fermiCoupling']\n  },\n  fineStructure: {\n    description: 'Fine-structure constant',\n    examples: ['fineStructure']\n  },\n  hartreeEnergy: {\n    description: 'Hartree energy',\n    examples: ['hartreeEnergy']\n  },\n  protonMass: {\n    description: 'Proton mass',\n    examples: ['protonMass']\n  },\n  deuteronMass: {\n    description: 'Deuteron Mass',\n    examples: ['deuteronMass']\n  },\n  neutronMass: {\n    description: 'Neutron mass',\n    examples: ['neutronMass']\n  },\n  quantumOfCirculation: {\n    description: 'Quantum of circulation',\n    examples: ['quantumOfCirculation']\n  },\n  rydberg: {\n    description: 'Rydberg constant',\n    examples: ['rydberg']\n  },\n  thomsonCrossSection: {\n    description: 'Thomson cross section',\n    examples: ['thomsonCrossSection']\n  },\n  weakMixingAngle: {\n    description: 'Weak mixing angle',\n    examples: ['weakMixingAngle']\n  },\n  efimovFactor: {\n    description: 'Efimov factor',\n    examples: ['efimovFactor']\n  },\n  atomicMass: {\n    description: 'Atomic mass constant',\n    examples: ['atomicMass']\n  },\n  avogadro: {\n    description: 'Avogadro\\'s number',\n    examples: ['avogadro']\n  },\n  boltzmann: {\n    description: 'Boltzmann constant',\n    examples: ['boltzmann']\n  },\n  faraday: {\n    description: 'Faraday constant',\n    examples: ['faraday']\n  },\n  firstRadiation: {\n    description: 'First radiation constant',\n    examples: ['firstRadiation']\n  },\n  loschmidt: {\n    description: 'Loschmidt constant at T=273.15 K and p=101.325 kPa',\n    examples: ['loschmidt']\n  },\n  gasConstant: {\n    description: 'Gas constant',\n    examples: ['gasConstant']\n  },\n  molarPlanckConstant: {\n    description: 'Molar Planck constant',\n    examples: ['molarPlanckConstant']\n  },\n  molarVolume: {\n    description: 'Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa',\n    examples: ['molarVolume']\n  },\n  sackurTetrode: {\n    description: 'Sackur-Tetrode constant at T=1 K and p=101.325 kPa',\n    examples: ['sackurTetrode']\n  },\n  secondRadiation: {\n    description: 'Second radiation constant',\n    examples: ['secondRadiation']\n  },\n  stefanBoltzmann: {\n    description: 'Stefan-Boltzmann constant',\n    examples: ['stefanBoltzmann']\n  },\n  wienDisplacement: {\n    description: 'Wien displacement law constant',\n    examples: ['wienDisplacement']\n  },\n  // spectralRadiance: {description: 'First radiation constant for spectral radiance', examples: ['spectralRadiance']},\n  molarMass: {\n    description: 'Molar mass constant',\n    examples: ['molarMass']\n  },\n  molarMassC12: {\n    description: 'Molar mass constant of carbon-12',\n    examples: ['molarMassC12']\n  },\n  gravity: {\n    description: 'Standard acceleration of gravity (standard acceleration of free-fall on Earth)',\n    examples: ['gravity']\n  },\n  planckLength: {\n    description: 'Planck length',\n    examples: ['planckLength']\n  },\n  planckMass: {\n    description: 'Planck mass',\n    examples: ['planckMass']\n  },\n  planckTime: {\n    description: 'Planck time',\n    examples: ['planckTime']\n  },\n  planckCharge: {\n    description: 'Planck charge',\n    examples: ['planckCharge']\n  },\n  planckTemperature: {\n    description: 'Planck temperature',\n    examples: ['planckTemperature']\n  },\n  // functions - algebra\n  derivative: derivativeDocs,\n  lsolve: lsolveDocs,\n  lup: lupDocs,\n  lusolve: lusolveDocs,\n  simplify: simplifyDocs,\n  rationalize: rationalizeDocs,\n  slu: sluDocs,\n  usolve: usolveDocs,\n  qr: qrDocs,\n  // functions - arithmetic\n  abs: absDocs,\n  add: addDocs,\n  cbrt: cbrtDocs,\n  ceil: ceilDocs,\n  cube: cubeDocs,\n  divide: divideDocs,\n  dotDivide: dotDivideDocs,\n  dotMultiply: dotMultiplyDocs,\n  dotPow: dotPowDocs,\n  exp: expDocs,\n  expm: expmDocs,\n  expm1: expm1Docs,\n  fix: fixDocs,\n  floor: floorDocs,\n  gcd: gcdDocs,\n  hypot: hypotDocs,\n  lcm: lcmDocs,\n  log: logDocs,\n  log2: log2Docs,\n  log1p: log1pDocs,\n  log10: log10Docs,\n  mod: modDocs,\n  multiply: multiplyDocs,\n  norm: normDocs,\n  nthRoot: nthRootDocs,\n  nthRoots: nthRootsDocs,\n  pow: powDocs,\n  round: roundDocs,\n  sign: signDocs,\n  sqrt: sqrtDocs,\n  sqrtm: sqrtmDocs,\n  square: squareDocs,\n  subtract: subtractDocs,\n  unaryMinus: unaryMinusDocs,\n  unaryPlus: unaryPlusDocs,\n  xgcd: xgcdDocs,\n  // functions - bitwise\n  bitAnd: bitAndDocs,\n  bitNot: bitNotDocs,\n  bitOr: bitOrDocs,\n  bitXor: bitXorDocs,\n  leftShift: leftShiftDocs,\n  rightArithShift: rightArithShiftDocs,\n  rightLogShift: rightLogShiftDocs,\n  // functions - combinatorics\n  bellNumbers: bellNumbersDocs,\n  catalan: catalanDocs,\n  composition: compositionDocs,\n  stirlingS2: stirlingS2Docs,\n  // functions - core\n  config: configDocs,\n  \"import\": importDocs,\n  typed: typedDocs,\n  // functions - complex\n  arg: argDocs,\n  conj: conjDocs,\n  re: reDocs,\n  im: imDocs,\n  // functions - expression\n  evaluate: evaluateDocs,\n  eval: evaluateDocs,\n  // TODO: deprecated, cleanup in v7\n  help: helpDocs,\n  // functions - geometry\n  distance: distanceDocs,\n  intersect: intersectDocs,\n  // functions - logical\n  and: andDocs,\n  not: notDocs,\n  or: orDocs,\n  xor: xorDocs,\n  // functions - matrix\n  concat: concatDocs,\n  cross: crossDocs,\n  column: columnDocs,\n  ctranspose: ctransposeDocs,\n  det: detDocs,\n  diag: diagDocs,\n  dot: dotDocs,\n  getMatrixDataType: getMatrixDataTypeDocs,\n  identity: identityDocs,\n  filter: filterDocs,\n  flatten: flattenDocs,\n  forEach: forEachDocs,\n  inv: invDocs,\n  eigs: eigsDocs,\n  kron: kronDocs,\n  map: mapDocs,\n  ones: onesDocs,\n  partitionSelect: partitionSelectDocs,\n  range: rangeDocs,\n  resize: resizeDocs,\n  reshape: reshapeDocs,\n  row: rowDocs,\n  size: sizeDocs,\n  sort: sortDocs,\n  squeeze: squeezeDocs,\n  subset: subsetDocs,\n  trace: traceDocs,\n  transpose: transposeDocs,\n  zeros: zerosDocs,\n  // functions - probability\n  combinations: combinationsDocs,\n  combinationsWithRep: combinationsWithRepDocs,\n  // distribution: distributionDocs,\n  factorial: factorialDocs,\n  gamma: gammaDocs,\n  kldivergence: kldivergenceDocs,\n  multinomial: multinomialDocs,\n  permutations: permutationsDocs,\n  pickRandom: pickRandomDocs,\n  random: randomDocs,\n  randomInt: randomIntDocs,\n  // functions - relational\n  compare: compareDocs,\n  compareNatural: compareNaturalDocs,\n  compareText: compareTextDocs,\n  deepEqual: deepEqualDocs,\n  equal: equalDocs,\n  equalText: equalTextDocs,\n  larger: largerDocs,\n  largerEq: largerEqDocs,\n  smaller: smallerDocs,\n  smallerEq: smallerEqDocs,\n  unequal: unequalDocs,\n  // functions - set\n  setCartesian: setCartesianDocs,\n  setDifference: setDifferenceDocs,\n  setDistinct: setDistinctDocs,\n  setIntersect: setIntersectDocs,\n  setIsSubset: setIsSubsetDocs,\n  setMultiplicity: setMultiplicityDocs,\n  setPowerset: setPowersetDocs,\n  setSize: setSizeDocs,\n  setSymDifference: setSymDifferenceDocs,\n  setUnion: setUnionDocs,\n  // functions - special\n  erf: erfDocs,\n  // functions - statistics\n  mad: madDocs,\n  max: maxDocs,\n  mean: meanDocs,\n  median: medianDocs,\n  min: minDocs,\n  mode: modeDocs,\n  prod: prodDocs,\n  quantileSeq: quantileSeqDocs,\n  std: stdDocs,\n  sum: sumDocs,\n  variance: varianceDocs,\n  \"var\": varianceDocs,\n  // TODO: deprecated, cleanup in v7\n  // functions - trigonometry\n  acos: acosDocs,\n  acosh: acoshDocs,\n  acot: acotDocs,\n  acoth: acothDocs,\n  acsc: acscDocs,\n  acsch: acschDocs,\n  asec: asecDocs,\n  asech: asechDocs,\n  asin: asinDocs,\n  asinh: asinhDocs,\n  atan: atanDocs,\n  atanh: atanhDocs,\n  atan2: atan2Docs,\n  cos: cosDocs,\n  cosh: coshDocs,\n  cot: cotDocs,\n  coth: cothDocs,\n  csc: cscDocs,\n  csch: cschDocs,\n  sec: secDocs,\n  sech: sechDocs,\n  sin: sinDocs,\n  sinh: sinhDocs,\n  tan: tanDocs,\n  tanh: tanhDocs,\n  // functions - units\n  to: toDocs,\n  // functions - utils\n  clone: cloneDocs,\n  format: formatDocs,\n  isNaN: isNaNDocs,\n  isInteger: isIntegerDocs,\n  isNegative: isNegativeDocs,\n  isNumeric: isNumericDocs,\n  hasNumericValue: hasNumericValueDocs,\n  isPositive: isPositiveDocs,\n  isPrime: isPrimeDocs,\n  isZero: isZeroDocs,\n  // print: printDocs // TODO: add documentation for print as soon as the parser supports objects.\n  typeOf: typeOfDocs,\n  \"typeof\": typeOfDocs,\n  // TODO: deprecated, cleanup in v7\n  numeric: numericDocs\n};"]},"metadata":{},"sourceType":"module"}