{"ast":null,"code":"var _jsxFileName = \"/home/kaappo/testit/canvas/src/components/compass.js\";\nimport React from 'react';\nconst cheese = \"https://upload.wikimedia.org/wikipedia/commons/a/a4/Kaastekoop.jpg\";\n\nclass Compass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = {\n      width: props.width,\n      height: props.height,\n      heading: props.heading\n    };\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.canvas;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height); // img.onload = () => {\n    // ctx.drawImage(img, 0, 0);\n\n    ctx.font = \"40px Courier\";\n    ctx.fillText(this.props.heading.toFixed(2), this.props.width / 2, this.props.height);\n    ctx.beginPath();\n    ctx.arc(this.props.width / 2, this.props.height, this.props.width / 2, 0, 2 * Math.PI);\n    ctx.rect(0, 0, this.props.width, this.props.height);\n    let division = 8;\n    ctx.font = \"20px Courier\";\n\n    for (let i = 0; i < division; i++) {\n      let angle = 2 * Math.PI / division * i + this.props.heading * Math.PI / 180;\n      console.log(angle); // ctx.fillText(this.props.heading.toFixed(2), start[0] + 5, start[1] + 5)\n\n      this.drawAngleText(ctx, angle, start);\n    }\n\n    ctx.stroke();\n    ctx.closePath(); // }\n  }\n\n  drawAngleText(ctx, angle, pos) {\n    let x = pos[0];\n    let y = pos[1];\n    ctx.save();\n    ctx.translate(x + 10 * Math.sin(angle - Math.PI), y + 10 * Math.cos(angle - Math.PI));\n    ctx.rotate(-angle + Math.PI);\n    ctx.textAlign = 'center';\n    ctx.fillText((angle / Math.PI * 180).toFixed(0), 0, 10);\n    ctx.restore();\n  }\n\n  drawCompassLine(ctx, angle, length) {\n    let start = [this.props.width / 2 + Math.sin(angle) * this.props.width / 2.5, this.props.height + Math.cos(angle) * this.props.width / 2.5];\n    let end = [this.props.width / 2 + Math.sin(angle) * this.props.width / 2, this.props.height + Math.cos(angle) * this.props.width / 2];\n    ctx.moveTo(start[0], start[1]);\n    ctx.lineTo(end[0], end[1]);\n  }\n\n  componentDidUpdate() {\n    this.componentDidMount();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      width: this.props.width,\n      height: this.props.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      ref: \"image\",\n      src: cheese,\n      className: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Compass;","map":{"version":3,"sources":["/home/kaappo/testit/canvas/src/components/compass.js"],"names":["React","cheese","Compass","Component","constructor","props","width","height","heading","componentDidMount","canvas","refs","ctx","getContext","clearRect","font","fillText","toFixed","beginPath","arc","Math","PI","rect","division","i","angle","console","log","drawAngleText","start","stroke","closePath","pos","x","y","save","translate","sin","cos","rotate","textAlign","restore","drawCompassLine","length","end","moveTo","lineTo","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst cheese = \"https://upload.wikimedia.org/wikipedia/commons/a/a4/Kaastekoop.jpg\"\n\nclass Compass extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.props = {\n            width: props.width,\n            height: props.height,\n            heading: props.heading\n        };\n    }\n\n    componentDidMount() {\n        const canvas = this.refs.canvas;\n        const ctx = canvas.getContext(\"2d\");\n        \n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        // img.onload = () => {\n            // ctx.drawImage(img, 0, 0);\n        ctx.font = \"40px Courier\";\n        ctx.fillText(this.props.heading.toFixed(2), this.props.width / 2, this.props.height);\n\n        ctx.beginPath();\n        ctx.arc(this.props.width / 2, this.props.height, this.props.width / 2, 0, 2 * Math.PI);\n        ctx.rect(0, 0, this.props.width, this.props.height)\n\n        let division = 8;\n        ctx.font = \"20px Courier\";\n\n        for (let i = 0; i < division; i++) {\n            let angle =  2 * Math.PI / division * i + this.props.heading * Math.PI/180;\n            console.log(angle)\n            \n            \n            // ctx.fillText(this.props.heading.toFixed(2), start[0] + 5, start[1] + 5)\n            this.drawAngleText(ctx, angle, start)\n        }\n        ctx.stroke();\n        ctx.closePath();\n        // }\n    }\n\n    drawAngleText (ctx, angle, pos) {\n        let x = pos[0];\n        let y = pos[1];\n\n        ctx.save();\n        ctx.translate(x + 10 * Math.sin(angle - Math.PI), y + 10 * Math.cos(angle - Math.PI));\n        ctx.rotate(-angle + Math.PI);\n\n        ctx.textAlign = 'center';\n        ctx.fillText((angle / Math.PI * 180).toFixed(0), 0, 10);\n\n        ctx.restore();\n\n    }\n\n    drawCompassLine (ctx, angle, length) {\n        let start = [this.props.width / 2 + Math.sin(angle) * this.props.width / 2.5, this.props.height + Math.cos(angle) * this.props.width / 2.5]\n        let end = [this.props.width / 2 + Math.sin(angle) * this.props.width / 2, this.props.height + Math.cos(angle) * this.props.width / 2]\n\n        ctx.moveTo(start[0], start[1]);\n        ctx.lineTo(end[0], end[1]);\n    }\n\n    componentDidUpdate () {\n        this.componentDidMount();\n    }\n\n    render () {\n        return <div>\n            <canvas ref=\"canvas\" width={this.props.width} height={this.props.height} />\n\n            <img ref=\"image\" src={cheese} className=\"hidden\" />\n        </div>\n    }\n}\n\nexport default Compass"]},"metadata":{},"sourceType":"module"}