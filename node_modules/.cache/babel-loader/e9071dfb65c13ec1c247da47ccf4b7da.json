{"ast":null,"code":"var _jsxFileName = \"/home/kaappo/testit/canvas/src/components/numberdisplay.js\";\nimport React from 'react';\nimport \"/home/kaappo/testit/canvas/src/components/numberdisplay.css\";\n\nclass NumberDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = {\n      value: props.value,\n      suffix: props.suffix,\n      unit: props.unit,\n      upperBound: props.upperBound,\n      decimalPlaces: props.decimalPlaces,\n      width: props.width,\n      height: props.height\n    };\n  }\n\n  componentDidMount() {\n    this.canvas = this.refs.canvas;\n    const ctx = this.canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    ctx.font = \"60px Courier\";\n    let measure = this.props.upperBound.toFixed(this.props.decimalPlaces) + this.props.suffix + \" \" + this.props.unit;\n    let text1 = this.props.value.toFixed(0);\n    let text2 = \".\" + ((this.props.value - Math.trunc(this.props.value)) * 10 ** this.props.decimalPlaces).toFixed(0) + this.props.suffix + \" \" + this.props.unit; // let size = ctx.measureText(measure);\n    // console.log(size)\n    // ctx.fillText(text, (this.canvas.width - size.width) / 2, (this.canvas.height + size.actualBoundingBoxAscent) / 2)\n\n    let width = ctx.measureText(text1).width;\n    ctx.fillText(text1, this.canvas.width / 2 - width, this.canvas.height / 2);\n    ctx.font = \"40px Courier\";\n    ctx.fillText(text2, this.canvas.width / 2, this.canvas.height / 2);\n  }\n\n  componentDidUpdate() {\n    this.componentDidMount();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"displayContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      width: this.props.width,\n      height: this.props.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default NumberDisplay;","map":{"version":3,"sources":["/home/kaappo/testit/canvas/src/components/numberdisplay.js"],"names":["React","NumberDisplay","Component","constructor","props","value","suffix","unit","upperBound","decimalPlaces","width","height","componentDidMount","canvas","refs","ctx","getContext","clearRect","font","measure","toFixed","text1","text2","Math","trunc","measureText","fillText","componentDidUpdate","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,6DAAP;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKA,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAED,KAAK,CAACC,KADJ;AAETC,MAAAA,MAAM,EAAEF,KAAK,CAACE,MAFL;AAGTC,MAAAA,IAAI,EAAEH,KAAK,CAACG,IAHH;AAITC,MAAAA,UAAU,EAAEJ,KAAK,CAACI,UAJT;AAKTC,MAAAA,aAAa,EAAEL,KAAK,CAACK,aALZ;AAOTC,MAAAA,KAAK,EAAEN,KAAK,CAACM,KAPJ;AAQTC,MAAAA,MAAM,EAAEP,KAAK,CAACO;AARL,KAAb;AAWH;;AAEDC,EAAAA,iBAAiB,GAAI;AACjB,SAAKC,MAAL,GAAc,KAAKC,IAAL,CAAUD,MAAxB;AACA,UAAME,GAAG,GAAG,KAAKF,MAAL,CAAYG,UAAZ,CAAuB,IAAvB,CAAZ;AACAD,IAAAA,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,KAAKJ,MAAL,CAAYH,KAAhC,EAAuC,KAAKG,MAAL,CAAYF,MAAnD;AAEAI,IAAAA,GAAG,CAACG,IAAJ,GAAW,cAAX;AAEA,QAAIC,OAAO,GAAG,KAAKf,KAAL,CAAWI,UAAX,CAAsBY,OAAtB,CAA8B,KAAKhB,KAAL,CAAWK,aAAzC,IAA0D,KAAKL,KAAL,CAAWE,MAArE,GAA8E,GAA9E,GAAoF,KAAKF,KAAL,CAAWG,IAA7G;AACA,QAAIc,KAAK,GAAG,KAAKjB,KAAL,CAAWC,KAAX,CAAiBe,OAAjB,CAAyB,CAAzB,CAAZ;AACA,QAAIE,KAAK,GAAG,MAAM,CAAC,CAAC,KAAKlB,KAAL,CAAWC,KAAX,GAAmBkB,IAAI,CAACC,KAAL,CAAW,KAAKpB,KAAL,CAAWC,KAAtB,CAApB,IAAoD,MAAM,KAAKD,KAAL,CAAWK,aAAtE,EAAqFW,OAArF,CAA6F,CAA7F,CAAN,GAAwG,KAAKhB,KAAL,CAAWE,MAAnH,GAA4H,GAA5H,GAAkI,KAAKF,KAAL,CAAWG,IAAzJ,CATiB,CAWjB;AACA;AACA;;AACA,QAAIG,KAAK,GAAGK,GAAG,CAACU,WAAJ,CAAgBJ,KAAhB,EAAuBX,KAAnC;AACAK,IAAAA,GAAG,CAACW,QAAJ,CAAaL,KAAb,EAAoB,KAAKR,MAAL,CAAYH,KAAZ,GAAoB,CAApB,GAAwBA,KAA5C,EAAmD,KAAKG,MAAL,CAAYF,MAAZ,GAAqB,CAAxE;AACAI,IAAAA,GAAG,CAACG,IAAJ,GAAW,cAAX;AACAH,IAAAA,GAAG,CAACW,QAAJ,CAAaJ,KAAb,EAAoB,KAAKT,MAAL,CAAYH,KAAZ,GAAoB,CAAxC,EAA2C,KAAKG,MAAL,CAAYF,MAAZ,GAAqB,CAAhE;AAEH;;AAEDgB,EAAAA,kBAAkB,GAAI;AAClB,SAAKf,iBAAL;AACH;;AAEDgB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,GAAG,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWM,KAAvC;AAA8C,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWO,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAhDuC;;AAmD5C,eAAeV,aAAf","sourcesContent":["import React from 'react';\n\nimport \"/home/kaappo/testit/canvas/src/components/numberdisplay.css\";\n\nclass NumberDisplay extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.props = {\n            value: props.value,\n            suffix: props.suffix,\n            unit: props.unit,\n            upperBound: props.upperBound,\n            decimalPlaces: props.decimalPlaces,\n\n            width: props.width,\n            height: props.height,\n\n        }\n    }\n\n    componentDidMount () {\n        this.canvas = this.refs.canvas;\n        const ctx = this.canvas.getContext(\"2d\");\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\n        ctx.font = \"60px Courier\"\n\n        let measure = this.props.upperBound.toFixed(this.props.decimalPlaces) + this.props.suffix + \" \" + this.props.unit\n        let text1 = this.props.value.toFixed(0);\n        let text2 = \".\" + ((this.props.value - Math.trunc(this.props.value)) * 10 ** this.props.decimalPlaces).toFixed(0) + this.props.suffix + \" \" + this.props.unit\n\n        // let size = ctx.measureText(measure);\n        // console.log(size)\n        // ctx.fillText(text, (this.canvas.width - size.width) / 2, (this.canvas.height + size.actualBoundingBoxAscent) / 2)\n        let width = ctx.measureText(text1).width\n        ctx.fillText(text1, this.canvas.width / 2 - width, this.canvas.height / 2)\n        ctx.font = \"40px Courier\"\n        ctx.fillText(text2, this.canvas.width / 2, this.canvas.height / 2)\n\n    }\n\n    componentDidUpdate () {\n        this.componentDidMount()\n    }\n\n    render() {\n        return (\n            <div className=\"displayContainer\">\n                <canvas ref=\"canvas\" width={this.props.width} height={this.props.height}/>\n            </div>\n        );\n    }\n}\n\nexport default NumberDisplay;\n"]},"metadata":{},"sourceType":"module"}