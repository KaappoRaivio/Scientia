{"ast":null,"code":"var _jsxFileName = \"/home/kaappo/testit/canvas/src/components/wind.js\";\nimport React from 'react';\nimport { mod } from \"mathjs\";\nimport NumberDisplay from \"/home/kaappo/testit/canvas/src/components/numberdisplay.js\";\nimport DrawHelper from './helpers';\n\nclass Wind extends React.Component {\n  // constructor (props) {\n  //     super(props);\n  // }\n  componentDidMount() {\n    const canvas = this.refs.canvas;\n    const ctx = canvas.getContext(\"2d\");\n    this.state = {\n      compassLineMaxLength: 10,\n      canvas: canvas,\n      ctx: ctx,\n      drawHelper: new DrawHelper(canvas, ctx),\n      origin: [canvas.width / 2, canvas.height / 2],\n      radius: canvas.width / 2.1,\n      closeHaulAngle: 180\n    };\n    console.log(this.state); // const canvas = this.state.canvas;\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.beginPath();\n    ctx.arc(canvas.width / 2, canvas.height / 2, this.state.radius, 0, 2 * Math.PI);\n    const divisions = [[24, 10], [72, 5]];\n\n    for (const division of divisions) {\n      this.drawDivision(division[0], division[1], division[0] === 24);\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    this.interval = setInterval(() => this.setState(state => {\n      return {\n        closeHaulAngle: (state.closeHaulAngle + 1) % 360\n      };\n    }), 100);\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    // const ctx = this.ctx;\n    this.drawCloseHaulMarks(); // let divisions = [12, 36, 72];\n    // ctx.font = \"20px Courier\";\n    // for (let index = 0; index < divisions.length; index++) {\n    //     let division = divisions[index]\n    //     this.drawDivision(division, ((divisions.length - index + 1) / divisions.length) ** 2 * 15, index === 0);\n    // }\n  }\n\n  drawDivision(division, length, drawNumbers) {\n    for (let i = 0; i < division; i++) {\n      let baseAngle = 2 * Math.PI / division * i; // let angleOffset = this.props.heading * Math.PI / 180;\n\n      let angleOffset = 0;\n      this.state.drawHelper.drawCompassLine(this.state.origin, baseAngle + angleOffset, this.state.radius, length);\n\n      if (drawNumbers) {\n        let angleText = baseAngle / Math.PI * 180 <= 180 ? mod(baseAngle / Math.PI * 180, 360) : mod(360 - baseAngle / Math.PI * 180, 360);\n        this.state.drawHelper.drawAngleText(this.state.origin, baseAngle + angleOffset, this.state.radius - length, angleText.toFixed(0), true);\n      }\n    }\n  }\n\n  drawCloseHaulMarks() {\n    const ctx = this.state.ctx;\n    ctx.beginPath();\n    ctx.fillStyle = \"rgba(0, 200, 0, 0.75)\";\n    ctx.arc(this.state.origin[0], this.state.origin[1], this.state.radius, -Math.PI / 2, (90 - this.state.closeHaulAngle) / 180 * -Math.PI, false);\n    ctx.arc(this.state.origin[0], this.state.origin[1], this.state.radius - this.state.compassLineMaxLength, (90 - this.state.closeHaulAngle) / 180 * -Math.PI, -Math.PI / 2, true);\n    ctx.closePath();\n    ctx.fill();\n    ctx.beginPath();\n    ctx.fillStyle = \"rgba(255, 100, 100, 0.75)\";\n    ctx.arc(this.state.origin[0], this.state.origin[1], this.state.radius, -Math.PI / 4 * 3, -Math.PI / 2, false);\n    ctx.arc(this.state.origin[0], this.state.origin[1], this.state.radius - this.state.compassLineMaxLength, -Math.PI / 2, -Math.PI / 4 * 3, true);\n    ctx.closePath();\n    ctx.fill();\n  } // drawDivision(division, length, drawNumbers) {\n  //     for (let i = 0; i < division; i++) {\n  //         let baseAngle = 2 * Math.PI / division * i;\n  //         let angleOffset = -this.props.heading * Math.PI / 180;\n  //         this.drawHelper.drawCompassLine(this.origin, baseAngle + angleOffset, this.radius, length)\n  //         if (drawNumbers) {\n  //             let angleText = mod(baseAngle / Math.PI * 180, 360);\n  //             this.drawHelper.drawAngleText(this.origin, baseAngle + angleOffset, this.radius - length, angleText.toFixed(0))\n  //         }\n  //     }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        width: this.props.width + \"px\",\n        height: this.props.height + \"px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      className: \"compassRose\",\n      width: this.props.width,\n      height: this.props.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Wind;","map":{"version":3,"sources":["/home/kaappo/testit/canvas/src/components/wind.js"],"names":["React","mod","NumberDisplay","DrawHelper","Wind","Component","componentDidMount","canvas","refs","ctx","getContext","state","compassLineMaxLength","drawHelper","origin","width","height","radius","closeHaulAngle","console","log","clearRect","beginPath","arc","Math","PI","divisions","division","drawDivision","closePath","stroke","interval","setInterval","setState","componentDidUpdate","drawCloseHaulMarks","length","drawNumbers","i","baseAngle","angleOffset","drawCompassLine","angleText","drawAngleText","toFixed","fillStyle","fill","render","props"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { mod } from \"mathjs\";\nimport NumberDisplay from \"/home/kaappo/testit/canvas/src/components/numberdisplay.js\"\nimport DrawHelper from './helpers';\n\n\nclass Wind extends React.Component {\n    // constructor (props) {\n    //     super(props);\n        \n    // }\n\n    componentDidMount() {\n        const canvas = this.refs.canvas;\n        const ctx = canvas.getContext(\"2d\");\n\n        this.state = {\n            compassLineMaxLength: 10,\n            canvas: canvas,\n            ctx: ctx,\n            drawHelper: new DrawHelper(canvas, ctx),\n\n            origin: [canvas.width / 2, canvas.height / 2],\n            radius: canvas.width / 2.1,\n\n            closeHaulAngle: 180\n        };\n\n        console.log(this.state);\n\n        // const canvas = this.state.canvas;\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.beginPath();\n        ctx.arc(canvas.width / 2, canvas.height / 2, this.state.radius, 0, 2 * Math.PI);\n\n        const divisions = [[24, 10], [72, 5]];\n        for (const division of divisions) {\n            this.drawDivision(division[0], division[1], division[0] === 24);\n        }\n            \n        \n        ctx.closePath();\n        ctx.stroke();\n        \n\n        this.interval = setInterval(() => this.setState((state) => {\n            return { closeHaulAngle: (state.closeHaulAngle + 1) % 360 };\n        }), 100);\n\n        this.componentDidUpdate();\n    }\n\n\n    componentDidUpdate() {\n        // const ctx = this.ctx;\n\n        this.drawCloseHaulMarks();\n    \n\n        // let divisions = [12, 36, 72];\n        // ctx.font = \"20px Courier\";\n        // for (let index = 0; index < divisions.length; index++) {\n        //     let division = divisions[index]\n        //     this.drawDivision(division, ((divisions.length - index + 1) / divisions.length) ** 2 * 15, index === 0);\n        // }\n    }\n\n    drawDivision(division, length, drawNumbers) {\n        for (let i = 0; i < division; i++) {\n            let baseAngle = 2 * Math.PI / division * i;\n            // let angleOffset = this.props.heading * Math.PI / 180;\n            let angleOffset = 0;\n\n            this.state.drawHelper.drawCompassLine(this.state.origin, baseAngle + angleOffset, this.state.radius, length)\n            if (drawNumbers) {\n                let angleText = baseAngle / Math.PI * 180 <= 180 ? mod(baseAngle / Math.PI * 180, 360) : mod(360 - baseAngle / Math.PI * 180, 360);\n                this.state.drawHelper.drawAngleText(this.state.origin, baseAngle + angleOffset, this.state.radius - length, angleText.toFixed(0), true)\n            }\n        }\n    }\n\n    drawCloseHaulMarks () {\n        const ctx = this.state.ctx;\n        ctx.beginPath();\n        ctx.fillStyle = \"rgba(0, 200, 0, 0.75)\"\n        ctx.arc(this.state.origin[0], this.state.origin[1], this.state.radius, -Math.PI / 2, (90 - this.state.closeHaulAngle) / 180 * -Math.PI, false);\n        ctx.arc(this.state.origin[0], this.state.origin[1], this.state.radius - this.state.compassLineMaxLength, (90 - this.state.closeHaulAngle) / 180 * -Math.PI, -Math.PI / 2, true);\n        ctx.closePath();\n        ctx.fill();\n        \n        ctx.beginPath();\n        ctx.fillStyle = \"rgba(255, 100, 100, 0.75)\"\n        ctx.arc(this.state.origin[0], this.state.origin[1], this.state.radius, -Math.PI / 4 * 3, -Math.PI / 2, false);\n        ctx.arc(this.state.origin[0], this.state.origin[1], this.state.radius - this.state.compassLineMaxLength, -Math.PI / 2 , - Math.PI / 4 * 3, true);\n        ctx.closePath();\n        ctx.fill();\n\n\n    }\n\n\n    // drawDivision(division, length, drawNumbers) {\n    //     for (let i = 0; i < division; i++) {\n    //         let baseAngle = 2 * Math.PI / division * i;\n    //         let angleOffset = -this.props.heading * Math.PI / 180;\n\n\n    //         this.drawHelper.drawCompassLine(this.origin, baseAngle + angleOffset, this.radius, length)\n    //         if (drawNumbers) {\n    //             let angleText = mod(baseAngle / Math.PI * 180, 360);\n    //             this.drawHelper.drawAngleText(this.origin, baseAngle + angleOffset, this.radius - length, angleText.toFixed(0))\n    //         }\n    //     }\n    // }\n    render() {\n        return <div className=\"container\" style={{ width: this.props.width + \"px\", height: this.props.height + \"px\" }}>\n            {/* <NumberDisplay\n                className=\"number\"\n                value={this.props.heading}\n                suffix=\"°\"\n                unit=\"T\"\n                width={this.props.width}\n                height={this.props.height / 3 * 2}\n                upperBound={360}\n                decimalPlaces={1}\n                fontSize={this.props.width / 4}\n            /> */}\n            <canvas ref=\"canvas\" className=\"compassRose\" width={this.props.width} height={this.props.height} />\n        </div>\n    }\n}\n\nexport default Wind"]},"metadata":{},"sourceType":"module"}