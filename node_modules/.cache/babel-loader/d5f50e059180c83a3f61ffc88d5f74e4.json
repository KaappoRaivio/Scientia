{"ast":null,"code":"var _jsxFileName = \"/home/kaappo/testit/canvas/src/components/compass.js\";\nimport React from 'react';\nimport { mod } from \"mathjs\";\nimport \"/home/kaappo/testit/canvas/src/components/compass.css\";\nimport NumberDisplay from \"/home/kaappo/testit/canvas/src/components/numberdisplay.js\";\nimport DrawHelper from \"./helpers.js\";\n\nclass Compass extends React.Component {\n  constructor(props) {\n    super(props); // this.props = {\n    //     width: props.width,\n    //     height: props.height,\n    //     heading: props.heading,\n    // };\n\n    this.arcCenterOffsetY = this.props.width / 2.6;\n    this.radius = this.getCircleRadius();\n    console.log(this.props.height + this.arcCenterOffsetY, this.radius); // this.origin = [this.props.width / 2, 0];\n\n    this.state = {\n      heading: 0\n    };\n\n    this.onMessage = message => {\n      console.log(\"Received message: \" + JSON.stringify(message) + \", \" + this.radius);\n      const extracted = message.values[0].value / Math.PI * 180;\n\n      if (message.source.label === \"nmeaFromFile\") {\n        this.setState({\n          heading: extracted\n        });\n      }\n    };\n\n    this.props.subscribe([\"navigation.courseOverGroundTrue\"], this.onMessage);\n  }\n\n  getCircleRadius() {\n    return Math.sqrt((this.props.width / 2) ** 2 + this.arcCenterOffsetY ** 2);\n  }\n\n  componentDidMount() {\n    this.canvas = this.refs.canvas;\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.origin = [this.canvas.width / 2, this.canvas.height + this.arcCenterOffsetY];\n    this.drawHelper = new DrawHelper(this.canvas, this.ctx);\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    const ctx = this.ctx;\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    ctx.beginPath();\n    ctx.arc(this.props.width / 2, this.canvas.height + this.arcCenterOffsetY, this.radius, 0, 2 * Math.PI);\n    ctx.fillRect(this.props.width / 2 - 1, this.canvas.height - this.radius + this.arcCenterOffsetY - 10, 2, 10);\n    let divisions = [24, 72, 144];\n    ctx.font = this.canvas.width / 20 + \"px Courier\";\n\n    for (let index = 0; index < divisions.length; index++) {\n      let division = divisions[index];\n      this.drawDivision(division, ((divisions.length - index + 1) / divisions.length) ** 2 * 15, index === 0);\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n  }\n\n  drawDivision(division, length, drawNumbers) {\n    for (let i = 0; i < division; i++) {\n      let baseAngle = 2 * Math.PI / division * i;\n      let angleOffset = -this.state.heading * Math.PI / 180;\n      this.drawHelper.drawCompassLine(this.origin, baseAngle + angleOffset, this.radius, length);\n\n      if (drawNumbers) {\n        let angleText = mod(baseAngle / Math.PI * 180, 360);\n        this.drawHelper.drawAngleText(this.origin, baseAngle + angleOffset, this.radius - length, angleText.toFixed(0));\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        width: this.props.width + \"px\",\n        height: this.props.height + \"px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(NumberDisplay, {\n      className: \"number\",\n      value: this.state.heading,\n      suffix: \"\\xB0\",\n      unit: \"T\",\n      width: this.props.width,\n      height: this.props.height / 3 * 2,\n      upperBound: 360,\n      decimalPlaces: 1,\n      fontSize: this.props.width / 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      className: \"compassRose\",\n      width: this.props.width,\n      height: this.props.height / 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Compass;","map":{"version":3,"sources":["/home/kaappo/testit/canvas/src/components/compass.js"],"names":["React","mod","NumberDisplay","DrawHelper","Compass","Component","constructor","props","arcCenterOffsetY","width","radius","getCircleRadius","console","log","height","state","heading","onMessage","message","JSON","stringify","extracted","values","value","Math","PI","source","label","setState","subscribe","sqrt","componentDidMount","canvas","refs","ctx","getContext","origin","drawHelper","componentDidUpdate","clearRect","beginPath","arc","fillRect","divisions","font","index","length","division","drawDivision","closePath","stroke","drawNumbers","i","baseAngle","angleOffset","drawCompassLine","angleText","drawAngleText","toFixed","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { mod } from \"mathjs\";\nimport \"/home/kaappo/testit/canvas/src/components/compass.css\"\nimport NumberDisplay from \"/home/kaappo/testit/canvas/src/components/numberdisplay.js\"\n\nimport DrawHelper from \"./helpers.js\"\n\nclass Compass extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // this.props = {\n        //     width: props.width,\n        //     height: props.height,\n        //     heading: props.heading,\n        // };\n\n        this.arcCenterOffsetY = this.props.width / 2.6;\n        this.radius = this.getCircleRadius();\n        console.log(this.props.height + this.arcCenterOffsetY, this.radius)\n        // this.origin = [this.props.width / 2, 0];\n\n        this.state = {\n            heading: 0\n        }\n\n        this.onMessage = (message) => {\n            console.log(\"Received message: \" + JSON.stringify(message) + \", \" + this.radius);\n            const extracted = message.values[0].value / Math.PI * 180;\n            if (message.source.label === \"nmeaFromFile\") {\n                this.setState({heading: extracted});\n            }\n        }\n\n        this.props.subscribe([\"navigation.courseOverGroundTrue\"], this.onMessage)\n    }\n\n\n\n    getCircleRadius () {\n        return Math.sqrt((this.props.width / 2) ** 2 + this.arcCenterOffsetY ** 2)\n    }\n\n    componentDidMount() {\n        this.canvas = this.refs.canvas;\n        this.ctx = this.canvas.getContext(\"2d\");\n\n        this.origin = [this.canvas.width / 2, this.canvas.height + this.arcCenterOffsetY];\n\n        this.drawHelper = new DrawHelper(this.canvas, this.ctx);\n        this.componentDidUpdate();        \n    }\n\n\n    componentDidUpdate () {\n        const ctx = this.ctx;\n\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        ctx.beginPath();\n        ctx.arc(this.props.width / 2, this.canvas.height + this.arcCenterOffsetY, this.radius, 0, 2 * Math.PI);\n        ctx.fillRect(this.props.width / 2 - 1, this.canvas.height - this.radius + this.arcCenterOffsetY - 10, 2, 10)\n\n        let divisions = [24, 72, 144];\n        ctx.font = this.canvas.width / 20 + \"px Courier\";\n        for (let index = 0; index < divisions.length; index++) {\n            let division = divisions[index]\n            this.drawDivision(division, ((divisions.length - index + 1) / divisions.length) ** 2 * 15, index === 0);\n        }\n\n        ctx.closePath();\n        ctx.stroke();\n    }\n\n    drawDivision (division, length, drawNumbers) {\n        for (let i = 0; i < division; i++) {\n            let baseAngle = 2 * Math.PI / division * i;\n            let angleOffset = -this.state.heading * Math.PI / 180;\n\n\n            this.drawHelper.drawCompassLine(this.origin, baseAngle + angleOffset, this.radius, length)\n            if (drawNumbers) {\n                let angleText = mod(baseAngle / Math.PI * 180, 360);\n                this.drawHelper.drawAngleText(this.origin, baseAngle + angleOffset, this.radius - length, angleText.toFixed(0))\n            }\n        }\n    }\n\n    render () {\n        return <div className=\"container\" style={{width: this.props.width + \"px\", height: this.props.height + \"px\"}}>\n            <NumberDisplay \n                className=\"number\" \n                value={this.state.heading} \n                suffix=\"°\" \n                unit=\"T\" \n                width={this.props.width} \n                height={this.props.height / 3 * 2} \n                upperBound={360} \n                decimalPlaces={1} \n                fontSize={this.props.width / 4} \n            />            \n            <canvas ref=\"canvas\" className=\"compassRose\" width={this.props.width} height={this.props.height / 3} />\n        </div>\n    }\n}\n\nexport default Compass"]},"metadata":{},"sourceType":"module"}