{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport { errorTransform } from '../../transform/utils/errorTransform';\nimport { getSafeProperty } from '../../../utils/customs';\nexport function accessFactory(_ref) {\n  var subset = _ref.subset;\n  /**\n   * Retrieve part of an object:\n   *\n   * - Retrieve a property from an object\n   * - Retrieve a part of a string\n   * - Retrieve a matrix subset\n   *\n   * @param {Object | Array | Matrix | string} object\n   * @param {Index} index\n   * @return {Object | Array | Matrix | string} Returns the subset\n   */\n\n  return function access(object, index) {\n    try {\n      if (Array.isArray(object)) {\n        return subset(object, index);\n      } else if (object && typeof object.subset === 'function') {\n        // Matrix\n        return object.subset(index);\n      } else if (typeof object === 'string') {\n        // TODO: move getStringSubset into a separate util file, use that\n        return subset(object, index);\n      } else if (_typeof(object) === 'object') {\n        if (!index.isObjectProperty()) {\n          throw new TypeError('Cannot apply a numeric index as object property');\n        }\n\n        return getSafeProperty(object, index.getObjectProperty());\n      } else {\n        throw new TypeError('Cannot apply index: unsupported type of object');\n      }\n    } catch (err) {\n      throw errorTransform(err);\n    }\n  };\n}","map":{"version":3,"sources":["/home/kaappo/git/kments/node_modules/mathjs/es/expression/node/utils/access.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","errorTransform","getSafeProperty","accessFactory","_ref","subset","access","object","index","Array","isArray","isObjectProperty","TypeError","getObjectProperty","err"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE;;AAA2B,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AAAEH,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAO,OAAOA,GAAd;AAAoB,KAAtD;AAAyD,GAApI,MAA0I;AAAED,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;AAA+H,KAAjK;AAAoK;;AAAC,SAAOD,OAAO,CAACC,GAAD,CAAd;AAAsB;;AAE1X,SAASK,cAAT,QAA+B,sCAA/B;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAClC,MAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;AAEA;;;;;;;;;;;;AAWA,SAAO,SAASC,MAAT,CAAgBC,MAAhB,EAAwBC,KAAxB,EAA+B;AACpC,QAAI;AACF,UAAIC,KAAK,CAACC,OAAN,CAAcH,MAAd,CAAJ,EAA2B;AACzB,eAAOF,MAAM,CAACE,MAAD,EAASC,KAAT,CAAb;AACD,OAFD,MAEO,IAAID,MAAM,IAAI,OAAOA,MAAM,CAACF,MAAd,KAAyB,UAAvC,EAAmD;AACxD;AACA,eAAOE,MAAM,CAACF,MAAP,CAAcG,KAAd,CAAP;AACD,OAHM,MAGA,IAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;AACrC;AACA,eAAOF,MAAM,CAACE,MAAD,EAASC,KAAT,CAAb;AACD,OAHM,MAGA,IAAIb,OAAO,CAACY,MAAD,CAAP,KAAoB,QAAxB,EAAkC;AACvC,YAAI,CAACC,KAAK,CAACG,gBAAN,EAAL,EAA+B;AAC7B,gBAAM,IAAIC,SAAJ,CAAc,iDAAd,CAAN;AACD;;AAED,eAAOV,eAAe,CAACK,MAAD,EAASC,KAAK,CAACK,iBAAN,EAAT,CAAtB;AACD,OANM,MAMA;AACL,cAAM,IAAID,SAAJ,CAAc,gDAAd,CAAN;AACD;AACF,KAlBD,CAkBE,OAAOE,GAAP,EAAY;AACZ,YAAMb,cAAc,CAACa,GAAD,CAApB;AACD;AACF,GAtBD;AAuBD","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { errorTransform } from '../../transform/utils/errorTransform';\nimport { getSafeProperty } from '../../../utils/customs';\nexport function accessFactory(_ref) {\n  var subset = _ref.subset;\n\n  /**\n   * Retrieve part of an object:\n   *\n   * - Retrieve a property from an object\n   * - Retrieve a part of a string\n   * - Retrieve a matrix subset\n   *\n   * @param {Object | Array | Matrix | string} object\n   * @param {Index} index\n   * @return {Object | Array | Matrix | string} Returns the subset\n   */\n  return function access(object, index) {\n    try {\n      if (Array.isArray(object)) {\n        return subset(object, index);\n      } else if (object && typeof object.subset === 'function') {\n        // Matrix\n        return object.subset(index);\n      } else if (typeof object === 'string') {\n        // TODO: move getStringSubset into a separate util file, use that\n        return subset(object, index);\n      } else if (_typeof(object) === 'object') {\n        if (!index.isObjectProperty()) {\n          throw new TypeError('Cannot apply a numeric index as object property');\n        }\n\n        return getSafeProperty(object, index.getObjectProperty());\n      } else {\n        throw new TypeError('Cannot apply index: unsupported type of object');\n      }\n    } catch (err) {\n      throw errorTransform(err);\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}