{"ast":null,"code":"var _jsxFileName = \"/home/kaappo/git/kments/src/components/numberdisplay.js\";\nimport React from 'react';\nimport \"./numberdisplay.css\";\n\nclass NumberDisplay extends React.Component {\n  constructor(props) {\n    super(props); // this.props = {\n    //     value: props.value,\n    //     suffix: props.suffix,\n    //     unit: props.unit,\n    //     upperBound: props.upperBound,\n    //     decimalPlaces: props.decimalPlaces,\n    //     width: props.width,\n    //     height: props.height,\n    //     fontSize: props.fontSize\n    // }\n\n    console.log(this.props);\n  }\n\n  componentDidMount() {\n    this.canvas = this.refs.canvas;\n    const ctx = this.canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    ctx.font = this.props.fontSize + \"px Courier\";\n    let measureText = this.props.upperBound;\n    let text1 = this.props.value.toFixed(0);\n    let text3 = \".\" + Math.abs((this.props.value - Math.trunc(this.props.value)) * 10 ** this.props.decimalPlaces).toFixed(0) + this.props.suffix + \" \" + this.props.unit;\n    let containerWidth = ctx.measureText(measureText).width;\n    let measure = ctx.measureText(text1);\n    let width = measure.width;\n    ctx.fillText(text1, containerWidth - width, (this.canvas.height + measure.actualBoundingBoxAscent) / 2);\n    ctx.font = this.props.fontSize * 0.5 + \"px Courier\";\n    ctx.fillText(text3, containerWidth, (this.canvas.height + measure.actualBoundingBoxAscent) / 2);\n    let legend = this.props.legend;\n    ctx.fillText(legend, 0, 40);\n  }\n\n  componentDidUpdate() {\n    this.componentDidMount();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"displayContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      width: this.props.width,\n      height: this.props.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default NumberDisplay;","map":{"version":3,"sources":["/home/kaappo/git/kments/src/components/numberdisplay.js"],"names":["React","NumberDisplay","Component","constructor","props","console","log","componentDidMount","canvas","refs","ctx","getContext","clearRect","width","height","font","fontSize","measureText","upperBound","text1","value","toFixed","text3","Math","abs","trunc","decimalPlaces","suffix","unit","containerWidth","measure","fillText","actualBoundingBoxAscent","legend","componentDidUpdate","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,qBAAP;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACH;;AAEDG,EAAAA,iBAAiB,GAAI;AACjB,SAAKC,MAAL,GAAc,KAAKC,IAAL,CAAUD,MAAxB;AACA,UAAME,GAAG,GAAG,KAAKF,MAAL,CAAYG,UAAZ,CAAuB,IAAvB,CAAZ;AACAD,IAAAA,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,KAAKJ,MAAL,CAAYK,KAAhC,EAAuC,KAAKL,MAAL,CAAYM,MAAnD;AAEAJ,IAAAA,GAAG,CAACK,IAAJ,GAAW,KAAKX,KAAL,CAAWY,QAAX,GAAsB,YAAjC;AAEA,QAAIC,WAAW,GAAG,KAAKb,KAAL,CAAWc,UAA7B;AACA,QAAIC,KAAK,GAAG,KAAKf,KAAL,CAAWgB,KAAX,CAAiBC,OAAjB,CAAyB,CAAzB,CAAZ;AACA,QAAIC,KAAK,GAAG,MAAMC,IAAI,CAACC,GAAL,CAAU,CAAC,KAAKpB,KAAL,CAAWgB,KAAX,GAAmBG,IAAI,CAACE,KAAL,CAAW,KAAKrB,KAAL,CAAWgB,KAAtB,CAApB,IAAoD,MAAM,KAAKhB,KAAL,CAAWsB,aAA/E,EAA+FL,OAA/F,CAAuG,CAAvG,CAAN,GAAkH,KAAKjB,KAAL,CAAWuB,MAA7H,GAAsI,GAAtI,GAA4I,KAAKvB,KAAL,CAAWwB,IAAnK;AAEA,QAAIC,cAAc,GAAGnB,GAAG,CAACO,WAAJ,CAAgBA,WAAhB,EAA6BJ,KAAlD;AAEA,QAAIiB,OAAO,GAAGpB,GAAG,CAACO,WAAJ,CAAgBE,KAAhB,CAAd;AACA,QAAIN,KAAK,GAAGiB,OAAO,CAACjB,KAApB;AACAH,IAAAA,GAAG,CAACqB,QAAJ,CAAaZ,KAAb,EAAoBU,cAAc,GAAGhB,KAArC,EAA4C,CAAC,KAAKL,MAAL,CAAYM,MAAZ,GAAqBgB,OAAO,CAACE,uBAA9B,IAAyD,CAArG;AAEAtB,IAAAA,GAAG,CAACK,IAAJ,GAAW,KAAKX,KAAL,CAAWY,QAAX,GAAsB,GAAtB,GAA4B,YAAvC;AACAN,IAAAA,GAAG,CAACqB,QAAJ,CAAaT,KAAb,EAAoBO,cAApB,EAAoC,CAAC,KAAKrB,MAAL,CAAYM,MAAZ,GAAqBgB,OAAO,CAACE,uBAA9B,IAAyD,CAA7F;AAEA,QAAIC,MAAM,GAAG,KAAK7B,KAAL,CAAW6B,MAAxB;AACAvB,IAAAA,GAAG,CAACqB,QAAJ,CAAaE,MAAb,EAAqB,CAArB,EAAwB,EAAxB;AAEH;;AAEDC,EAAAA,kBAAkB,GAAI;AAClB,SAAK3B,iBAAL;AACH;;AAED4B,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,GAAG,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWS,KAAvC;AAA8C,MAAA,MAAM,EAAE,KAAKT,KAAL,CAAWU,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AArDuC;;AAwD5C,eAAeb,aAAf","sourcesContent":["import React from 'react';\n\nimport \"./numberdisplay.css\";\n\nclass NumberDisplay extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // this.props = {\n        //     value: props.value,\n        //     suffix: props.suffix,\n        //     unit: props.unit,\n        //     upperBound: props.upperBound,\n        //     decimalPlaces: props.decimalPlaces,\n\n        //     width: props.width,\n        //     height: props.height,\n        //     fontSize: props.fontSize\n        // }\n        console.log(this.props)\n    }\n\n    componentDidMount () {\n        this.canvas = this.refs.canvas;\n        const ctx = this.canvas.getContext(\"2d\");\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\n        ctx.font = this.props.fontSize + \"px Courier\"\n\n        let measureText = this.props.upperBound;\n        let text1 = this.props.value.toFixed(0);\n        let text3 = \".\" + Math.abs(((this.props.value - Math.trunc(this.props.value)) * 10 ** this.props.decimalPlaces)).toFixed(0) + this.props.suffix + \" \" + this.props.unit\n\n        let containerWidth = ctx.measureText(measureText).width ;\n\n        let measure = ctx.measureText(text1);\n        let width = measure.width;\n        ctx.fillText(text1, containerWidth - width, (this.canvas.height + measure.actualBoundingBoxAscent) / 2)\n        \n        ctx.font = this.props.fontSize * 0.5 + \"px Courier\"\n        ctx.fillText(text3, containerWidth, (this.canvas.height + measure.actualBoundingBoxAscent) / 2)\n\n        let legend = this.props.legend\n        ctx.fillText(legend, 0, 40);\n\n    }\n\n    componentDidUpdate () {\n        this.componentDidMount()\n    }\n\n    render() {\n        return (\n            <div className=\"displayContainer\">\n                <canvas ref=\"canvas\" width={this.props.width} height={this.props.height}/>\n            </div>\n        );\n    }\n}\n\nexport default NumberDisplay;\n"]},"metadata":{},"sourceType":"module"}