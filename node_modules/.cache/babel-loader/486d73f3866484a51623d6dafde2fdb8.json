{"ast":null,"code":"import { factory } from '../../utils/factory';\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03';\nimport { createAlgorithm07 } from '../../type/matrix/utils/algorithm07';\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13';\nvar name = 'unequal';\nvar dependencies = ['typed', 'config', 'equalScalar', 'matrix', 'DenseMatrix'];\nexport var createUnequal = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      config = _ref.config,\n      equalScalar = _ref.equalScalar,\n      matrix = _ref.matrix,\n      DenseMatrix = _ref.DenseMatrix;\n  var algorithm03 = createAlgorithm03({\n    typed: typed\n  });\n  var algorithm07 = createAlgorithm07({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm12 = createAlgorithm12({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm13 = createAlgorithm13({\n    typed: typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed: typed\n  });\n  /**\n   * Test whether two values are unequal.\n   *\n   * The function tests whether the relative difference between x and y is\n   * larger than the configured epsilon. The function cannot be used to compare\n   * values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * In case of complex numbers, x.re must unequal y.re, or x.im must unequal y.im.\n   * Strings are compared by their numerical value.\n   *\n   * Values `null` and `undefined` are compared strictly, thus `null` is unequal\n   * with everything except `null`, and `undefined` is unequal with everything\n   * except `undefined`.\n   *\n   * Syntax:\n   *\n   *    math.unequal(x, y)\n   *\n   * Examples:\n   *\n   *    math.unequal(2 + 2, 3)       // returns true\n   *    math.unequal(2 + 2, 4)       // returns false\n   *\n   *    const a = math.unit('50 cm')\n   *    const b = math.unit('5 m')\n   *    math.unequal(a, b)           // returns false\n   *\n   *    const c = [2, 5, 1]\n   *    const d = [2, 7, 1]\n   *\n   *    math.unequal(c, d)           // returns [false, true, false]\n   *    math.deepEqual(c, d)         // returns false\n   *\n   *    math.unequal(0, null)        // returns true\n   * See also:\n   *\n   *    equal, deepEqual, smaller, smallerEq, larger, largerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit | string | Array | Matrix | undefined} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit | string | Array | Matrix | undefined} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the compared values are unequal, else returns false\n   */\n\n  var unequal = typed('unequal', {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y !== null;\n      }\n\n      if (y === null) {\n        return x !== null;\n      }\n\n      if (x === undefined) {\n        return y !== undefined;\n      }\n\n      if (y === undefined) {\n        return x !== undefined;\n      }\n\n      return _unequal(x, y);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, _unequal);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, _unequal, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, _unequal, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, _unequal);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return unequal(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return unequal(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return unequal(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, _unequal, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, _unequal, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, _unequal, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, _unequal, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, _unequal, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, _unequal, true).valueOf();\n    }\n  });\n\n  function _unequal(x, y) {\n    return !equalScalar(x, y);\n  }\n\n  return unequal;\n});\nexport var createUnequalNumber = factory(name, ['typed', 'equalScalar'], function (_ref2) {\n  var typed = _ref2.typed,\n      equalScalar = _ref2.equalScalar;\n  return typed(name, {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y !== null;\n      }\n\n      if (y === null) {\n        return x !== null;\n      }\n\n      if (x === undefined) {\n        return y !== undefined;\n      }\n\n      if (y === undefined) {\n        return x !== undefined;\n      }\n\n      return !equalScalar(x, y);\n    }\n  });\n});","map":{"version":3,"sources":["/home/kaappo/testit/canvas/node_modules/mathjs/es/function/relational/unequal.js"],"names":["factory","createAlgorithm03","createAlgorithm07","createAlgorithm12","createAlgorithm14","createAlgorithm13","name","dependencies","createUnequal","_ref","typed","config","equalScalar","matrix","DenseMatrix","algorithm03","algorithm07","algorithm12","algorithm13","algorithm14","unequal","anyAny","x","y","undefined","_unequal","SparseMatrixSparseMatrix","SparseMatrixDenseMatrix","DenseMatrixSparseMatrix","DenseMatrixDenseMatrix","ArrayArray","valueOf","ArrayMatrix","MatrixArray","SparseMatrixAny","DenseMatrixAny","anySparseMatrix","anyDenseMatrix","ArrayAny","anyArray","createUnequalNumber","_ref2"],"mappings":"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","sourcesContent":["import { factory } from '../../utils/factory';\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03';\nimport { createAlgorithm07 } from '../../type/matrix/utils/algorithm07';\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13';\nvar name = 'unequal';\nvar dependencies = ['typed', 'config', 'equalScalar', 'matrix', 'DenseMatrix'];\nexport var createUnequal = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      config = _ref.config,\n      equalScalar = _ref.equalScalar,\n      matrix = _ref.matrix,\n      DenseMatrix = _ref.DenseMatrix;\n  var algorithm03 = createAlgorithm03({\n    typed: typed\n  });\n  var algorithm07 = createAlgorithm07({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm12 = createAlgorithm12({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm13 = createAlgorithm13({\n    typed: typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed: typed\n  });\n  /**\n   * Test whether two values are unequal.\n   *\n   * The function tests whether the relative difference between x and y is\n   * larger than the configured epsilon. The function cannot be used to compare\n   * values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * In case of complex numbers, x.re must unequal y.re, or x.im must unequal y.im.\n   * Strings are compared by their numerical value.\n   *\n   * Values `null` and `undefined` are compared strictly, thus `null` is unequal\n   * with everything except `null`, and `undefined` is unequal with everything\n   * except `undefined`.\n   *\n   * Syntax:\n   *\n   *    math.unequal(x, y)\n   *\n   * Examples:\n   *\n   *    math.unequal(2 + 2, 3)       // returns true\n   *    math.unequal(2 + 2, 4)       // returns false\n   *\n   *    const a = math.unit('50 cm')\n   *    const b = math.unit('5 m')\n   *    math.unequal(a, b)           // returns false\n   *\n   *    const c = [2, 5, 1]\n   *    const d = [2, 7, 1]\n   *\n   *    math.unequal(c, d)           // returns [false, true, false]\n   *    math.deepEqual(c, d)         // returns false\n   *\n   *    math.unequal(0, null)        // returns true\n   * See also:\n   *\n   *    equal, deepEqual, smaller, smallerEq, larger, largerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit | string | Array | Matrix | undefined} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit | string | Array | Matrix | undefined} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the compared values are unequal, else returns false\n   */\n\n  var unequal = typed('unequal', {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y !== null;\n      }\n\n      if (y === null) {\n        return x !== null;\n      }\n\n      if (x === undefined) {\n        return y !== undefined;\n      }\n\n      if (y === undefined) {\n        return x !== undefined;\n      }\n\n      return _unequal(x, y);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, _unequal);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, _unequal, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, _unequal, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, _unequal);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return unequal(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return unequal(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return unequal(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, _unequal, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, _unequal, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, _unequal, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, _unequal, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, _unequal, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, _unequal, true).valueOf();\n    }\n  });\n\n  function _unequal(x, y) {\n    return !equalScalar(x, y);\n  }\n\n  return unequal;\n});\nexport var createUnequalNumber = factory(name, ['typed', 'equalScalar'], function (_ref2) {\n  var typed = _ref2.typed,\n      equalScalar = _ref2.equalScalar;\n  return typed(name, {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y !== null;\n      }\n\n      if (y === null) {\n        return x !== null;\n      }\n\n      if (x === undefined) {\n        return y !== undefined;\n      }\n\n      if (y === undefined) {\n        return x !== undefined;\n      }\n\n      return !equalScalar(x, y);\n    }\n  });\n});"]},"metadata":{},"sourceType":"module"}