{"ast":null,"code":"export var quantileSeqDocs = {\n  name: 'quantileSeq',\n  category: 'Statistics',\n  syntax: ['quantileSeq(A, prob[, sorted])', 'quantileSeq(A, [prob1, prob2, ...][, sorted])', 'quantileSeq(A, N[, sorted])'],\n  description: 'Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \\n\\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.',\n  examples: ['quantileSeq([3, -1, 5, 7], 0.5)', 'quantileSeq([3, -1, 5, 7], [1/3, 2/3])', 'quantileSeq([3, -1, 5, 7], 2)', 'quantileSeq([-1, 3, 5, 7], 0.5, true)'],\n  seealso: ['mean', 'median', 'min', 'max', 'prod', 'std', 'sum', 'variance']\n};","map":{"version":3,"sources":["/home/kaappo/git/kments/node_modules/mathjs/es/expression/embeddedDocs/function/statistics/quantileSeq.js"],"names":["quantileSeqDocs","name","category","syntax","description","examples","seealso"],"mappings":"AAAA,OAAO,IAAIA,eAAe,GAAG;AAC3BC,EAAAA,IAAI,EAAE,aADqB;AAE3BC,EAAAA,QAAQ,EAAE,YAFiB;AAG3BC,EAAAA,MAAM,EAAE,CAAC,gCAAD,EAAmC,+CAAnC,EAAoF,6BAApF,CAHmB;AAI3BC,EAAAA,WAAW,EAAE,qWAJc;AAK3BC,EAAAA,QAAQ,EAAE,CAAC,iCAAD,EAAoC,wCAApC,EAA8E,+BAA9E,EAA+G,uCAA/G,CALiB;AAM3BC,EAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,KAAnB,EAA0B,KAA1B,EAAiC,MAAjC,EAAyC,KAAzC,EAAgD,KAAhD,EAAuD,UAAvD;AANkB,CAAtB","sourcesContent":["export var quantileSeqDocs = {\n  name: 'quantileSeq',\n  category: 'Statistics',\n  syntax: ['quantileSeq(A, prob[, sorted])', 'quantileSeq(A, [prob1, prob2, ...][, sorted])', 'quantileSeq(A, N[, sorted])'],\n  description: 'Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \\n\\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.',\n  examples: ['quantileSeq([3, -1, 5, 7], 0.5)', 'quantileSeq([3, -1, 5, 7], [1/3, 2/3])', 'quantileSeq([3, -1, 5, 7], 2)', 'quantileSeq([-1, 3, 5, 7], 0.5, true)'],\n  seealso: ['mean', 'median', 'min', 'max', 'prod', 'std', 'sum', 'variance']\n};"]},"metadata":{},"sourceType":"module"}