{"ast":null,"code":"import { isInteger } from '../../utils/number';\nimport { product } from '../../utils/product';\nexport function combinationsNumber(n, k) {\n  if (!isInteger(n) || n < 0) {\n    throw new TypeError('Positive integer value expected in function combinations');\n  }\n\n  if (!isInteger(k) || k < 0) {\n    throw new TypeError('Positive integer value expected in function combinations');\n  }\n\n  if (k > n) {\n    throw new TypeError('k must be less than or equal to n');\n  }\n\n  var nMinusk = n - k;\n  var prodrange;\n\n  if (k < nMinusk) {\n    prodrange = product(nMinusk + 1, n);\n    return prodrange / product(1, k);\n  }\n\n  prodrange = product(k + 1, n);\n  return prodrange / product(1, nMinusk);\n}\ncombinationsNumber.signature = 'number, number';","map":{"version":3,"sources":["/home/kaappo/testit/canvas/node_modules/mathjs/es/plain/number/combinations.js"],"names":["isInteger","product","combinationsNumber","n","k","TypeError","nMinusk","prodrange","signature"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAO,SAASC,kBAAT,CAA4BC,CAA5B,EAA+BC,CAA/B,EAAkC;AACvC,MAAI,CAACJ,SAAS,CAACG,CAAD,CAAV,IAAiBA,CAAC,GAAG,CAAzB,EAA4B;AAC1B,UAAM,IAAIE,SAAJ,CAAc,0DAAd,CAAN;AACD;;AAED,MAAI,CAACL,SAAS,CAACI,CAAD,CAAV,IAAiBA,CAAC,GAAG,CAAzB,EAA4B;AAC1B,UAAM,IAAIC,SAAJ,CAAc,0DAAd,CAAN;AACD;;AAED,MAAID,CAAC,GAAGD,CAAR,EAAW;AACT,UAAM,IAAIE,SAAJ,CAAc,mCAAd,CAAN;AACD;;AAED,MAAIC,OAAO,GAAGH,CAAC,GAAGC,CAAlB;AACA,MAAIG,SAAJ;;AAEA,MAAIH,CAAC,GAAGE,OAAR,EAAiB;AACfC,IAAAA,SAAS,GAAGN,OAAO,CAACK,OAAO,GAAG,CAAX,EAAcH,CAAd,CAAnB;AACA,WAAOI,SAAS,GAAGN,OAAO,CAAC,CAAD,EAAIG,CAAJ,CAA1B;AACD;;AAEDG,EAAAA,SAAS,GAAGN,OAAO,CAACG,CAAC,GAAG,CAAL,EAAQD,CAAR,CAAnB;AACA,SAAOI,SAAS,GAAGN,OAAO,CAAC,CAAD,EAAIK,OAAJ,CAA1B;AACD;AACDJ,kBAAkB,CAACM,SAAnB,GAA+B,gBAA/B","sourcesContent":["import { isInteger } from '../../utils/number';\nimport { product } from '../../utils/product';\nexport function combinationsNumber(n, k) {\n  if (!isInteger(n) || n < 0) {\n    throw new TypeError('Positive integer value expected in function combinations');\n  }\n\n  if (!isInteger(k) || k < 0) {\n    throw new TypeError('Positive integer value expected in function combinations');\n  }\n\n  if (k > n) {\n    throw new TypeError('k must be less than or equal to n');\n  }\n\n  var nMinusk = n - k;\n  var prodrange;\n\n  if (k < nMinusk) {\n    prodrange = product(nMinusk + 1, n);\n    return prodrange / product(1, k);\n  }\n\n  prodrange = product(k + 1, n);\n  return prodrange / product(1, nMinusk);\n}\ncombinationsNumber.signature = 'number, number';"]},"metadata":{},"sourceType":"module"}