{"ast":null,"code":"// create a random seed here to prevent an infinite loop from seed-random\n// inside the factory. Reason is that math.random is defined as a getter/setter\n// and seed-random generates a seed from the local entropy by reading every\n// defined object including `math` itself. That means that whilst getting\n// math.random, it tries to get math.random, etc... an infinite loop.\n// See https://github.com/ForbesLindesay/seed-random/issues/6\nimport seedrandom from 'seed-random';\nvar singletonRandom = /* #__PURE__ */seedrandom();\nexport function createRng(randomSeed) {\n  var random; // create a new random generator with given seed\n\n  function setSeed(seed) {\n    random = seed === null ? singletonRandom : seedrandom(String(seed));\n  } // initialize a seeded pseudo random number generator with config's random seed\n\n\n  setSeed(randomSeed); // wrapper function so the rng can be updated via generator\n\n  function rng() {\n    return random();\n  }\n\n  return rng;\n}","map":{"version":3,"sources":["/home/kaappo/testit/canvas/node_modules/mathjs/es/function/probability/util/seededRNG.js"],"names":["seedrandom","singletonRandom","createRng","randomSeed","random","setSeed","seed","String","rng"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,UAAP,MAAuB,aAAvB;AACA,IAAIC,eAAe,GAAG,eAAeD,UAAU,EAA/C;AACA,OAAO,SAASE,SAAT,CAAmBC,UAAnB,EAA+B;AACpC,MAAIC,MAAJ,CADoC,CACxB;;AAEZ,WAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACrBF,IAAAA,MAAM,GAAGE,IAAI,KAAK,IAAT,GAAgBL,eAAhB,GAAkCD,UAAU,CAACO,MAAM,CAACD,IAAD,CAAP,CAArD;AACD,GALmC,CAKlC;;;AAGFD,EAAAA,OAAO,CAACF,UAAD,CAAP,CARoC,CAQf;;AAErB,WAASK,GAAT,GAAe;AACb,WAAOJ,MAAM,EAAb;AACD;;AAED,SAAOI,GAAP;AACD","sourcesContent":["// create a random seed here to prevent an infinite loop from seed-random\n// inside the factory. Reason is that math.random is defined as a getter/setter\n// and seed-random generates a seed from the local entropy by reading every\n// defined object including `math` itself. That means that whilst getting\n// math.random, it tries to get math.random, etc... an infinite loop.\n// See https://github.com/ForbesLindesay/seed-random/issues/6\nimport seedrandom from 'seed-random';\nvar singletonRandom = /* #__PURE__ */seedrandom();\nexport function createRng(randomSeed) {\n  var random; // create a new random generator with given seed\n\n  function setSeed(seed) {\n    random = seed === null ? singletonRandom : seedrandom(String(seed));\n  } // initialize a seeded pseudo random number generator with config's random seed\n\n\n  setSeed(randomSeed); // wrapper function so the rng can be updated via generator\n\n  function rng() {\n    return random();\n  }\n\n  return rng;\n}"]},"metadata":{},"sourceType":"module"}