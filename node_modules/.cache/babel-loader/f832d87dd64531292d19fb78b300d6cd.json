{"ast":null,"code":"var _jsxFileName = \"/home/kaappo/testit/canvas/src/components/wind.js\";\nimport React from 'react';\nimport { mod } from \"mathjs\";\nimport NumberDisplay from \"./numberdisplay.js\";\nimport DrawHelper from './helpers'; // import \"./wind.css\"\n\nclass Wind extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = {};\n    this.state = {\n      closeHaulAngle: 10,\n      windDirection: {\n        true: Math.PI / 2,\n        apparent: Math.PI / 2.1\n      }\n    };\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.canvas_background;\n    const ctx = canvas.getContext(\"2d\");\n    const canvas_update = this.refs.canvas_update;\n    const ctx_update = canvas_update.getContext(\"2d\");\n    this.data = {\n      canvas_background: canvas,\n      ctx_background: ctx,\n      canvas_update: canvas_update,\n      ctx_update: ctx_update,\n      drawHelper: new DrawHelper(canvas, ctx),\n      compassLineMaxLength: canvas.width / 2.1 / 20,\n      origin: [canvas.width / 2, canvas.height / 2],\n      radius: canvas.width / 2.2,\n      image: new Image()\n    };\n    ctx.beginPath();\n    ctx.arc(canvas.width / 2, canvas.height / 2, this.data.radius, 0, 2 * Math.PI);\n    const divisions = [[24, 0.5], [72, 1]];\n\n    for (const division of divisions) {\n      let angleProvider = index => {\n        return 2 * Math.PI / division[0] * index;\n      };\n\n      let numberTextProvider = index => {\n        let baseAngle = angleProvider(index);\n        return baseAngle / Math.PI * 180 <= 180 ? mod(baseAngle / Math.PI * 180, 360) : mod(360 - baseAngle / Math.PI * 180, 360);\n      };\n\n      this.data.drawHelper.drawDivision(this.data.origin, this.radius, division[0], this.data.compassLineMaxLength / division[1], angleProvider, numberTextProvider);\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    const ctx = this.data.ctx_update;\n    const canvas = this.data.canvas_update;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    this.drawCloseHaulMarks();\n    this.drawPointer();\n  } // drawDivision(division, length, drawNumbers) {\n  //     for (let i = 0; i < division; i++) {\n  //         let baseAngle = 2 * Math.PI / division * i;\n  //         // let angleOffset = this.props.heading * Math.PI / 180;\n  //         let angleOffset = 0;\n  //         this.data.drawHelper.drawCompassLine(this.data.origin, baseAngle + angleOffset, this.data.radius, length)\n  //         if (drawNumbers) {\n  //             let angleText = baseAngle / Math.PI * 180 <= 180 ? mod(baseAngle / Math.PI * 180, 360) : mod(360 - baseAngle / Math.PI * 180, 360);\n  //             this.data.drawHelper.drawAngleText(this.data.origin, baseAngle + angleOffset, this.data.radius - length, angleText.toFixed(0), true)\n  //         }\n  //     }\n  // }\n\n\n  drawCloseHaulMarks() {\n    const ctx = this.data.ctx_update;\n    ctx.beginPath();\n    ctx.fillStyle = \"rgba(0, 200, 0, 0.75)\";\n    ctx.arc(this.data.origin[0], this.data.origin[1], this.data.radius, -Math.PI / 2, (90 - this.state.closeHaulAngle) / 180 * -Math.PI, false);\n    ctx.arc(this.data.origin[0], this.data.origin[1], this.data.radius - this.data.compassLineMaxLength, (90 - this.state.closeHaulAngle) / 180 * -Math.PI, -Math.PI / 2, true);\n    ctx.closePath();\n    ctx.fill();\n    ctx.beginPath();\n    ctx.fillStyle = \"rgba(255, 150, 125, 0.75)\";\n    ctx.arc(this.data.origin[0], this.data.origin[1], this.data.radius, -Math.PI - (90 - this.state.closeHaulAngle) / 180 * -Math.PI, -Math.PI / 2, false);\n    ctx.arc(this.data.origin[0], this.data.origin[1], this.data.radius - this.data.compassLineMaxLength, -Math.PI / 2, -Math.PI - (90 - this.state.closeHaulAngle) / 180 * -Math.PI, true);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  drawPointer() {\n    const ctx = this.data.ctx_update;\n    ctx.strokeStyle = \"rgb(255, 0, 0)\";\n    ctx.beginPath();\n    this.data.drawHelper.ctx = this.data.ctx_update;\n    this.data.drawHelper.drawCompassLine(this.data.origin, this.state.windDirection.true + Math.PI, 0, this.data.radius);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.strokeStyle = \"rgb(255, 125, 0)\";\n    ctx.beginPath();\n    this.data.drawHelper.drawCompassLine(this.data.origin, this.state.windDirection.apparent + Math.PI, 0, this.data.radius);\n    this.data.drawHelper.ctx = this.data.ctx_background; // ctx.moveTo(250, 250);\n    // ctx.lineTo(300, 300);\n\n    ctx.closePath(); // ctx.fill();\n\n    ctx.stroke();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        width: this.props.width + \"px\",\n        height: this.props.height + \"px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas_update\",\n      className: \"compassRose\",\n      width: this.props.width,\n      height: this.props.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas_background\",\n      className: \"compassRose\",\n      width: this.props.width,\n      height: this.props.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Wind;","map":{"version":3,"sources":["/home/kaappo/testit/canvas/src/components/wind.js"],"names":["React","mod","NumberDisplay","DrawHelper","Wind","Component","constructor","props","data","state","closeHaulAngle","windDirection","true","Math","PI","apparent","componentDidMount","canvas","refs","canvas_background","ctx","getContext","canvas_update","ctx_update","ctx_background","drawHelper","compassLineMaxLength","width","origin","height","radius","image","Image","beginPath","arc","divisions","division","angleProvider","index","numberTextProvider","baseAngle","drawDivision","closePath","stroke","componentDidUpdate","clearRect","drawCloseHaulMarks","drawPointer","fillStyle","fill","strokeStyle","drawCompassLine","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { mod } from \"mathjs\";\nimport NumberDisplay from \"./numberdisplay.js\"\nimport DrawHelper from './helpers';\n// import \"./wind.css\"\n\n\nclass Wind extends React.Component {\n    constructor (props) {\n        super(props);\n        this.data = {}\n\n        this.state = {\n            closeHaulAngle: 10,\n            windDirection: {\n                true: Math.PI / 2,\n                apparent : Math.PI / 2.1\n            },\n        }\n\n    }\n\n    componentDidMount() {\n        const canvas = this.refs.canvas_background;\n        const ctx = canvas.getContext(\"2d\");\n\n        const canvas_update = this.refs.canvas_update;\n        const ctx_update = canvas_update.getContext(\"2d\");\n\n        this.data = {\n            canvas_background: canvas,\n            ctx_background: ctx,\n\n            canvas_update: canvas_update,\n            ctx_update: ctx_update,\n\n            drawHelper: new DrawHelper(canvas, ctx),\n            \n            compassLineMaxLength: canvas.width / 2.1 / 20,\n            origin: [canvas.width / 2, canvas.height / 2],\n            radius: canvas.width / 2.2,\n\n            image: new Image()\n        };\n        \n\n        ctx.beginPath();\n        ctx.arc(canvas.width / 2, canvas.height / 2, this.data.radius, 0, 2 * Math.PI);\n\n        \n\n        const divisions = [[24, 0.5], [72, 1]];\n        for (const division of divisions) {\n            let angleProvider = (index) => {\n                return 2 * Math.PI / division[0] * index;\n            }\n\n            let numberTextProvider = (index) => {\n                let baseAngle = angleProvider(index);\n                return baseAngle / Math.PI * 180 <= 180 ? mod(baseAngle / Math.PI * 180, 360) : mod(360 - baseAngle / Math.PI * 180, 360);\n            }\n\n            this.data.drawHelper.drawDivision(this.data.origin, this.radius, division[0], this.data.compassLineMaxLength / division[1], angleProvider, numberTextProvider);\n        }\n            \n        \n        ctx.closePath();\n        ctx.stroke();\n\n        this.componentDidUpdate();\n    }\n\n\n    componentDidUpdate() {\n        const ctx = this.data.ctx_update;\n        const canvas = this.data.canvas_update;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        this.drawCloseHaulMarks();\n        this.drawPointer();\n    }\n\n    // drawDivision(division, length, drawNumbers) {\n    //     for (let i = 0; i < division; i++) {\n    //         let baseAngle = 2 * Math.PI / division * i;\n    //         // let angleOffset = this.props.heading * Math.PI / 180;\n    //         let angleOffset = 0;\n\n    //         this.data.drawHelper.drawCompassLine(this.data.origin, baseAngle + angleOffset, this.data.radius, length)\n    //         if (drawNumbers) {\n    //             let angleText = baseAngle / Math.PI * 180 <= 180 ? mod(baseAngle / Math.PI * 180, 360) : mod(360 - baseAngle / Math.PI * 180, 360);\n    //             this.data.drawHelper.drawAngleText(this.data.origin, baseAngle + angleOffset, this.data.radius - length, angleText.toFixed(0), true)\n    //         }\n    //     }\n    // }\n\n    drawCloseHaulMarks () {\n        const ctx = this.data.ctx_update;\n        ctx.beginPath();\n        ctx.fillStyle = \"rgba(0, 200, 0, 0.75)\"\n        ctx.arc(this.data.origin[0], this.data.origin[1], this.data.radius, -Math.PI / 2, (90 - this.state.closeHaulAngle) / 180 * -Math.PI, false);\n        ctx.arc(this.data.origin[0], this.data.origin[1], this.data.radius - this.data.compassLineMaxLength, (90 - this.state.closeHaulAngle) / 180 * -Math.PI, -Math.PI / 2, true);\n        ctx.closePath();\n        ctx.fill();\n        \n        ctx.beginPath();\n        ctx.fillStyle = \"rgba(255, 150, 125, 0.75)\"\n        ctx.arc(this.data.origin[0], this.data.origin[1], this.data.radius, -Math.PI - (90 - this.state.closeHaulAngle) / 180 * -Math.PI, -Math.PI / 2, false);\n        ctx.arc(this.data.origin[0], this.data.origin[1], this.data.radius - this.data.compassLineMaxLength, -Math.PI / 2, -Math.PI - (90 - this.state.closeHaulAngle) / 180 * -Math.PI, true);\n        ctx.closePath();\n        ctx.fill();\n\n\n    }\n\n    drawPointer () {\n        const ctx = this.data.ctx_update;\n        ctx.strokeStyle = \"rgb(255, 0, 0)\";\n        ctx.beginPath();\n        this.data.drawHelper.ctx = this.data.ctx_update;\n        this.data.drawHelper.drawCompassLine(this.data.origin, this.state.windDirection.true + Math.PI, 0, this.data.radius)\n        ctx.closePath();\n        ctx.stroke()\n        ctx.strokeStyle = \"rgb(255, 125, 0)\";\n        ctx.beginPath()\n        \n\n        this.data.drawHelper.drawCompassLine(this.data.origin, this.state.windDirection.apparent + Math.PI, 0, this.data.radius)\n        this.data.drawHelper.ctx = this.data.ctx_background;\n        // ctx.moveTo(250, 250);\n        // ctx.lineTo(300, 300);\n        ctx.closePath();\n        // ctx.fill();\n        ctx.stroke();\n    }\n\n    render() {\n        return <div className=\"container\" style={{ width: this.props.width + \"px\", height: this.props.height + \"px\" }}>\n            {/* <NumberDisplay\n                className=\"number\"\n                value={this.props.heading}\n                suffix=\"°\"\n                unit=\"T\"\n                width={this.props.width}\n                height={this.props.height / 3 * 2}\n                upperBound={360}\n                decimalPlaces={1}\n                fontSize={this.props.width / 4}\n            /> */}\n            <canvas ref=\"canvas_update\" className=\"compassRose\" width={this.props.width} height={this.props.height} />\n            <canvas ref=\"canvas_background\" className=\"compassRose\" width={this.props.width} height={this.props.height} />\n        </div>\n    }\n}\n\nexport default Wind"]},"metadata":{},"sourceType":"module"}