{"ast":null,"code":"var _jsxFileName = \"/home/kaappo/git/kments/src/components/compass.js\";\nimport React from 'react';\nimport { mod } from \"mathjs\";\nimport \"./compass.css\";\nimport NumberDisplay from \"./numberdisplay.js\";\nimport DrawHelper from \"./helpers.js\";\nimport Interpolator from './misc/interpolate';\n\nclass Compass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      heading: 0,\n      interpolated: 0\n    };\n\n    this.onMessage = message => {\n      const extracted = message.values[0].value / Math.PI * 180;\n\n      if (message.source.label === \"nmeaFromFile\") {\n        this.setState({\n          heading: extracted\n        });\n        this.data.interpolator.addDataPoint(new Date().getTime(), extracted);\n      }\n    };\n\n    this.props.subscribe([\"navigation.courseOverGroundTrue\"], this.onMessage);\n  }\n\n  getCircleRadius(canvasWidth, offsetY) {\n    return Math.sqrt((canvasWidth / 2) ** 2 + offsetY ** 2) / 1.05;\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.canvas;\n    const ctx = canvas.getContext(\"2d\");\n    const arcCenterOffsetY = canvas.width / 5;\n    const radius = this.getCircleRadius(canvas.width, arcCenterOffsetY);\n    const compassLineMaxLength = canvas.width / 2 / 10;\n    const origin = [canvas.width / 2, canvas.height + arcCenterOffsetY];\n    const drawHelper = new DrawHelper(canvas, ctx);\n    this.data = {\n      canvas_background: canvas,\n      ctx_backgroud: ctx,\n      compassLineMaxLength: compassLineMaxLength,\n      origin: origin,\n      radius: radius,\n      arcCenterOffsetY: arcCenterOffsetY,\n      drawHelper: drawHelper,\n      interpolator: new Interpolator()\n    };\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    const ctx = this.data.ctx_backgroud;\n    const canvas = this.data.canvas_background;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.beginPath();\n    ctx.arc(canvas.width / 2, canvas.height + this.data.arcCenterOffsetY, this.data.radius, 0, 2 * Math.PI);\n    ctx.fillRect(this.props.width / 2 - 1, canvas.height - this.data.radius + this.data.arcCenterOffsetY - 10, 2, 10);\n    ctx.font = canvas.width / 20 + \"px Courier\";\n    let divisions = [[24, 1], [72, 2], [144, 3]];\n\n    for (let index = 0; index < divisions.length; index++) {\n      let division = divisions[index];\n\n      let angleProvider = index => {\n        let baseAngle = 2 * Math.PI / division[0] * index;\n        let angleOffset = this.state.heading * Math.PI / 180;\n        return baseAngle - angleOffset;\n      };\n\n      let numberTextProvider = index => {\n        if (division[0] === 24) {\n          let baseAngle = angleProvider(index) + this.state.heading * Math.PI / 180;\n          return mod(baseAngle / Math.PI * 180, 360).toFixed(0);\n        } else {\n          return \"\";\n        }\n      };\n\n      this.data.drawHelper.drawDivision(this.data.origin, this.data.radius, division[0], this.data.compassLineMaxLength / division[1], angleProvider, numberTextProvider);\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        width: this.props.width + \"px\",\n        height: this.props.height + \"px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(NumberDisplay, {\n      className: \"number\",\n      value: this.state.heading,\n      suffix: \"\\xB0\",\n      unit: \"T\",\n      width: this.props.width,\n      height: this.props.height / 3 * 2,\n      upperBound: 360,\n      decimalPlaces: 1,\n      fontSize: this.props.width / 4,\n      legend: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      className: \"compassRose\",\n      width: this.props.width,\n      height: this.props.height / 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Compass;","map":{"version":3,"sources":["/home/kaappo/git/kments/src/components/compass.js"],"names":["React","mod","NumberDisplay","DrawHelper","Interpolator","Compass","Component","constructor","props","state","heading","interpolated","onMessage","message","extracted","values","value","Math","PI","source","label","setState","data","interpolator","addDataPoint","Date","getTime","subscribe","getCircleRadius","canvasWidth","offsetY","sqrt","componentDidMount","canvas","refs","ctx","getContext","arcCenterOffsetY","width","radius","compassLineMaxLength","origin","height","drawHelper","canvas_background","ctx_backgroud","componentDidUpdate","clearRect","beginPath","arc","fillRect","font","divisions","index","length","division","angleProvider","baseAngle","angleOffset","numberTextProvider","toFixed","drawDivision","closePath","stroke","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { mod } from \"mathjs\";\nimport \"./compass.css\"\nimport NumberDisplay from \"./numberdisplay.js\"\n\nimport DrawHelper from \"./helpers.js\"\nimport Interpolator from './misc/interpolate';\n\nclass Compass extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            heading: 0,\n            interpolated: 0\n        }\n\n        this.onMessage = (message) => {\n            const extracted = message.values[0].value / Math.PI * 180;\n            if (message.source.label === \"nmeaFromFile\") {\n                this.setState({heading: extracted});\n\n                this.data.interpolator.addDataPoint(new Date().getTime(), extracted);\n            }\n        }\n        this.props.subscribe([\"navigation.courseOverGroundTrue\"], this.onMessage)\n    }\n\n    getCircleRadius (canvasWidth, offsetY) {\n        return Math.sqrt((canvasWidth / 2) ** 2 + offsetY ** 2) / 1.05\n    }\n\n    componentDidMount() {\n        const canvas = this.refs.canvas;\n        const ctx = canvas.getContext(\"2d\");\n        \n        const arcCenterOffsetY = canvas.width / 5;\n        const radius = this.getCircleRadius(canvas.width, arcCenterOffsetY);\n        \n        const compassLineMaxLength = canvas.width / 2 / 10\n        const origin = [canvas.width / 2, canvas.height + arcCenterOffsetY];\n\n        const drawHelper = new DrawHelper(canvas, ctx);\n\n        this.data = {\n            canvas_background: canvas,\n            ctx_backgroud: ctx,\n\n            compassLineMaxLength: compassLineMaxLength,\n            origin: origin,\n            radius: radius,\n            arcCenterOffsetY: arcCenterOffsetY,\n\n            drawHelper: drawHelper,\n            interpolator: new Interpolator(),\n        }\n\n        this.componentDidUpdate();        \n    }\n\n\n    componentDidUpdate () {\n        const ctx = this.data.ctx_backgroud;\n        const canvas = this.data.canvas_background;\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        ctx.beginPath();\n        ctx.arc(canvas.width / 2, canvas.height + this.data.arcCenterOffsetY, this.data.radius, 0, 2 * Math.PI);\n        ctx.fillRect(this.props.width / 2 - 1, canvas.height - this.data.radius + this.data.arcCenterOffsetY - 10, 2, 10)\n        ctx.font = canvas.width / 20 + \"px Courier\";\n\n        \n        let divisions = [[24, 1], [72, 2], [144, 3]];\n        for (let index = 0; index < divisions.length; index++) {\n            let division = divisions[index]\n            \n            let angleProvider = (index) => {\n                let baseAngle = 2 * Math.PI / division[0] * index;\n                let angleOffset = this.state.heading * Math.PI / 180;\n                return baseAngle - angleOffset;\n            }\n\n            let numberTextProvider = (index) => {\n                if (division[0] === 24) {\n                    let baseAngle = angleProvider(index) + this.state.heading * Math.PI / 180\n                    return mod(baseAngle / Math.PI * 180, 360).toFixed(0);\n                } else {\n                    return \"\";\n                }\n            }\n\n            this.data.drawHelper.drawDivision(this.data.origin, this.data.radius, division[0], this.data.compassLineMaxLength / division[1], angleProvider, numberTextProvider)\n        }\n\n        ctx.closePath();\n        ctx.stroke();\n    }\n\n    render () {\n        return <div className=\"container\" style={{width: this.props.width + \"px\", height: this.props.height + \"px\"}}>\n            <NumberDisplay \n                className=\"number\" \n                value={this.state.heading} \n                suffix=\"°\" \n                unit=\"T\" \n                width={this.props.width} \n                height={this.props.height / 3 * 2} \n                upperBound={360} \n                decimalPlaces={1} \n                fontSize={this.props.width / 4}\n                legend=\"\" \n            />\n            <canvas ref=\"canvas\" className=\"compassRose\" width={this.props.width} height={this.props.height / 2} />\n        </div>\n    }\n}\n\nexport default Compass"]},"metadata":{},"sourceType":"module"}