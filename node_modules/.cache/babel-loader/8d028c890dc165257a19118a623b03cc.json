{"ast":null,"code":"var _jsxFileName = \"/home/kaappo/testit/canvas/src/components/numberdisplay.js\";\nimport React from 'react';\nimport \"/home/kaappo/testit/canvas/src/components/numberdisplay.css\";\n\nclass NumberDisplay extends React.Component {\n  constructor(props) {\n    super(props); // this.props = {\n    //     value: props.value,\n    //     suffix: props.suffix,\n    //     unit: props.unit,\n    //     upperBound: props.upperBound,\n    //     decimalPlaces: props.decimalPlaces,\n    //     width: props.width,\n    //     height: props.height,\n    //     fontSize: props.fontSize\n    // }\n\n    console.log(props);\n  }\n\n  componentDidMount() {\n    this.canvas = this.refs.canvas;\n    const ctx = this.canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    ctx.font = this.props.fontsize + \"px Courier\";\n    let measure = this.props.upperBound.toFixed(this.props.decimalPlaces) + this.props.suffix + \" \" + this.props.unit;\n    let text1 = this.props.value.toFixed(0);\n    let text2 = \".\" + ((this.props.value - Math.trunc(this.props.value)) * 10 ** this.props.decimalPlaces).toFixed(0) + this.props.suffix + \" \" + this.props.unit; // let size = ctx.measureText(measure);\n    // console.log(size)\n    // ctx.fillText(text, (this.canvas.width - size.width) / 2, (this.canvas.height + size.actualBoundingBoxAscent) / 2)\n\n    let width = ctx.measureText(text1).width;\n    ctx.fillText(text1, this.canvas.width / 2 - width, this.canvas.height / 2);\n    ctx.font = \"40px Courier\";\n    ctx.fillText(text2, this.canvas.width / 2, this.canvas.height / 2);\n  }\n\n  componentDidUpdate() {\n    this.componentDidMount();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"displayContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      width: this.props.width,\n      height: this.props.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default NumberDisplay;","map":{"version":3,"sources":["/home/kaappo/testit/canvas/src/components/numberdisplay.js"],"names":["React","NumberDisplay","Component","constructor","props","console","log","componentDidMount","canvas","refs","ctx","getContext","clearRect","width","height","font","fontsize","measure","upperBound","toFixed","decimalPlaces","suffix","unit","text1","value","text2","Math","trunc","measureText","fillText","componentDidUpdate","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,6DAAP;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;AAEDG,EAAAA,iBAAiB,GAAI;AACjB,SAAKC,MAAL,GAAc,KAAKC,IAAL,CAAUD,MAAxB;AACA,UAAME,GAAG,GAAG,KAAKF,MAAL,CAAYG,UAAZ,CAAuB,IAAvB,CAAZ;AACAD,IAAAA,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,KAAKJ,MAAL,CAAYK,KAAhC,EAAuC,KAAKL,MAAL,CAAYM,MAAnD;AAEAJ,IAAAA,GAAG,CAACK,IAAJ,GAAW,KAAKX,KAAL,CAAWY,QAAX,GAAsB,YAAjC;AAEA,QAAIC,OAAO,GAAG,KAAKb,KAAL,CAAWc,UAAX,CAAsBC,OAAtB,CAA8B,KAAKf,KAAL,CAAWgB,aAAzC,IAA0D,KAAKhB,KAAL,CAAWiB,MAArE,GAA8E,GAA9E,GAAoF,KAAKjB,KAAL,CAAWkB,IAA7G;AACA,QAAIC,KAAK,GAAG,KAAKnB,KAAL,CAAWoB,KAAX,CAAiBL,OAAjB,CAAyB,CAAzB,CAAZ;AACA,QAAIM,KAAK,GAAG,MAAM,CAAC,CAAC,KAAKrB,KAAL,CAAWoB,KAAX,GAAmBE,IAAI,CAACC,KAAL,CAAW,KAAKvB,KAAL,CAAWoB,KAAtB,CAApB,IAAoD,MAAM,KAAKpB,KAAL,CAAWgB,aAAtE,EAAqFD,OAArF,CAA6F,CAA7F,CAAN,GAAwG,KAAKf,KAAL,CAAWiB,MAAnH,GAA4H,GAA5H,GAAkI,KAAKjB,KAAL,CAAWkB,IAAzJ,CATiB,CAWjB;AACA;AACA;;AACA,QAAIT,KAAK,GAAGH,GAAG,CAACkB,WAAJ,CAAgBL,KAAhB,EAAuBV,KAAnC;AACAH,IAAAA,GAAG,CAACmB,QAAJ,CAAaN,KAAb,EAAoB,KAAKf,MAAL,CAAYK,KAAZ,GAAoB,CAApB,GAAwBA,KAA5C,EAAmD,KAAKL,MAAL,CAAYM,MAAZ,GAAqB,CAAxE;AACAJ,IAAAA,GAAG,CAACK,IAAJ,GAAW,cAAX;AACAL,IAAAA,GAAG,CAACmB,QAAJ,CAAaJ,KAAb,EAAoB,KAAKjB,MAAL,CAAYK,KAAZ,GAAoB,CAAxC,EAA2C,KAAKL,MAAL,CAAYM,MAAZ,GAAqB,CAAhE;AAEH;;AAEDgB,EAAAA,kBAAkB,GAAI;AAClB,SAAKvB,iBAAL;AACH;;AAEDwB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,GAAG,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWS,KAAvC;AAA8C,MAAA,MAAM,EAAE,KAAKT,KAAL,CAAWU,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAjDuC;;AAoD5C,eAAeb,aAAf","sourcesContent":["import React from 'react';\n\nimport \"/home/kaappo/testit/canvas/src/components/numberdisplay.css\";\n\nclass NumberDisplay extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // this.props = {\n        //     value: props.value,\n        //     suffix: props.suffix,\n        //     unit: props.unit,\n        //     upperBound: props.upperBound,\n        //     decimalPlaces: props.decimalPlaces,\n\n        //     width: props.width,\n        //     height: props.height,\n        //     fontSize: props.fontSize\n        // }\n        console.log(props)\n    }\n\n    componentDidMount () {\n        this.canvas = this.refs.canvas;\n        const ctx = this.canvas.getContext(\"2d\");\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\n        ctx.font = this.props.fontsize + \"px Courier\"\n\n        let measure = this.props.upperBound.toFixed(this.props.decimalPlaces) + this.props.suffix + \" \" + this.props.unit\n        let text1 = this.props.value.toFixed(0);\n        let text2 = \".\" + ((this.props.value - Math.trunc(this.props.value)) * 10 ** this.props.decimalPlaces).toFixed(0) + this.props.suffix + \" \" + this.props.unit\n\n        // let size = ctx.measureText(measure);\n        // console.log(size)\n        // ctx.fillText(text, (this.canvas.width - size.width) / 2, (this.canvas.height + size.actualBoundingBoxAscent) / 2)\n        let width = ctx.measureText(text1).width\n        ctx.fillText(text1, this.canvas.width / 2 - width, this.canvas.height / 2)\n        ctx.font = \"40px Courier\"\n        ctx.fillText(text2, this.canvas.width / 2, this.canvas.height / 2)\n\n    }\n\n    componentDidUpdate () {\n        this.componentDidMount()\n    }\n\n    render() {\n        return (\n            <div className=\"displayContainer\">\n                <canvas ref=\"canvas\" width={this.props.width} height={this.props.height}/>\n            </div>\n        );\n    }\n}\n\nexport default NumberDisplay;\n"]},"metadata":{},"sourceType":"module"}