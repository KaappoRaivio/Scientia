{"ast":null,"code":"var _jsxFileName = \"/home/kaappo/testit/canvas/src/components/wind.js\";\nimport React from 'react';\nimport { mod } from \"mathjs\";\nimport NumberDisplay from \"/home/kaappo/testit/canvas/src/components/numberdisplay.js\";\n\nclass Wind extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.canvas = this.refs.canvas;\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    const ctx = this.ctx; // ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    // ctx.beginPath();\n    // ctx.arc(this.props.width / 2, this.canvas.height + this.arcCenterOffsetY, this.radius, 0, 2 * Math.PI);\n    // ctx.fillRect(this.props.width / 2 - 1, this.canvas.height - this.radius + this.arcCenterOffsetY - 10, 2, 10)\n    // let divisions = [12, 36, 72];\n    // ctx.font = \"20px Courier\";\n    // for (let index = 0; index < divisions.length; index++) {\n    //     let division = divisions[index]\n    //     this.drawDivision(division, ((divisions.length - index + 1) / divisions.length) ** 2 * 15, index === 0);\n    // }\n    // ctx.closePath();\n    // ctx.stroke();\n  }\n\n  drawDivision(division, length, drawNumbers) {\n    for (let i = 0; i < division; i++) {\n      let baseAngle = 2 * Math.PI / division * i;\n      let angleOffset = this.props.heading * Math.PI / 180;\n      this.drawHelper.drawCompassLine(baseAngle + angleOffset, length);\n\n      if (drawNumbers) {\n        let angleText = mod(180 - baseAngle / Math.PI * 180, 360);\n        this.drawHelper.drawAngleText(baseAngle + angleOffset, angleText.toFixed(0));\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        width: this.props.width + \"px\",\n        height: this.props.height + \"px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(NumberDisplay, {\n      className: \"number\",\n      value: this.props.heading,\n      suffix: \"\\xB0\",\n      unit: \"T\",\n      width: this.props.width,\n      height: this.props.height / 3 * 2,\n      upperBound: 360,\n      decimalPlaces: 1,\n      fontSize: this.props.width / 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      className: \"compassRose\",\n      width: this.props.width,\n      height: this.props.height / 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Wind;","map":{"version":3,"sources":["/home/kaappo/testit/canvas/src/components/wind.js"],"names":["React","mod","NumberDisplay","Wind","Component","constructor","props","componentDidMount","canvas","refs","ctx","getContext","componentDidUpdate","drawDivision","division","length","drawNumbers","i","baseAngle","Math","PI","angleOffset","heading","drawHelper","drawCompassLine","angleText","drawAngleText","toFixed","render","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,GAAT,QAAoB,QAApB;AACA,OAAOC,aAAP,MAA0B,4DAA1B;;AAGA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,MAAL,GAAc,KAAKC,IAAL,CAAUD,MAAxB;AACA,SAAKE,GAAL,GAAW,KAAKF,MAAL,CAAYG,UAAZ,CAAuB,IAAvB,CAAX;AAEA,SAAKC,kBAAL;AACH;;AAGDA,EAAAA,kBAAkB,GAAG;AACjB,UAAMF,GAAG,GAAG,KAAKA,GAAjB,CADiB,CAGjB;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACH;;AAEDG,EAAAA,YAAY,CAACC,QAAD,EAAWC,MAAX,EAAmBC,WAAnB,EAAgC;AACxC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAApB,EAA8BG,CAAC,EAA/B,EAAmC;AAC/B,UAAIC,SAAS,GAAG,IAAIC,IAAI,CAACC,EAAT,GAAcN,QAAd,GAAyBG,CAAzC;AACA,UAAII,WAAW,GAAG,KAAKf,KAAL,CAAWgB,OAAX,GAAqBH,IAAI,CAACC,EAA1B,GAA+B,GAAjD;AAGA,WAAKG,UAAL,CAAgBC,eAAhB,CAAgCN,SAAS,GAAGG,WAA5C,EAAyDN,MAAzD;;AACA,UAAIC,WAAJ,EAAiB;AACb,YAAIS,SAAS,GAAGxB,GAAG,CAAC,MAAMiB,SAAS,GAAGC,IAAI,CAACC,EAAjB,GAAsB,GAA7B,EAAkC,GAAlC,CAAnB;AACA,aAAKG,UAAL,CAAgBG,aAAhB,CAA8BR,SAAS,GAAGG,WAA1C,EAAuDI,SAAS,CAACE,OAAV,CAAkB,CAAlB,CAAvD;AACH;AACJ;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWuB,KAAX,GAAmB,IAA5B;AAAkCC,QAAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWwB,MAAX,GAAoB;AAA9D,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH,oBAAC,aAAD;AACI,MAAA,SAAS,EAAC,QADd;AAEI,MAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWgB,OAFtB;AAGI,MAAA,MAAM,EAAC,MAHX;AAII,MAAA,IAAI,EAAC,GAJT;AAKI,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWuB,KALtB;AAMI,MAAA,MAAM,EAAE,KAAKvB,KAAL,CAAWwB,MAAX,GAAoB,CAApB,GAAwB,CANpC;AAOI,MAAA,UAAU,EAAE,GAPhB;AAQI,MAAA,aAAa,EAAE,CARnB;AASI,MAAA,QAAQ,EAAE,KAAKxB,KAAL,CAAWuB,KAAX,GAAmB,CATjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,eAYH;AAAQ,MAAA,GAAG,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,aAA/B;AAA6C,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWuB,KAA/D;AAAsE,MAAA,MAAM,EAAE,KAAKvB,KAAL,CAAWwB,MAAX,GAAoB,CAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZG,CAAP;AAcH;;AA9D8B;;AAiEnC,eAAe3B,IAAf","sourcesContent":["import React from 'react';\n\nimport { mod } from \"mathjs\";\nimport NumberDisplay from \"/home/kaappo/testit/canvas/src/components/numberdisplay.js\"\n\n\nclass Wind extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.canvas = this.refs.canvas;\n        this.ctx = this.canvas.getContext(\"2d\");\n\n        this.componentDidUpdate();\n    }\n\n\n    componentDidUpdate() {\n        const ctx = this.ctx;\n\n        // ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        // ctx.beginPath();\n        // ctx.arc(this.props.width / 2, this.canvas.height + this.arcCenterOffsetY, this.radius, 0, 2 * Math.PI);\n        // ctx.fillRect(this.props.width / 2 - 1, this.canvas.height - this.radius + this.arcCenterOffsetY - 10, 2, 10)\n\n        // let divisions = [12, 36, 72];\n        // ctx.font = \"20px Courier\";\n        // for (let index = 0; index < divisions.length; index++) {\n        //     let division = divisions[index]\n        //     this.drawDivision(division, ((divisions.length - index + 1) / divisions.length) ** 2 * 15, index === 0);\n        // }\n\n        // ctx.closePath();\n        // ctx.stroke();\n    }\n\n    drawDivision(division, length, drawNumbers) {\n        for (let i = 0; i < division; i++) {\n            let baseAngle = 2 * Math.PI / division * i;\n            let angleOffset = this.props.heading * Math.PI / 180;\n\n\n            this.drawHelper.drawCompassLine(baseAngle + angleOffset, length)\n            if (drawNumbers) {\n                let angleText = mod(180 - baseAngle / Math.PI * 180, 360);\n                this.drawHelper.drawAngleText(baseAngle + angleOffset, angleText.toFixed(0))\n            }\n        }\n    }\n\n    render() {\n        return <div className=\"container\" style={{ width: this.props.width + \"px\", height: this.props.height + \"px\" }}>\n            <NumberDisplay\n                className=\"number\"\n                value={this.props.heading}\n                suffix=\"Â°\"\n                unit=\"T\"\n                width={this.props.width}\n                height={this.props.height / 3 * 2}\n                upperBound={360}\n                decimalPlaces={1}\n                fontSize={this.props.width / 4}\n            />\n            <canvas ref=\"canvas\" className=\"compassRose\" width={this.props.width} height={this.props.height / 3} />\n        </div>\n    }\n}\n\nexport default Wind"]},"metadata":{},"sourceType":"module"}