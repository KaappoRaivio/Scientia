{"ast":null,"code":"var _jsxFileName = \"/home/kaappo/testit/canvas/src/components/wind.js\";\nimport React from 'react';\nimport { mod } from \"mathjs\";\nimport NumberDisplay from \"/home/kaappo/testit/canvas/src/components/numberdisplay.js\";\nimport DrawHelper from './helpers';\n\nclass Wind extends React.Component {\n  // constructor (props) {\n  //     super(props);\n  // }\n  componentDidMount() {\n    const canvas = this.refs.canvas;\n    this.state = {\n      compassLineMaxLength: 10,\n      canvas: canvas,\n      ctx: canvas.getContext(\"2d\"),\n      drawHelper: new DrawHelper(this.canvas, this.ctx),\n      origin: [canvas.width / 2, canvas.height / 2],\n      radius: canvas.width / 2.1\n    };\n    console.log(this.state); // const canvas = this.state.canvas;\n\n    const ctx = this.state.ctx;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.beginPath();\n    ctx.arc(canvas.width / 2, canvas.height / 2, this.state.radius, 0, 2 * Math.PI);\n    const divisions = [[24, 10], [72, 5]];\n\n    for (const division of divisions) {\n      this.drawDivision(division[0], division[1], division[0] === 24);\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    this.drawCloseHaulMarks();\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {// const ctx = this.ctx;\n    // let divisions = [12, 36, 72];\n    // ctx.font = \"20px Courier\";\n    // for (let index = 0; index < divisions.length; index++) {\n    //     let division = divisions[index]\n    //     this.drawDivision(division, ((divisions.length - index + 1) / divisions.length) ** 2 * 15, index === 0);\n    // }\n  }\n\n  drawDivision(division, length, drawNumbers) {\n    for (let i = 0; i < division; i++) {\n      let baseAngle = 2 * Math.PI / division * i; // let angleOffset = this.props.heading * Math.PI / 180;\n\n      let angleOffset = 0;\n      console.log(this.origin, baseAngle + angleOffset, this.radius, length);\n      this.state.drawHelper.drawCompassLine(this.origin, baseAngle + angleOffset, this.radius, length);\n\n      if (drawNumbers) {\n        let angleText = baseAngle / Math.PI * 180 <= 180 ? mod(baseAngle / Math.PI * 180, 360) : mod(360 - baseAngle / Math.PI * 180, 360);\n        this.drawHelper.drawAngleText(this.origin, baseAngle + angleOffset, this.radius - length - 10, angleText.toFixed(0), false);\n      }\n    }\n  }\n\n  drawCloseHaulMarks() {\n    const ctx = this.ctx;\n    ctx.beginPath();\n    ctx.fillStyle = \"rgba(0, 200, 0, 0.75)\";\n    ctx.arc(this.canvas.width / 2, this.canvas.height / 2, this.radius, -Math.PI / 2, -Math.PI / 4, false);\n    ctx.arc(this.canvas.width / 2, this.canvas.height / 2, this.radius - 10, -Math.PI / 4, -Math.PI / 2, true);\n    ctx.closePath();\n    ctx.fill();\n    ctx.beginPath();\n    ctx.fillStyle = \"rgba(255, 100, 100, 0.75)\";\n    ctx.arc(this.canvas.width / 2, this.canvas.height / 2, this.radius, -Math.PI / 4 * 3, -Math.PI / 2, false);\n    ctx.arc(this.canvas.width / 2, this.canvas.height / 2, this.radius - 10, -Math.PI / 2, -Math.PI / 4 * 3, true);\n    ctx.closePath();\n    ctx.fill();\n  } // drawDivision(division, length, drawNumbers) {\n  //     for (let i = 0; i < division; i++) {\n  //         let baseAngle = 2 * Math.PI / division * i;\n  //         let angleOffset = -this.props.heading * Math.PI / 180;\n  //         this.drawHelper.drawCompassLine(this.origin, baseAngle + angleOffset, this.radius, length)\n  //         if (drawNumbers) {\n  //             let angleText = mod(baseAngle / Math.PI * 180, 360);\n  //             this.drawHelper.drawAngleText(this.origin, baseAngle + angleOffset, this.radius - length, angleText.toFixed(0))\n  //         }\n  //     }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        width: this.props.width + \"px\",\n        height: this.props.height + \"px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      className: \"compassRose\",\n      width: this.props.width,\n      height: this.props.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Wind;","map":{"version":3,"sources":["/home/kaappo/testit/canvas/src/components/wind.js"],"names":["React","mod","NumberDisplay","DrawHelper","Wind","Component","componentDidMount","canvas","refs","state","compassLineMaxLength","ctx","getContext","drawHelper","origin","width","height","radius","console","log","clearRect","beginPath","arc","Math","PI","divisions","division","drawDivision","closePath","stroke","drawCloseHaulMarks","componentDidUpdate","length","drawNumbers","i","baseAngle","angleOffset","drawCompassLine","angleText","drawAngleText","toFixed","fillStyle","fill","render","props"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { mod } from \"mathjs\";\nimport NumberDisplay from \"/home/kaappo/testit/canvas/src/components/numberdisplay.js\"\nimport DrawHelper from './helpers';\n\n\nclass Wind extends React.Component {\n    // constructor (props) {\n    //     super(props);\n        \n    // }\n\n    componentDidMount() {\n        const canvas = this.refs.canvas;\n\n        this.state = {\n            compassLineMaxLength: 10,\n            canvas: canvas,\n            ctx: canvas.getContext(\"2d\"),\n            drawHelper: new DrawHelper(this.canvas, this.ctx),\n\n            origin: [canvas.width / 2, canvas.height / 2],\n            radius: canvas.width / 2.1,\n        };\n\n        console.log(this.state);\n\n        // const canvas = this.state.canvas;\n        const ctx = this.state.ctx;\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.beginPath();\n        ctx.arc(canvas.width / 2, canvas.height / 2, this.state.radius, 0, 2 * Math.PI);\n\n        const divisions = [[24, 10], [72, 5]];\n        for (const division of divisions) {\n            this.drawDivision(division[0], division[1], division[0] === 24);\n        }\n            \n        \n        ctx.closePath();\n        ctx.stroke();\n        \n        this.drawCloseHaulMarks();\n\n        this.componentDidUpdate();\n    }\n\n\n    componentDidUpdate() {\n        // const ctx = this.ctx;\n\n\n        \n\n        // let divisions = [12, 36, 72];\n        // ctx.font = \"20px Courier\";\n        // for (let index = 0; index < divisions.length; index++) {\n        //     let division = divisions[index]\n        //     this.drawDivision(division, ((divisions.length - index + 1) / divisions.length) ** 2 * 15, index === 0);\n        // }\n    }\n\n    drawDivision(division, length, drawNumbers) {\n        for (let i = 0; i < division; i++) {\n            let baseAngle = 2 * Math.PI / division * i;\n            // let angleOffset = this.props.heading * Math.PI / 180;\n            let angleOffset = 0;\n\n            console.log(this.origin, baseAngle + angleOffset, this.radius, length)\n            this.state.drawHelper.drawCompassLine(this.origin, baseAngle + angleOffset, this.radius, length)\n            if (drawNumbers) {\n                let angleText = baseAngle / Math.PI * 180 <= 180 ? mod(baseAngle / Math.PI * 180, 360) : mod(360 - baseAngle / Math.PI * 180, 360);\n                this.drawHelper.drawAngleText(this.origin, baseAngle + angleOffset, this.radius - length - 10, angleText.toFixed(0), false)\n            }\n        }\n    }\n\n    drawCloseHaulMarks () {\n        const ctx = this.ctx;\n        ctx.beginPath();\n        ctx.fillStyle = \"rgba(0, 200, 0, 0.75)\"\n        ctx.arc(this.canvas.width / 2, this.canvas.height / 2, this.radius, -Math.PI / 2, -Math.PI / 4, false);\n        ctx.arc(this.canvas.width / 2, this.canvas.height / 2, this.radius - 10, -Math.PI / 4, -Math.PI / 2, true);\n        ctx.closePath();\n        ctx.fill();\n        \n        ctx.beginPath();\n        ctx.fillStyle = \"rgba(255, 100, 100, 0.75)\"\n        ctx.arc(this.canvas.width / 2, this.canvas.height / 2, this.radius, -Math.PI / 4 * 3, -Math.PI / 2, false);\n        ctx.arc(this.canvas.width / 2, this.canvas.height / 2, this.radius - 10, -Math.PI / 2 , - Math.PI / 4 * 3, true);\n        ctx.closePath();\n        ctx.fill();\n\n\n    }\n\n\n    // drawDivision(division, length, drawNumbers) {\n    //     for (let i = 0; i < division; i++) {\n    //         let baseAngle = 2 * Math.PI / division * i;\n    //         let angleOffset = -this.props.heading * Math.PI / 180;\n\n\n    //         this.drawHelper.drawCompassLine(this.origin, baseAngle + angleOffset, this.radius, length)\n    //         if (drawNumbers) {\n    //             let angleText = mod(baseAngle / Math.PI * 180, 360);\n    //             this.drawHelper.drawAngleText(this.origin, baseAngle + angleOffset, this.radius - length, angleText.toFixed(0))\n    //         }\n    //     }\n    // }\n    render() {\n        return <div className=\"container\" style={{ width: this.props.width + \"px\", height: this.props.height + \"px\" }}>\n            {/* <NumberDisplay\n                className=\"number\"\n                value={this.props.heading}\n                suffix=\"°\"\n                unit=\"T\"\n                width={this.props.width}\n                height={this.props.height / 3 * 2}\n                upperBound={360}\n                decimalPlaces={1}\n                fontSize={this.props.width / 4}\n            /> */}\n            <canvas ref=\"canvas\" className=\"compassRose\" width={this.props.width} height={this.props.height} />\n        </div>\n    }\n}\n\nexport default Wind"]},"metadata":{},"sourceType":"module"}