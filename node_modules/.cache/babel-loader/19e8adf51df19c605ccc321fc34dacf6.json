{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n} // type checks for all known types\n//\n// note that:\n//\n// - check by duck-typing on a property like `isUnit`, instead of checking instanceof.\n//   instanceof cannot be used because that would not allow to pass data from\n//   one instance of math.js to another since each has it's own instance of Unit.\n// - check the `isUnit` property via the constructor, so there will be no\n//   matches for \"fake\" instances like plain objects with a property `isUnit`.\n//   That is important for security reasons.\n// - It must not be possible to override the type checks used internally,\n//   for security reasons, so these functions are not exposed in the expression\n//   parser.\n\n\nexport function isNumber(x) {\n  return typeof x === 'number';\n}\nexport function isBigNumber(x) {\n  return x && x.constructor.prototype.isBigNumber === true || false;\n}\nexport function isComplex(x) {\n  return x && _typeof(x) === 'object' && Object.getPrototypeOf(x).isComplex === true || false;\n}\nexport function isFraction(x) {\n  return x && _typeof(x) === 'object' && Object.getPrototypeOf(x).isFraction === true || false;\n}\nexport function isUnit(x) {\n  return x && x.constructor.prototype.isUnit === true || false;\n}\nexport function isString(x) {\n  return typeof x === 'string';\n}\nexport var isArray = Array.isArray;\nexport function isMatrix(x) {\n  return x && x.constructor.prototype.isMatrix === true || false;\n}\n/**\n * Test whether a value is a collection: an Array or Matrix\n * @param {*} x\n * @returns {boolean} isCollection\n */\n\nexport function isCollection(x) {\n  return Array.isArray(x) || isMatrix(x);\n}\nexport function isDenseMatrix(x) {\n  return x && x.isDenseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nexport function isSparseMatrix(x) {\n  return x && x.isSparseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nexport function isRange(x) {\n  return x && x.constructor.prototype.isRange === true || false;\n}\nexport function isIndex(x) {\n  return x && x.constructor.prototype.isIndex === true || false;\n}\nexport function isBoolean(x) {\n  return typeof x === 'boolean';\n}\nexport function isResultSet(x) {\n  return x && x.constructor.prototype.isResultSet === true || false;\n}\nexport function isHelp(x) {\n  return x && x.constructor.prototype.isHelp === true || false;\n}\nexport function isFunction(x) {\n  return typeof x === 'function';\n}\nexport function isDate(x) {\n  return x instanceof Date;\n}\nexport function isRegExp(x) {\n  return x instanceof RegExp;\n}\nexport function isObject(x) {\n  return !!(x && _typeof(x) === 'object' && x.constructor === Object && !isComplex(x) && !isFraction(x));\n}\nexport function isNull(x) {\n  return x === null;\n}\nexport function isUndefined(x) {\n  return x === undefined;\n}\nexport function isAccessorNode(x) {\n  return x && x.isAccessorNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isArrayNode(x) {\n  return x && x.isArrayNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isAssignmentNode(x) {\n  return x && x.isAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isBlockNode(x) {\n  return x && x.isBlockNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isConditionalNode(x) {\n  return x && x.isConditionalNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isConstantNode(x) {\n  return x && x.isConstantNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isFunctionAssignmentNode(x) {\n  return x && x.isFunctionAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isFunctionNode(x) {\n  return x && x.isFunctionNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isIndexNode(x) {\n  return x && x.isIndexNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isNode(x) {\n  return x && x.isNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isObjectNode(x) {\n  return x && x.isObjectNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isOperatorNode(x) {\n  return x && x.isOperatorNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isParenthesisNode(x) {\n  return x && x.isParenthesisNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isRangeNode(x) {\n  return x && x.isRangeNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isSymbolNode(x) {\n  return x && x.isSymbolNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isChain(x) {\n  return x && x.constructor.prototype.isChain === true || false;\n}\nexport function typeOf(x) {\n  var t = _typeof(x);\n\n  if (t === 'object') {\n    // JavaScript types\n    if (x === null) return 'null';\n    if (Array.isArray(x)) return 'Array';\n    if (x instanceof Date) return 'Date';\n    if (x instanceof RegExp) return 'RegExp'; // math.js types\n\n    if (isBigNumber(x)) return 'BigNumber';\n    if (isComplex(x)) return 'Complex';\n    if (isFraction(x)) return 'Fraction';\n    if (isMatrix(x)) return 'Matrix';\n    if (isUnit(x)) return 'Unit';\n    if (isIndex(x)) return 'Index';\n    if (isRange(x)) return 'Range';\n    if (isResultSet(x)) return 'ResultSet';\n    if (isNode(x)) return x.type;\n    if (isChain(x)) return 'Chain';\n    if (isHelp(x)) return 'Help';\n    return 'Object';\n  }\n\n  if (t === 'function') return 'Function';\n  return t; // can be 'string', 'number', 'boolean', ...\n}","map":{"version":3,"sources":["/home/kaappo/testit/canvas/node_modules/mathjs/es/utils/is.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","isNumber","x","isBigNumber","isComplex","Object","getPrototypeOf","isFraction","isUnit","isString","isArray","Array","isMatrix","isCollection","isDenseMatrix","isSparseMatrix","isRange","isIndex","isBoolean","isResultSet","isHelp","isFunction","isDate","Date","isRegExp","RegExp","isObject","isNull","isUndefined","undefined","isAccessorNode","isNode","isArrayNode","isAssignmentNode","isBlockNode","isConditionalNode","isConstantNode","isFunctionAssignmentNode","isFunctionNode","isIndexNode","isObjectNode","isOperatorNode","isParenthesisNode","isRangeNode","isSymbolNode","isChain","typeOf","t","type"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// type checks for all known types\n//\n// note that:\n//\n// - check by duck-typing on a property like `isUnit`, instead of checking instanceof.\n//   instanceof cannot be used because that would not allow to pass data from\n//   one instance of math.js to another since each has it's own instance of Unit.\n// - check the `isUnit` property via the constructor, so there will be no\n//   matches for \"fake\" instances like plain objects with a property `isUnit`.\n//   That is important for security reasons.\n// - It must not be possible to override the type checks used internally,\n//   for security reasons, so these functions are not exposed in the expression\n//   parser.\nexport function isNumber(x) {\n  return typeof x === 'number';\n}\nexport function isBigNumber(x) {\n  return x && x.constructor.prototype.isBigNumber === true || false;\n}\nexport function isComplex(x) {\n  return x && _typeof(x) === 'object' && Object.getPrototypeOf(x).isComplex === true || false;\n}\nexport function isFraction(x) {\n  return x && _typeof(x) === 'object' && Object.getPrototypeOf(x).isFraction === true || false;\n}\nexport function isUnit(x) {\n  return x && x.constructor.prototype.isUnit === true || false;\n}\nexport function isString(x) {\n  return typeof x === 'string';\n}\nexport var isArray = Array.isArray;\nexport function isMatrix(x) {\n  return x && x.constructor.prototype.isMatrix === true || false;\n}\n/**\n * Test whether a value is a collection: an Array or Matrix\n * @param {*} x\n * @returns {boolean} isCollection\n */\n\nexport function isCollection(x) {\n  return Array.isArray(x) || isMatrix(x);\n}\nexport function isDenseMatrix(x) {\n  return x && x.isDenseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nexport function isSparseMatrix(x) {\n  return x && x.isSparseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nexport function isRange(x) {\n  return x && x.constructor.prototype.isRange === true || false;\n}\nexport function isIndex(x) {\n  return x && x.constructor.prototype.isIndex === true || false;\n}\nexport function isBoolean(x) {\n  return typeof x === 'boolean';\n}\nexport function isResultSet(x) {\n  return x && x.constructor.prototype.isResultSet === true || false;\n}\nexport function isHelp(x) {\n  return x && x.constructor.prototype.isHelp === true || false;\n}\nexport function isFunction(x) {\n  return typeof x === 'function';\n}\nexport function isDate(x) {\n  return x instanceof Date;\n}\nexport function isRegExp(x) {\n  return x instanceof RegExp;\n}\nexport function isObject(x) {\n  return !!(x && _typeof(x) === 'object' && x.constructor === Object && !isComplex(x) && !isFraction(x));\n}\nexport function isNull(x) {\n  return x === null;\n}\nexport function isUndefined(x) {\n  return x === undefined;\n}\nexport function isAccessorNode(x) {\n  return x && x.isAccessorNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isArrayNode(x) {\n  return x && x.isArrayNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isAssignmentNode(x) {\n  return x && x.isAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isBlockNode(x) {\n  return x && x.isBlockNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isConditionalNode(x) {\n  return x && x.isConditionalNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isConstantNode(x) {\n  return x && x.isConstantNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isFunctionAssignmentNode(x) {\n  return x && x.isFunctionAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isFunctionNode(x) {\n  return x && x.isFunctionNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isIndexNode(x) {\n  return x && x.isIndexNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isNode(x) {\n  return x && x.isNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isObjectNode(x) {\n  return x && x.isObjectNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isOperatorNode(x) {\n  return x && x.isOperatorNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isParenthesisNode(x) {\n  return x && x.isParenthesisNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isRangeNode(x) {\n  return x && x.isRangeNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isSymbolNode(x) {\n  return x && x.isSymbolNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isChain(x) {\n  return x && x.constructor.prototype.isChain === true || false;\n}\nexport function typeOf(x) {\n  var t = _typeof(x);\n\n  if (t === 'object') {\n    // JavaScript types\n    if (x === null) return 'null';\n    if (Array.isArray(x)) return 'Array';\n    if (x instanceof Date) return 'Date';\n    if (x instanceof RegExp) return 'RegExp'; // math.js types\n\n    if (isBigNumber(x)) return 'BigNumber';\n    if (isComplex(x)) return 'Complex';\n    if (isFraction(x)) return 'Fraction';\n    if (isMatrix(x)) return 'Matrix';\n    if (isUnit(x)) return 'Unit';\n    if (isIndex(x)) return 'Index';\n    if (isRange(x)) return 'Range';\n    if (isResultSet(x)) return 'ResultSet';\n    if (isNode(x)) return x.type;\n    if (isChain(x)) return 'Chain';\n    if (isHelp(x)) return 'Help';\n    return 'Object';\n  }\n\n  if (t === 'function') return 'Function';\n  return t; // can be 'string', 'number', 'boolean', ...\n}"]},"metadata":{},"sourceType":"module"}