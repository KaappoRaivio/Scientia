{
  "_from": "mathjs",
  "_id": "mathjs@6.6.4",
  "_inBundle": false,
  "_integrity": "sha512-fvmP89ujJbDAC8ths7FZh7PWdA71dfA5WJVAzJbQhSDCHK1aBk8WRf1XcTw51ERs+sKx9nYBGsRshqmb/oe8Ag==",
  "_location": "/mathjs",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "mathjs",
    "fetchSpec": "latest",
    "name": "mathjs",
    "raw": "mathjs",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/mathjs/-/mathjs-6.6.4.tgz",
  "_shasum": "f3217dc17eec9e7ebb7a3b2966c06a6061197ae7",
  "_spec": "mathjs",
  "_where": "/home/kaappo/testit/canvas",
  "author": {
    "email": "wjosdejong@gmail.com",
    "name": "Jos de Jong",
    "url": "https://github.com/josdejong"
  },
  "bin": {
    "mathjs": "bin/cli.js"
  },
  "bugs": {
    "url": "https://github.com/josdejong/mathjs/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "complex.js": "^2.0.11",
    "decimal.js": "^10.2.0",
    "escape-latex": "^1.2.0",
    "fraction.js": "^4.0.12",
    "javascript-natural-sort": "^0.7.1",
    "seed-random": "^2.2.0",
    "tiny-emitter": "^2.1.0",
    "typed-function": "^1.1.1"
  },
  "deprecated": false,
  "description": "Math.js is an extensive math library for JavaScript and Node.js. It features a flexible expression parser with support for symbolic computation, comes with a large set of built-in functions and constants, and offers an integrated solution to work with different data types like numbers, big numbers, complex numbers, fractions, units, and matrices.",
  "devDependencies": {
    "@babel/core": "7.9.0",
    "@babel/plugin-transform-object-assign": "7.8.3",
    "@babel/preset-env": "7.9.5",
    "@babel/register": "7.9.0",
    "babel-loader": "8.1.0",
    "benchmark": "2.1.4",
    "codecov": "3.6.5",
    "del": "5.1.0",
    "expr-eval": "2.0.2",
    "fancy-log": "1.3.3",
    "glob": "7.1.6",
    "gulp": "4.0.2",
    "gulp-babel": "8.0.0",
    "handlebars": "4.7.6",
    "istanbul": "0.4.5",
    "jsep": "0.3.4",
    "karma": "4.4.1",
    "karma-browserstack-launcher": "1.5.1",
    "karma-firefox-launcher": "1.3.0",
    "karma-mocha": "1.3.0",
    "karma-mocha-reporter": "2.2.5",
    "karma-webpack": "4.0.2",
    "math-expression-evaluator": "1.2.22",
    "mkdirp": "1.0.4",
    "mocha": "7.1.1",
    "ndarray": "1.0.19",
    "ndarray-determinant": "1.0.0",
    "ndarray-gemm": "1.0.0",
    "ndarray-ops": "1.2.2",
    "ndarray-pack": "1.2.1",
    "numericjs": "1.2.6",
    "nyc": "15.0.1",
    "pad-right": "0.2.2",
    "standard": "14.3.3",
    "sylvester": "0.0.21",
    "uglify-js": "3.9.0",
    "underscore": "1.10.2",
    "webpack": "4.42.1",
    "zeros": "1.0.0"
  },
  "directories": {
    "doc": "./docs",
    "es": "./es",
    "example": "./examples",
    "lib": "./lib",
    "src": "./src",
    "test": "./test"
  },
  "engines": {
    "node": ">= 8"
  },
  "files": [
    "CONTRIBUTING.md",
    "HISTORY.md",
    "LICENSE",
    "NOTICE",
    "README.md",
    "bin",
    "core.js",
    "dist",
    "docs",
    "es",
    "examples",
    "index.js",
    "lib",
    "main",
    "number.js",
    "src"
  ],
  "homepage": "https://mathjs.org",
  "jsdelivr": "dist/math.min.js",
  "keywords": [
    "algebra",
    "bignumber",
    "complex",
    "expression",
    "fraction",
    "functions",
    "math",
    "mathematics",
    "matrix",
    "number",
    "numeric",
    "parser",
    "unit"
  ],
  "license": "Apache-2.0",
  "main": "main/es5",
  "module": "main/esm",
  "name": "mathjs",
  "optionalDependencies": {},
  "readme": "![math.js](https://raw.github.com/josdejong/mathjs/master/misc/img/mathjs.png)\n\n[https://mathjs.org](https://mathjs.org)\n\nMath.js is an extensive math library for JavaScript and Node.js. It features a flexible expression parser with support for symbolic computation, comes with a large set of built-in functions and constants, and offers an integrated solution to work with different data types like numbers, big numbers, complex numbers, fractions, units, and matrices. Powerful and easy to use.\n\n[![Version](https://img.shields.io/npm/v/mathjs.svg)](https://www.npmjs.com/package/mathjs)\n[![Downloads](https://img.shields.io/npm/dm/mathjs.svg)](https://www.npmjs.com/package/mathjs)\n[![Build Status](https://img.shields.io/travis/josdejong/mathjs/master.svg)](https://travis-ci.org/josdejong/mathjs)\n[![Greenkeeper badge](https://badges.greenkeeper.io/josdejong/mathjs.svg)](https://greenkeeper.io/)\n[![Maintenance](https://img.shields.io/maintenance/yes/2020.svg)](https://github.com/josdejong/mathjs/graphs/commit-activity)\n[![License](https://img.shields.io/github/license/josdejong/mathjs.svg)](https://github.com/josdejong/mathjs/blob/master/LICENSE)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fjosdejong%2Fmathjs.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Fjosdejong%2Fmathjs?ref=badge_shield)\n[![Slack](https://slack.bri.im/badge.svg)](https://slack.bri.im)\n\n## Features\n\n- Supports numbers, big numbers, complex numbers, fractions, units, strings, arrays, and matrices.\n- Is compatible with JavaScript's built-in Math library.\n- Contains a flexible expression parser.\n- Does symbolic computation.\n- Comes with a large set of built-in functions and constants.\n- Can be used as a command line application as well.\n- Runs on any JavaScript engine.\n- Is easily extensible.\n- Open source.\n\n## Usage\n\nMath.js can be used in both node.js and in the browser.\n\nInstall math.js using [npm](https://www.npmjs.com/package/mathjs):\n\n    npm install mathjs\n\n> Note that when using mathjs in a TypeScript project, you will have to install type definition files too: `npm install @types/mathjs`.\n\nOr download mathjs via one of the CDN's listed on the downloads page:\n\n&nbsp;&nbsp;&nbsp;&nbsp;[https://mathjs.org/download.html](https://mathjs.org/download.html#download)\n\nMath.js can be used similar to JavaScript's built-in Math library. Besides that,\nmath.js can evaluate\n[expressions](https://mathjs.org/docs/expressions/index.html)\nand supports\n[chained operations](https://mathjs.org/docs/core/chaining.html).\n\n```js\nimport {\n  atan2, chain, derivative, e, evaluate, log, pi, pow, round, sqrt\n} from 'mathjs'\n\n// functions and constants\nround(e, 3)                    // 2.718\natan2(3, -3) / pi              // 0.75\nlog(10000, 10)                 // 4\nsqrt(-4)                       // 2i\npow([[-1, 2], [3, 1]], 2)      // [[7, 0], [0, 7]]\nderivative('x^2 + x', 'x')     // 2 * x + 1\n\n// expressions\nevaluate('12 / (2.3 + 0.7)')   // 4\nevaluate('12.7 cm to inch')    // 5 inch\nevaluate('sin(45 deg) ^ 2')    // 0.5\nevaluate('9 / 3 + 2i')         // 3 + 2i\nevaluate('det([-1, 2; 3, 1])') // -7\n\n// chaining\nchain(3)\n    .add(4)\n    .multiply(2)\n    .done()  // 14\n```\n\nSee the [Getting Started](https://mathjs.org/docs/getting_started.html) for a more detailed tutorial.\n\n\n## Browser support\n\nMath.js works on any ES5 compatible JavaScript engine: node.js, Chrome, Firefox, Safari, Edge, and IE11.\n\n\n## Documentation\n\n- [Getting Started](https://mathjs.org/docs/getting_started.html)\n- [Examples](https://mathjs.org/examples/index.html)\n- [Overview](https://mathjs.org/docs/index.html)\n- [History](https://mathjs.org/history.html)\n\n\n## Build\n\nFirst clone the project from github:\n\n    git clone git://github.com/josdejong/mathjs.git\n    cd mathjs\n\nInstall the project dependencies:\n\n    npm install\n\nThen, the project can be build by executing the build script via npm:\n\n    npm run build\n\nThis will build the library math.js and math.min.js from the source files and\nput them in the folder dist.\n\n\n## Test\n\nTo execute tests for the library, install the project dependencies once:\n\n    npm install\n\nThen, the tests can be executed:\n\n    npm test\n\nAdditionally, the tests can be run on FireFox using [headless mode](https://developer.mozilla.org/en-US/Firefox/Headless_mode):\n\n    npm run test:browser\n\nTo run the tests remotely on BrowserStack, first set the environment variables `BROWSER_STACK_USERNAME` and `BROWSER_STACK_ACCESS_KEY` with your username and access key and then execute:\n\n    npm run test:browserstack\n\nTo test code coverage of the tests:\n\n    npm run coverage\n\nTo see the coverage results, open the generated report in your browser:\n\n    ./coverage/lcov-report/index.html\n\n\n### Continuous integration testing\n\nContinuous integration tests are run on [Travis CI](https://travis-ci.org/) and [BrowserStack](https://www.browserstack.com) every time a commit is pushed to github.\nThe test results can be checked on https://travis-ci.org/josdejong/mathjs. Travis CI runs the tests for different versions of node.js, and BrowserStack runs the tests are run on all major browsers.\n\n[![Travis CI](https://raw.github.com/josdejong/mathjs/develop/misc/Travis-CI-logo.png)](https://travis-ci.org/) &nbsp;&nbsp;&nbsp;\n[![BrowserStack](https://raw.github.com/josdejong/mathjs/master/misc/browserstack.png)](https://www.browserstack.com)\n\nThanks Travis CI and BrowserStack for the generous free hosting of this open source project!\n\n## License\n\nCopyright (C) 2013-2020 Jos de Jong <wjosdejong@gmail.com>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/josdejong/mathjs.git"
  },
  "scripts": {
    "build": "gulp",
    "build-and-test": "npm run build && npm run test:all && npm run lint",
    "compile": "gulp compile",
    "coverage": "nyc --reporter=lcov --reporter=text-summary mocha test/unit-tests --recursive --require @babel/register && echo \"\nDetailed coverage report is available at ./coverage/lcov-report/index.html\"",
    "lint": "standard --env=mocha --env=worker",
    "prepare": "npm run build",
    "prepublishOnly": "npm run test:all && npm run lint",
    "test": "npm run test:src && npm run lint",
    "test:all": "npm run test:src && npm run test:generated && npm run test:node",
    "test:browser": "karma start test/browser-test-config/local-karma.js",
    "test:browserstack": "karma start test/browser-test-config/browserstack-karma.js",
    "test:generated": "mocha test/generated-code-tests --recursive --require @babel/register --forbid-only",
    "test:node": "mocha test/node-tests/*.test.js test/node-tests/**/*.test.js --recursive --forbid-only",
    "test:src": "mocha test/unit-tests --recursive --require @babel/register --forbid-only",
    "update-authors": "node ./tools/update-authors.js",
    "validate:ascii": "gulp validate:ascii",
    "watch": "gulp watch"
  },
  "sideEffects": false,
  "unpkg": "dist/math.min.js",
  "version": "6.6.4"
}
